name: 'Help Center'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/help/faqs
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: FAQs
      subgroupDescription: ''
      title: 'Get All FAQs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_ids:
        name: category_ids
        description: 'array optional Array of category ids.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        custom: []
      query:
        name: query
        description: 'optional Search query.'
        required: false
        example: 'How to ...'
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      category_ids: '1,2,3'
      query: 'How to ...'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kDch36fe65gvd8V1aabE4ZP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/help/faq_categories
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: FAQs
      subgroupDescription: ''
      title: 'Get All FAQs Categories'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4DZch5av8P6gVE6a1fb3ked'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/help/support_requests
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Get My Support Requests'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'optional Status of support request.'
        required: false
        example: '0=pending,1=in progress,2=pending info,3=closed,4=reopened,5=invalid'
        type: string
        enumValues: []
        custom: []
      category_ids:
        name: category_ids
        description: 'optional Array of category ids.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        custom: []
      query:
        name: query
        description: 'optional Search query.'
        required: false
        example: 'my support request'
        type: string
        enumValues: []
        custom: []
      limit:
        name: limit
        description: 'optional Limit of results per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      status: '0=pending,1=in progress,2=pending info,3=closed,4=reopened,5=invalid'
      category_ids:
        - 1
        - 2
        - 3
      query: 'my support request'
      limit: 10
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 56gdvcfZVheaPk3a64E18Db'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/help/support_requests/raise
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Raise Support Request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: 'Category id.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      title:
        name: title
        description: 'Title of support request.'
        required: true
        example: 'My support request'
        type: string
        enumValues: []
        custom: []
      message:
        name: message
        description: 'Message to send.'
        required: true
        example: 'This is my message'
        type: string
        enumValues: []
        custom: []
      media_ids:
        name: media_ids
        description: 'optional Array of media ids.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        custom: []
    cleanBodyParameters:
      category_id: 1
      title: 'My support request'
      message: 'This is my message'
      media_ids:
        - 1
        - 2
        - 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dg18V6DaPcfEZ64ak35bhev'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/help/support_requests/{support_request_id}/reply'
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Reply to Support Request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      support_request_id:
        name: support_request_id
        description: 'The ID of the support request.'
        required: true
        example: 15
        type: integer
        enumValues: []
        custom: []
      id:
        name: id
        description: 'Support Request ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      support_request_id: 15
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      message:
        name: message
        description: 'Message to send.'
        required: true
        example: 'This is my message'
        type: string
        enumValues: []
        custom: []
      media_ids:
        name: media_ids
        description: 'optional Array of media ids.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        custom: []
    cleanBodyParameters:
      message: 'This is my message'
      media_ids:
        - 1
        - 2
        - 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": {},
          "request": {}
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kcEv6d1PDZe543fVbh8gaa6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/help/support_requests/{support_request_id}/messages'
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Get Messages of Support Request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      support_request_id:
        name: support_request_id
        description: 'The ID of the support request.'
        required: true
        example: 11
        type: integer
        enumValues: []
        custom: []
      id:
        name: id
        description: 'Support Request ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      support_request_id: 11
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P4hvfkDda6gZEa31be8V56c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/help/support_requests/{support_request_id}/resolve'
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Resolve Support Request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      support_request_id:
        name: support_request_id
        description: 'The ID of the support request.'
        required: true
        example: 8
        type: integer
        enumValues: []
        custom: []
      id:
        name: id
        description: 'Support Request ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      support_request_id: 8
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Support request resolved and closed"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4hV3EZP5fgkDa1a6db6evc8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/help/support_requests/categories
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Get Support Request Categories'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'optional Type of support request category.'
        required: false
        example: 'complain,bug,feature_request,others'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      type: 'complain,bug,feature_request,others'
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4dVafg6Ev6Zh8aP51beD3ck'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/help/support_requests/attach
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Upload Attachments(Images) for Support Messages'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      images:
        name: images
        description: 'The images to upload.'
        required: true
        example: null
        type: file
        enumValues: []
        custom: []
    cleanBodyParameters: []
    fileParameters:
      images: null
    responses:
      -
        status: 200
        content: |-
          {
          "uploaded": [
              {
                 "id": 1,
                 "name": "image.jpg",
                 "url": "http://localhost:8000/storage/user_uploads/1/image.jpg",
                 "size": 12345,
                 "type": "image/jpeg"
             }
          ]
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: '{"errors": ["images": ["The images field is required."] ]}'
        headers: []
        description: 'Invalid Form Fields'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gv3DcadEa5fh864kebP6V1Z'
    controller: null
    method: null
    route: null
    custom: []
