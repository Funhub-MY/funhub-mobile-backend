name: 'Help Center'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/help/faqs
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: FAQs
      subgroupDescription: ''
      title: 'Get All FAQs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_ids:
        name: category_ids
        description: 'array optional Array of category ids.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      query:
        name: query
        description: 'optional Search query.'
        required: false
        example: 'How to ...'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      category_ids: '1,2,3'
      query: 'How to ...'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k348vea15VfcgPd6DbahZE6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/help/faq_categories
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: FAQs
      subgroupDescription: ''
      title: 'Get All FAQs Categories'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Efh1Vv4k8eD6Paa5bZgc3d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/help/support_requests
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Get My Support Requests'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'optional Status of support request.'
        required: false
        example: '0=pending,1=in progress,2=pending info,3=closed,4=reopened,5=invalid'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      category_ids:
        name: category_ids
        description: 'optional Array of category ids.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        custom: []
      query:
        name: query
        description: 'optional Search query.'
        required: false
        example: 'my support request'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'optional Limit of results per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      status: '0=pending,1=in progress,2=pending info,3=closed,4=reopened,5=invalid'
      category_ids:
        - 1
        - 2
        - 3
      query: 'my support request'
      limit: 10
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eb4h6a8f3EV6a15PZvDckgd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/help/support_requests/raise
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Raise Support Request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: 'Category id.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      title:
        name: title
        description: 'Title of support request.'
        required: true
        example: 'My support request'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      message:
        name: message
        description: 'Message to send.'
        required: true
        example: 'This is my message'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      media_ids:
        name: media_ids
        description: 'optional Array of media ids.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      category_id: 1
      title: 'My support request'
      message: 'This is my message'
      media_ids:
        - 1
        - 2
        - 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D3cVkdgvaP6eEb8Z5hfa614'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/help/support_requests/{support_request_id}/reply'
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Reply to Support Request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      support_request_id:
        name: support_request_id
        description: 'The ID of the support request.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'Support Request ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      support_request_id: 2
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      message:
        name: message
        description: 'Message to send.'
        required: true
        example: 'This is my message'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      media_ids:
        name: media_ids
        description: 'optional Array of media ids.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      message: 'This is my message'
      media_ids:
        - 1
        - 2
        - 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": {},
          "request": {}
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kfdVah6D6v1c8bEZPa5g43e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/help/support_requests/{support_request_id}/messages'
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Get Messages of Support Request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      support_request_id:
        name: support_request_id
        description: 'The ID of the support request.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'Support Request ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      support_request_id: 10
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EVP1ZDkc3v64hb8a6adfge5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/help/support_requests/{support_request_id}/resolve'
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Resolve Support Request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      support_request_id:
        name: support_request_id
        description: 'The ID of the support request.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'Support Request ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      support_request_id: 2
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Support request resolved and closed"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3PDfd5gb6hZV1eE864vakca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/help/support_requests/categories
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Get Support Request Categories'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'optional Type of support request category.'
        required: false
        example: 'complain,bug,feature_request,others'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      type: 'complain,bug,feature_request,others'
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/help/support_requests/categories could not be found.",
              "exception": "Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException",
              "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/AbstractRouteCollection.php",
              "line": 44,
              "trace": [
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/CompiledRouteCollection.php",
                      "line": 144,
                      "function": "handleMatchedRoute",
                      "class": "Illuminate\\Routing\\AbstractRouteCollection",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 753,
                      "function": "match",
                      "class": "Illuminate\\Routing\\CompiledRouteCollection",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 740,
                      "function": "findRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 729,
                      "function": "dispatchToRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 190,
                      "function": "dispatch",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 141,
                      "function": "Illuminate\\Foundation\\Http\\{closure}",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php",
                      "line": 19,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Livewire\\DisableBrowserCache",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php",
                      "line": 31,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php",
                      "line": 40,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TrimStrings",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php",
                      "line": 27,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php",
                      "line": 86,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php",
                      "line": 62,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Http\\Middleware\\HandleCors",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php",
                      "line": 39,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Http\\Middleware\\TrustProxies",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 116,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 165,
                      "function": "then",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 134,
                      "function": "sendRequestThroughRouter",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 299,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 287,
                      "function": "callLaravelOrLumenRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 92,
                      "function": "makeApiCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 45,
                      "function": "makeResponseCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 35,
                      "function": "makeResponseCallIfConditionsPass",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 209,
                      "function": "__invoke",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 163,
                      "function": "iterateThroughStrategies",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 95,
                      "function": "fetchResponses",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 124,
                      "function": "processRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 71,
                      "function": "extractEndpointsInfoFromLaravelApp",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 49,
                      "function": "extractEndpointsInfoAndWriteToDisk",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php",
                      "line": 51,
                      "function": "get",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 36,
                      "function": "handle",
                      "class": "Knuckles\\Scribe\\Commands\\GenerateDocumentation",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php",
                      "line": 41,
                      "function": "Illuminate\\Container\\{closure}",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 93,
                      "function": "unwrapIfClosure",
                      "class": "Illuminate\\Container\\Util",
                      "type": "::"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 35,
                      "function": "callBoundMethod",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php",
                      "line": 661,
                      "function": "call",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 183,
                      "function": "call",
                      "class": "Illuminate\\Container\\Container",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php",
                      "line": 326,
                      "function": "execute",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 152,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Command\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php",
                      "line": 1063,
                      "function": "run",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php",
                      "line": 320,
                      "function": "doRunCommand",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php",
                      "line": 174,
                      "function": "doRun",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php",
                      "line": 102,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php",
                      "line": 155,
                      "function": "run",
                      "class": "Illuminate\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/Users/stevenyew/Projects/funhub-mobile-backend/artisan",
                      "line": 35,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Console\\Kernel",
                      "type": "->"
                  }
              ]
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6fhD5Vdba1v8c6agE4Pek3Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/help/support_requests/attach
    metadata:
      groupName: 'Help Center'
      groupDescription: ''
      subgroup: 'Support Requests'
      subgroupDescription: ''
      title: 'Upload Attachments(Images) for Support Messages'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      images:
        name: images
        description: 'The images to upload.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      images: null
    responses:
      -
        status: 200
        content: |-
          {
          "uploaded": [
              {
                 "id": 1,
                 "name": "image.jpg",
                 "url": "http://localhost:8000/storage/user_uploads/1/image.jpg",
                 "size": 12345,
                 "type": "image/jpeg"
             }
          ]
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: '{"errors": ["images": ["The images field is required."] ]}'
        headers: []
        description: 'Invalid Form Fields'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d6aEkabecvg4P8365hfV1ZD'
    controller: null
    method: null
    route: null
    custom: []
