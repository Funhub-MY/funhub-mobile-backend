name: Campaigns
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/campaigns/active
    metadata:
      groupName: Campaigns
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Active Campaigns'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "has_active_campaign": true,
          "campaigns": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VahdPg66ZbDe8c41k3fv5aE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/campaigns/save/single_aswer
    metadata:
      groupName: Campaigns
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Save Single Answer to a Question'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      question_id:
        name: question_id
        description: 'The ID of the question.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      answer:
        name: answer
        description: 'The answer to the question.'
        required: true
        example: Yes/A/B/C/D/Text
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      question_id: 1
      answer: Yes/A/B/C/D/Text
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Answer saved successfully"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cbfD6d54VEvZP86a3eagh1k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/campaigns/answers_by_campaign_brand
    metadata:
      groupName: Campaigns
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get My Answers by Campaign and Brand'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      campaign_id:
        name: campaign_id
        description: 'The ID of the campaign.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brand:
        name: brand
        description: 'The brand of the campaign.'
        required: true
        example: 'Brand A'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      campaign_id: 1
      brand: 'Brand A'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "campaign": {},
          "answers": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V8aa1bDdhfc6Zvk436egP5E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/campaigns/questions_by_campaign
    metadata:
      groupName: Campaigns
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Questions by Campaign'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      campaign_id:
        name: campaign_id
        description: 'The ID of the campaign.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      campaign_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "campaign": {},
          "questions": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6c516gfvdD4EP3aZakeVb8h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/campaigns/questions_by_brand_campaign
    metadata:
      groupName: Campaigns
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Questions by Campaign and Brand'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      brand:
        name: brand
        description: 'The brand of the campaign.'
        required: true
        example: 'Brand A'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      campaign_id:
        name: campaign_id
        description: 'The ID of the campaign.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      brand: 'Brand A'
      campaign_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "campaign": {},
          "questions": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a86k4PZecfV65av1hEbdg3D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/campaigns/save/respondant_details
    metadata:
      groupName: Campaigns
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Respondant Details'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      campaign_id:
        name: campaign_id
        description: 'The ID of the campaign.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the respondant.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email of the respondant. Example:'
        required: true
        example: johnnie.medhurst@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'The phone of the respondant.'
        required: true
        example: '0123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ic:
        name: ic
        description: 'The ic of the respondant.'
        required: true
        example: '123456789012'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: 'The address of the respondant.'
        required: true
        example: '123, Jalan ABC, 12345, Kuala Lumpur'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      campaign_id: 1
      name: 'John Doe'
      email: johnnie.medhurst@example.com
      phone: '0123456789'
      ic: '123456789012'
      address: '123, Jalan ABC, 12345, Kuala Lumpur'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Respondant details created successfully"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 64gekh3DavZEbPcV86d15fa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/campaigns/respondant_details
    metadata:
      groupName: Campaigns
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Respondant Details of User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      campaign_id:
        name: campaign_id
        description: 'The ID of the campaign.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      campaign_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "respondant_details": {},
          "has_submitted_respondant_details": true
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aZ65keh8V3gPDcad4vb6Ef1'
    controller: null
    method: null
    route: null
    custom: []
