name: Merchant
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/merchant_banners
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: Banners
      subgroupDescription: ''
      title: 'Get Banners'
      description: 'Get a list of published merchant banners ordered by ascending order.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
               {
                   "id": 1,
                   "title": "New Year Sale",
                   "link_to": "https://example.com/sale",
                   "banner_url": "https://example.com/images/banner.jpg",
                   "created_at": "2025-01-09T04:25:36.000000Z"
               }
           ]
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hcZfbD68e31kg45VdP6vaEa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/public_offers
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Web - Get Public Offers'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_ids:
        name: category_ids
        description: 'array optional Category Ids to Filter.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      merchant_offer_ids:
        name: merchant_offer_ids
        description: 'array optional Merchant Offer Ids to Filter.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      city:
        name: city
        description: 'optional Filter by City.'
        required: false
        example: 'Subang Jaya'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      state:
        name: state
        description: 'optional Filter by State.'
        required: false
        example: Selangor
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lat:
        name: lat
        description: 'optional Filter by Lat of User (must provide lng).'
        required: false
        example: 3.123456
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lng:
        name: lng
        description: 'optional Filter by Lng of User (must provide lat).'
        required: false
        example: 101.123456
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      radius:
        name: radius
        description: 'optional Filter by Radius (in meters) if provided lat, lng.'
        required: false
        example: 10000
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      available_only:
        name: available_only
        description: 'boolean optional Filter by Available Only.'
        required: false
        example: 'true or 0'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      coming_soon_only:
        name: coming_soon_only
        description: 'boolean optional Filter by Coming Soon Only.'
        required: false
        example: 'true or 0'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      category_ids: '1,2,3'
      merchant_offer_ids: '1,2,3'
      city: 'Subang Jaya'
      state: Selangor
      lat: 3.123456
      lng: 101.123456
      radius: 10000
      available_only: 'true or 0'
      coming_soon_only: 'true or 0'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":7636,"sku":"SoYoung001-49-C001-4872","merchant_id":264,"store":{"id":null,"name":null},"stores":[{"id":3958,"name":"SoYoung Malaysia \u6fc3\u3044\u8c46\u4e73 @ Seri Kembangan","address":"Jalan Simfoni 1","ratings":"0.0","total_ratings":0,"address_postcode":"43300","lat":"3.02655830","lng":"101.75286160","is_hq":0,"state":{"id":12,"country_id":131,"code":"SGR","name":"Selangor","name_translation":"{\"en\": \"Selangor\", \"zh\": \"\u96ea\u5170\u83aa\"}","created_at":"2023-04-09T23:44:27.000000Z","updated_at":"2023-04-09T23:44:27.000000Z"},"country":{"id":131,"code":"MY","name":"Malaysia","phone_code":"60"}},{"id":3957,"name":"SoYoung Malaysia \u6fc3\u3044\u8c46\u4e73 @ TRX","address":"Grand Staircase","ratings":"5.0","total_ratings":1,"address_postcode":"55100","lat":"3.14257190","lng":"101.71802400","is_hq":0,"state":{"id":14,"country_id":131,"code":"KUL","name":"W.P. Kuala Lumpur","name_translation":"{\"en\": \"W.P. Kuala Lumpur\", \"zh\": \"\u5409\u9686\u5761\"}","created_at":"2023-04-09T23:44:27.000000Z","updated_at":"2023-04-09T23:44:27.000000Z"},"country":{"id":131,"code":"MY","name":"Malaysia","phone_code":"60"}}],"logo":null,"merchant":{"id":264,"logo":"https:\/\/funhub-dev.s3.ap-southeast-1.amazonaws.com\/160736\/ph0wWwvzoiioVs2u0NpNPgEX9TipZ0-metaTWVyY2hhbnQgTG9nbyBwbGFjZW1lbnQgKDc2KS5wbmc%3D-.png","brand_name":"SoYoung \u6fc3\u3044\u8c46\u4e73","business_name":"MOS F&B MARKETING SDN BHD ","business_phone_no":"012-2216809","user":{"id":27919,"name":"SoYoung \u6fc3\u3044\u8c46\u4e73"}},"name":"SoYoung - \u51ac\u5b63\u306e\u521d\u96ea\u00b7\u6fc3\u8c46\u4e73\u96ea\u82b1\u51b0","is_flash":0,"description":"\u2744\ufe0f SoYoung | \u51ac\u5b63\u306e\u521d\u96ea\u00b7\u6fc3\u8c46\u4e73\u96ea\u82b1\u51b0 \u2744\ufe0f\n Snowy Shirayuki (Japanese Soymilk Bingsu)\n\u2728  \u4ee5\u8c46\u6d46\u4e3a\u57fa\u5e95\u7684\u7eaf\u51c0\u96ea\u82b1\uff0c\u7115\u53d1\u6d3b\u529b\uff0c\u4ee4\u4eba\u5fc3\u65f7\u795e\u6021\u3002\n \u7cbe\u9009\u65e5\u672c\u8c46\u4e73\uff0c\u6253\u9020\u6210\u5982\u96ea\u82b1\u822c\u7ec6\u817b\u8f7b\u76c8\u7684\u5228\u51b0\uff0c\u6e05\u51c9\u7684\u53e3\u611f\u4e0e\u6d53\u90c1\u7684\u8c46\u9999\u5728\u820c\u5c16\u5b8c\u7f8e\u878d\u5408\uff0c\u50cf\u51ac\u5b63\u7684\u7b2c\u4e00\u573a\u96ea\uff0c\u8f7b\u67d4\u548c\u6c81\u4eba\u5fc3\u813e\u3002\n\ud83c\udf67 \u81ea\u9009\u4e09\u79cd\u4e92\u8865\u7684\u5947\u7279\u914d\u6599\u3002\n\u9009\u62e9\u60a8\u6700\u559c\u6b22\u7684\u4e09\u79cd\u914d\u6599\uff0c\u521b\u9020\u5c5e\u4e8e\u60a8\u81ea\u5df1\u7684\u72ec\u7279\u98ce\u5473\u96ea\u82b1\u51b0\uff1a\n\n \ud83c\udf1f \u591c\u660e\u73e0\uff1aQ\u5f39\u723d\u6ed1\uff0c\u56bc\u51fa\u4e1d\u4e1d\u7518\u751c\n \ud83c\udf3f \u5ae9\u4ed9\u8349\uff1a\u8426\u7ed5\u7740\u6de1\u6de1\u7684\u6e05\u9999\u548c\u6e05\u65b0\uff0c\u5e76\u5e26\u6709\u70df\u718f\u7684\u5473\u9053\u3002\n \ud83d\udc8e \u6c34\u6676\u73cd\u73e0\uff1a\u6676\u83b9\u5254\u900f\uff0c\u6dc0\u7c89\u9b54\u828b\u8000\u773c\u593a\u76ee\n \ud83c\udf30 \u7119\u70e4\u9ed1\u829d\u9ebb\uff1a\u8c46\u6d46\u7684\u6d53\u90c1\u9999\u6c14\u4e0e\u7eaf\u9ed1\u829d\u9ebb\u7684\u575a\u679c\u98ce\u5473\u5b8c\u7f8e\u878d\u5408 \n \ud83c\udf6c\u9ed1\u7cd6\u9ebb\u85af & \u8f6f\u719f\u8d64\u5c0f\u8c46\uff1a \u7ecf\u5178\u7684\u751c\u5473\u4e00\u5b9a\u4f1a\u4fd8\u83b7\u4f60\u7684\u5fc3\u3002\n \ud83c\udf60 \u7d2b\u828b\u4e38\u5b50 & \u51b2\u7ef3\u7d2b\u85af\u4e38\u5b50\uff1a\u8f6f\u7cef\u9999\u751c\uff0c\u8d28\u5730\u8bf1\u4eba\n \ud83c\udf75 \u62b9\u8336\u4e38\u5b50 & \u7f8e\u56fd\u674f\u4ec1\u679c\uff1a\u72ec\u7279\u7684\u8336\u9999\u548c\u575a\u679c\u5473\uff0c\u4e30\u5bcc\u4e86\u5473\u89c9\u611f\u53d7\u3002\n\ud83d\udcab \u6bcf\u4e00\u53e3\uff0c\u90fd\u662f\u4e00\u573a\u51ac\u65e5\u7684\u751c\u871c\u65c5\u884c\u3002\n \u51ac\u5b63\u306e\u521d\u96ea\u00b7\u6fc3\u8c46\u4e73\u96ea\u82b1\u51b0\u5728\u9a6c\u6765\u897f\u4e9a\u4e3a\u4f60\u5e26\u6765\u4e0d\u4e00\u6837\u7684\u51b0\u96ea\u5947\u7f18\u3002\n\ud83c\udf28\ufe0fSnowy Shirayuki \u5c06\u60a8\u5e26\u5165\u68a6\u5e7b\u822c\u7684\u767d\u96ea\u4ed9\u5883\uff0c\u8fd9\u662f\u4e00\u6b21\u8ba9\u60a8\u7ec8\u751f\u96be\u5fd8\u7684\u751c\u871c\u51ac\u65e5\u4e4b\u65c5\uff0c\u53ea\u5728 SoYoung Malaysia\uff01\n\n\u3010SoYoung\u3011\n\n\ud83c\udf31SoYoung (HQ)\n\ud83d\udccd2, Jalan Simfoni 1, Balakong, 43300 Seri Kembangan, Selangor\n\ud83d\udd5211am-10pm (Mon-Thurs)\n\ud83d\udd5211am-10:30pm (Fri-Sun)\n\u260e\ufe0f012-518 5355\n\n\ud83c\udf31 SoYoung (The Exchange TRX)\n\ud83d\udccdC.OS.05, Level Concourse, Persiaran TRX, Tun Razak Exchange, 55188 Kuala Lumpur, Wilayah Persekutuan Kuala Lumpur. \n\ud83d\udd5210am-10pm (Mon to Sun)\n\u260e\ufe0f012-252 6845\n","fine_print":"1. \u53ea\u9650\u5e97\u5185\u7528\u9910\u53ef\u4f7f\u7528\n2. \u4e00\u5f20\u684c\u5b50\u53ea\u80fd\u5151\u6362\u4e00\u4efd\n3. \u6bcf\u5f20\u4f18\u60e0\u52381\u5929\u53ea\u80fd\u5151\u63621\u6b21\uff0c\u5982\u9700\u5151\u6362\u7b2c\u4e8c\u5f20\u987b\u6539\u65e5\u4f7f\u7528\n4. \u6b64\u4f18\u60e0\u5238\u4e0d\u53ef\u4e0e\u5176\u4ed6\u4f18\u60e0\u5238\u3001\u4fc3\u9500\u6d3b\u52a8\u3001\u6298\u6263\u6216\u7279\u522b\u4f18\u60e0\u540c\u65f6\u4f7f\u7528\uff0c\u4e14\u4e25\u7981\u5206\u5355\n","redemption_policy":"1. \u8be5\u4f18\u60e0\u5238\u81ea\u9884\u8ba2\u786e\u8ba4\u4e4b\u65e5\u8d77 30 \u5929\u5185\u6709\u6548\u3002\u6700\u540e\u4e00\u592923:59\u5230\u671f\n2. \u4f18\u60e0\u5238\u4e0d\u53ef\u4e0e\u4efb\u4f55\u5176\u4ed6\u6298\u6263\u540c\u65f6\u4f7f\u7528\uff0c\u5305\u62ec\u4f1a\u5458\u6298\u6263\n3. \u4f18\u60e0\u5238\u4e0d\u53ef\u5151\u6362\u73b0\u91d1\n4. \u4f18\u60e0\u5238\u53ea\u80fd\u901a\u8fc7 FUNHUB App \u5151\u6362\/\u4f7f\u7528\n5. \u4f18\u60e0\u5238\u53ea\u80fd\u5151\u6362\u4e00\u6b21\n6. \u6bcf\u5f20\u8d26\u5355\u9650\u7528 1 \u5f20\u4f18\u60e0\u5238\n","cancellation_policy":"1. \u5df2\u5151\u6362\u7684\u4f18\u60e0\u5238\u4e0d\u53ef\u968f\u610f\u53d6\u6d88\u3001\u66f4\u6539\u6216\u9000\u6b3e\u3002\n2. \u5df2\u5151\u6362\u7684\u4f18\u60e0\u5238\u4e00\u7ecf\u4f7f\u7528\u540e\uff0c\u4e0d\u53ef\u66f4\u6539\u6216\u53d6\u6d88\u3002\n3. \u5df2\u5151\u6362\u7684\u4f18\u60e0\u5238\u4ec5\u9650\u6709\u6548\u671f\u5185\u4f7f\u7528\uff0c\u903e\u671f\u5219\u4f5c\u5e9f\u4e14\u4e0d\u53ef\u8fdb\u884c\u9000\u6b3e\u3002\n4. \u82e5\u60a8\u53d1\u73b0\u4ed6\u4eba\u76d7\u7528\u60a8\u7684\u8d26\u53f7\u5e76\u4f7f\u7528\u6b64\u4f18\u60e0\u5238\uff0c\u8bf7\u8054\u7cfb\u5ba2\u670d\u7533\u8bf7\u9000\u8fd8\u996d\u76d2\u3002\n5. \u82e5\u60a8\u53bb\u6d88\u8d39\u65f6\uff0c\u56e0\u6280\u672f\u60c5\u51b5\u65e0\u6cd5\u4f7f\u7528\u6b64\u4f18\u60e0\u5238\uff0c\u8bf7\u8054\u7cfb\u5ba2\u670d\u7533\u8bf7\u9000\u8fd8\u996d\u76d2\u3002\n\n","point_cost":2,"point_fiat_price":19.9,"discounted_point_fiat_price":10,"fiat_price":19.9,"discounted_fiat_price":15,"default_purchase_method":"point","available_at":"2025-02-03 00:00:00","available_until":"2025-02-06 23:59:59","expiry_days":30,"quantity":5,"media":[{"name":"SoYoung-SD1","file_name":"5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png","uuid":"5d1c71ea-270c-4d04-b5fd-69de17248595","original_url":"https:\/\/funhub-dev.s3.ap-southeast-1.amazonaws.com\/161209\/5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png","order":null,"custom_properties":{"width":1080,"height":1440,"is_cover":false},"extension":"png","size":1746762},{"name":"SoYoung-SD1-VOUCHER","file_name":"s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc=-.png","uuid":"52e8666e-18b6-441d-8463-497e7ca8bf5c","original_url":"https:\/\/funhub-dev.s3.ap-southeast-1.amazonaws.com\/161211\/s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc%3D-.png","order":null,"custom_properties":{"width":1034,"height":331,"is_cover":false},"extension":"png","size":257340}],"horizontal_banner":{"name":"SoYoung-SD1-VOUCHER","file_name":"s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc=-.png","uuid":"52e8666e-18b6-441d-8463-497e7ca8bf5c","original_url":"https:\/\/funhub-dev.s3.ap-southeast-1.amazonaws.com\/161211\/s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc%3D-.png","order":null,"custom_properties":{"width":1034,"height":331,"is_cover":false},"extension":"png","size":257340},"vertical_banner":{"name":"SoYoung-SD1","file_name":"5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png","uuid":"5d1c71ea-270c-4d04-b5fd-69de17248595","original_url":"https:\/\/funhub-dev.s3.ap-southeast-1.amazonaws.com\/161209\/5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png","order":null,"custom_properties":{"width":1080,"height":1440,"is_cover":false},"extension":"png","size":1746762},"interactions":[],"location":null,"count":{"likes":0,"share":0,"bookmarks":0,"views":0},"categories":[],"created_at":"2024-12-13T03:53:56.000000Z","updated_at":"2025-02-02T16:04:18.000000Z","created_at_diff":"1 month ago","updated_at_diff":"1 week ago"}],"links":{"first":"https:\/\/funhub-mobile-backend.test\/api\/v1\/public_offers?page=1","last":"https:\/\/funhub-mobile-backend.test\/api\/v1\/public_offers?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"https:\/\/funhub-mobile-backend.test\/api\/v1\/public_offers?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"https:\/\/funhub-mobile-backend.test\/api\/v1\/public_offers","per_page":10,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '120'
          x-ratelimit-remaining: '107'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8kZh1Vd35afv4ED6caPb6eg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/public_offers_single
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Web - Get Single Public Offer'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'optional The id of the merchant offer.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sku:
        name: sku
        description: 'optional The id of the merchant offer.'
        required: false
        example: ABC-1234
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      sku: ABC-1234
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'This field is required when <code>sku</code> is <code>null</code>.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sku:
        name: sku
        description: 'This field is required when <code>id</code> is <code>null</code>.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 20
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "offer": {}
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dEVva3c8fgebPZ1a4kh566D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant/offers/nearby
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get Merchant Offers Nearby'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      category_ids:
        name: category_ids
        description: 'optional Merchant Category Ids to Filter.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      merchant_offer_ids:
        name: merchant_offer_ids
        description: 'optional Merchant Offer Ids to Filter. Example [1,2,3]'
        required: false
        example:
          - harum
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      city:
        name: city
        description: 'optional Filter by City Name.'
        required: false
        example: 'Subang Jaya'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      state:
        name: state
        description: 'optional Filter by State.'
        required: false
        example: Selangor
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lat:
        name: lat
        description: 'Filter by Lat of User (must provide lng).'
        required: true
        example: 3.123456
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lng:
        name: lng
        description: 'Filter by Lng of User (must provide lat).'
        required: true
        example: 101.123456
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      radius:
        name: radius
        description: 'optional Filter by Radius (in meters) if provided lat, lng.'
        required: false
        example: 10000
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      available_only:
        name: available_only
        description: 'optional Filter by Available Only.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      coming_soon_only:
        name: coming_soon_only
        description: 'optional Filter by Coming Soon Only.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      except_expired:
        name: except_expired
        description: 'optional Get all coming soon or available only but hide expired offers.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      flash_only:
        name: flash_only
        description: 'optional Filter by Flash Deals Only.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'optional Per Page Limit Override.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      category_ids:
        - 1
        - 2
        - 3
      merchant_offer_ids:
        - harum
      city: 'Subang Jaya'
      state: Selangor
      lat: 3.123456
      lng: 101.123456
      radius: 10000
      available_only: true
      coming_soon_only: true
      except_expired: true
      flash_only: true
      limit: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [],
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kbafPv86EVa6d4Zc31gehD5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant/offers/my_bookmarks
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get My Bookmarked Merchant Offers'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      filter:
        name: filter
        description: 'Column to Filter.'
        required: false
        example: 'Filterable columns are:  id, name, description, available_at, available_until, sku'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter_value:
        name: filter_value
        description: 'Value to Filter.'
        required: false
        example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Column to Sort.'
        required: false
        example: 'Sortable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'Direction to Sort.'
        required: false
        example: 'Sortable directions are: asc, desc'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Per Page Limit Override.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      offset:
        name: offset
        description: 'Offset Override.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      filter: 'Filterable columns are:  id, name, description, available_at, available_until, sku'
      filter_value: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
      sort: 'Sortable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
      order: 'Sortable directions are: asc, desc'
      limit: 10
      offset: 0
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [],
           "links": {},
           "meta": {
              "current_page": 1,
            }
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e5ch6P6kadED3v1fga48ZbV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant/offers
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get Offers'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_ids:
        name: category_ids
        description: 'optional Merchant Category Ids to Filter.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      merchant_offer_ids:
        name: merchant_offer_ids
        description: 'optional Merchant Offer Ids to Filter. Example [1,2,3]'
        required: false
        example:
          - et
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      city:
        name: city
        description: 'optional Filter by City.'
        required: false
        example: 'Subang Jaya'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      state:
        name: state
        description: 'optional Filter by State.'
        required: false
        example: Selangor
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lat:
        name: lat
        description: 'optional Filter by Lat of User (must provide lng).'
        required: false
        example: 3.123456
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lng:
        name: lng
        description: 'optional Filter by Lng of User (must provide lat).'
        required: false
        example: 101.123456
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      radius:
        name: radius
        description: 'optional Filter by Radius (in meters) if provided lat, lng.'
        required: false
        example: 10000
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      location_id:
        name: location_id
        description: 'optional Filter by Location Id.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      available_only:
        name: available_only
        description: 'optional Filter by Available Only.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      coming_soon_only:
        name: coming_soon_only
        description: 'optional Filter by Coming Soon Only.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      except_expired:
        name: except_expired
        description: 'optional Get all coming soon or available only but hide expired offers.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      flash_only:
        name: flash_only
        description: 'optional Filter by Flash Deals Only.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      merchant_id:
        name: merchant_id
        description: 'optional Filter by Merchant ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      store_id:
        name: store_id
        description: 'optional Filter by Store ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      hide_purchased:
        name: hide_purchased
        description: 'optional Hide Purchased Offers for current logged in user.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Column to Filter.'
        required: false
        example: 'Filterable columns are: id, name, description, available_at, available_until, sku'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter_value:
        name: filter_value
        description: 'Value to Filter.'
        required: false
        example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Column to Sort.'
        required: false
        example: 'Sortable columns are: id, name, description, available_at, available_until, sku, created_at, updated_at'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'Direction to Sort.'
        required: false
        example: 'Sortable directions are: asc, desc'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Per Page Limit Override.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      offset:
        name: offset
        description: 'Offset Override.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      category_ids:
        - 1
        - 2
        - 3
      merchant_offer_ids:
        - et
      city: 'Subang Jaya'
      state: Selangor
      lat: 3.123456
      lng: 101.123456
      radius: 10000
      location_id: 1
      available_only: true
      coming_soon_only: true
      except_expired: true
      flash_only: true
      merchant_id: 1
      store_id: 1
      hide_purchased: true
      filter: 'Filterable columns are: id, name, description, available_at, available_until, sku'
      filter_value: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
      sort: 'Sortable columns are: id, name, description, available_at, available_until, sku, created_at, updated_at'
      order: 'Sortable directions are: asc, desc'
      limit: 10
      offset: 0
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [],
           "links": {},
           "meta": {
              "current_page": 1,
            }
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer abc6advZeEf81Dg6PVk4h35'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/merchant/offers/claim
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Claim Offer'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      offer_id:
        name: offer_id
        description: 'Offer ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: 'Payment Method.'
        required: true
        example: points/fiat
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      fiat_payment_method:
        name: fiat_payment_method
        description: 'required_if:payment_method,fiat Payment Method.'
        required: false
        example: fpx/card
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      card_id:
        name: card_id
        description: 'required_if:fiat_payment_method,card Card ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: Quantity.
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      use_point_discount:
        name: use_point_discount
        description: 'optional Use Point(Funbox) Discount.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      points_to_use:
        name: points_to_use
        description: 'optional Points(Funbox) to Use.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      referral_code:
        name: referral_code
        description: ''
        required: false
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      wallet_type:
        name: wallet_type
        description: 'optional Wallet Type.'
        required: false
        example: TNG/FPX-CIMB
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      channel:
        name: channel
        description: 'optional Channel.'
        required: false
        example: app/funhub_web
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'optional Email for web channel to fire purchased email after successful purchase.'
        required: false
        example: john@email.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      offer_id: 1
      payment_method: points/fiat
      fiat_payment_method: fpx/card
      card_id: 1
      quantity: 1
      use_point_discount: true
      points_to_use: 2
      referral_code: perferendis
      wallet_type: TNG/FPX-CIMB
      channel: app/funhub_web
      email: john@email.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Offer Claimed"
          }
        headers: []
        description: success
        custom: []
      -
        status: 200
        content: |-
          {
          "message": "Insufficient Point Balance"
          }
        headers: []
        description: insufficient_point_balance
        custom: []
      -
        status: 200
        content: |-
          {
          "message": "Redirect to gateway",
          "gateway_data": [
               'url' => $this->url .'/payment/eCommerce',
                'secureHash' => $this->generateHashForRequest($this->mid, $invoice_no, $amount),
                'mid' => $this->mid,
                'invno' => $invoice_no,
                'capture_amt' => $amount,
                'desc' => $desc,
                'postURL' => $redirectUrl,
                'phone' => $phoneNo,
                'email' => $email,
                'param' => $param,
                'authorize' => 'authorize'
            ];
          }
        headers: []
        description: fiat_payment_mode
        custom: []
      -
        status: 200
        content: |-
          {
          "message": "Offer is no longer valid"
          }
        headers: []
        description: offer_no_longer_valid
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6a18VePkhgbE3aZ645Ddcvf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/merchant/offers/redeem
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: |-
        Redeem a Merchant Offer (In-Store)
        This is when customer with claimed merchant offer wishes to redeem in store
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      claim_id:
        name: claim_id
        description: 'Claim ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      offer_id:
        name: offer_id
        description: 'Merchant Offer ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Quantity to Redeem.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      redeem_code:
        name: redeem_code
        description: 'Redemption Code Provided by Merchant.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      claim_id: 1
      offer_id: 1
      quantity: 1
      redeem_code: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Redeemed successfully",
          "offer": {
          }
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dZV1vgPa4ec56EDfhak683b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/merchant/offers/cancel
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Cancel a Merchant Offer Transaction'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      merchant_offer_id:
        name: merchant_offer_id
        description: 'Merchant Offer ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      merchant_offer_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Transaction cancelled"
          }
        headers: []
        description: success
        custom: []
      -
        status: 200
        content: |-
          {
          "message": "You have not claimed this offer"
          }
        headers: []
        description: offer_pending_payment_not_found
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fE3v8Db4aVePgZdah1kc566'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant/offers/my_claimed_offers
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get My Merchant Offers (Logged in User)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      is_redeemed:
        name: is_redeemed
        description: 'optional Filter by Redeemed.'
        required: false
        example: 0.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_expired:
        name: is_expired
        description: 'optional Filter by Expired.'
        required: false
        example: 0.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      claim_id:
        name: claim_id
        description: 'optional Filter by Claim ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      is_redeemed: 0.0
      is_expired: 0.0
      claim_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZhV6baDafc1kE8e53P4gv6d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant/offers/last_purchase
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get Last Purchase Date of user on a Merchant User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      merchant_user_id:
        name: merchant_user_id
        description: 'Merchant User ID(merchant->user->id).'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      merchant_user_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "last_purchase_offer_id": 1,
          "last_purchase_date": "2023-08-01 12:00:00"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 166eav85ckdbZPh3ag4DfEV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant/offers/total_purchases
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get Total Quantity of Purchased Offers by User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      from_date:
        name: from_date
        description: 'optional Filter by claims created from this date (Y-m-d format).'
        required: false
        example: '2025-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      to_date:
        name: to_date
        description: 'optional Filter by claims created until this date (Y-m-d format).'
        required: false
        example: '2025-01-16'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'optional Filter by claim status (1: Success, 2: Failed, 3: Awaiting Payment).'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      from_date: '2025-01-01'
      to_date: '2025-01-16'
      status: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "total_quantity": 10
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VDdZa8faE63Ph45vcgeb1k6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/merchant/offers/{offer_id}'
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get Offer By ID'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      offer_id:
        name: offer_id
        description: 'The ID of the offer.'
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      offer_id: ipsam
    queryParameters:
      offer_id:
        name: offer_id
        description: 'Offer ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      offer_id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "offer": {}
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1khV3cZP6edg6bDvfaE584a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchants
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Merchants'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      search:
        name: search
        description: 'optional Search by business name.'
        required: false
        example: 'business name'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      categories_id:
        name: categories_id
        description: 'optional Search by categories id.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      merchant_ids:
        name: merchant_ids
        description: 'optional Search by merchant ids.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      store_ids:
        name: store_ids
        description: 'optional Search by store ids.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'optional Limit the number of results.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      search: 'business name'
      categories_id: '1,2,3'
      merchant_ids: '1,2,3'
      store_ids: '1,2,3'
      limit: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6b1368fZaVavE4hcD5gPkde'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/merchants/crm
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Merchant CRM Record'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      brand_name:
        name: brand_name
        description: 'Brand Name.'
        required: true
        example: ABC
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      pic_name:
        name: pic_name
        description: 'PIC Name.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      postcode:
        name: postcode
        description: Postcode.
        required: true
        example: '47530'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_no:
        name: phone_no
        description: 'Phone Number.'
        required: true
        example: '0123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: 'optional Address.'
        required: false
        example: '123, Jalan ABC'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      remarks:
        name: remarks
        description: 'optional Remarks(Refer By).'
        required: false
        example: KOC
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      brand_name: ABC
      pic_name: 'John Doe'
      postcode: '47530'
      phone_no: '0123456789'
      address: '123, Jalan ABC'
      remarks: KOC
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Created Merchant Contact"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6a6E14VDvkf5h3edgba8cZP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchants/rating_categories
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Merchant Rating Categories'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          data: []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v5a16hVdk8E36fZeg4acDPb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchants/nearby
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get Nearby Merchants
        Will lookup based on user provided lat,lng and search for merchant stores near user
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lat:
        name: lat
        description: Latitude.
        required: true
        example: '3.1390'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lng:
        name: lng
        description: Longitude.
        required: true
        example: '101.6869'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      radius:
        name: radius
        description: 'optional Radius in km.'
        required: false
        example: '10'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'optional Limit the number of results.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      lat: '3.1390'
      lng: '101.6869'
      radius: '10'
      limit: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kdZa6h5v84e61gfc3aVDbPE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/merchants/{merchant_id}/locations'
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Location by Merchant ID'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      merchant_id:
        name: merchant_id
        description: 'Merchant ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      merchant_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EDad5ch163vkea4bZ6fgPV8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/merchants/{merchant_id}/ratings'
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Merchant Ratings'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      merchant_id:
        name: merchant_id
        description: 'optional Only load specific merchant ratings.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      merchant:
        name: merchant
        description: 'Merchant ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      only_mine:
        name: only_mine
        description: 'boolean optional Only show my ratings.'
        required: false
        example: 'true'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'optional Only load specific user ratings.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Column to Sort.'
        required: false
        example: 'Sortable columns are: id, rating, created_at, updated_at'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'Direction to Sort.'
        required: false
        example: 'Sortable directions are: asc, desc'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Per Page Limit Override.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      merchant_id: 1
      merchant: '1'
      only_mine: 'true'
      user_id: 1
      sort: 'Sortable columns are: id, rating, created_at, updated_at'
      order: 'Sortable directions are: asc, desc'
      limit: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3daDvVPa68egk6E4fbh1Z5c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/merchants/{merchant_id}/ratings'
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Rate a Merchant'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      merchant_id:
        name: merchant_id
        description: 'The ID of the merchant.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      merchant:
        name: merchant
        description: 'Merchant ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      merchant_id: 1
      merchant: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rating:
        name: rating
        description: Rating.
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      comment:
        name: comment
        description: 'optional Comment.'
        required: false
        example: 'Good service'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      rating_category_ids:
        name: rating_category_ids
        description: 'optional Rating Category IDs.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      rating: 5
      comment: 'Good service'
      rating_category_ids: '1,2,3'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          data: {}
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6abg6Vh1afeE3D58cvZ4Pkd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/merchants/{merchant_id}/menus'
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Merchant Menus'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      merchant_id:
        name: merchant_id
        description: 'The ID of the merchant.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      merchant:
        name: merchant
        description: 'Merchant ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      merchant_id: 1
      merchant: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          [
          'https://example.com/menu1.pdf',
          'https://example.com/menu2.pdf',
          'https://example.com/menu3.pdf',
          ]
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5E31fcZgVD4d6a8vhke6baP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant_offer_categories
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offer Categories'
      subgroupDescription: ''
      title: 'Get All Merchant Offer Categories'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      is_featured:
        name: is_featured
        description: 'Is Featured Categories.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Is Active Categories.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lat:
        name: lat
        description: Latitude.
        required: false
        example: 3.139
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lng:
        name: lng
        description: Longitude.
        required: false
        example: 101.6869
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      id:
        name: id
        description: 'Get subcategories of a specific parent category by its ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      is_featured: 1
      is_active: 0
      lat: 3.139
      lng: 101.6869
      id: 1
    bodyParameters:
      limit:
        name: limit
        description: 'Per Page Limit Override.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      limit: 10
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 46P3v8Db1kaadE6gfZeh5cV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant_categories
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Categories'
      subgroupDescription: ''
      title: 'Get popular Merchant Categories'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_featured:
        name: is_featured
        description: 'Is Featured Categories.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      has_offers:
        name: has_offers
        description: 'Check if category has published offers.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      has_stores:
        name: has_stores
        description: 'Check if category has linked to stores.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      has_store_offers:
        name: has_store_offers
        description: 'Check if category has linked to offers with listed stores.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Column to Filter.'
        required: false
        example: 'Filterable columns are: id, name, created_at, updated_at'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter_value:
        name: filter_value
        description: 'Value to Filter.'
        required: false
        example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Column to Sort.'
        required: false
        example: 'Sortable columns are: id, name, created_at, updated_at'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'Direction to Sort.'
        required: false
        example: 'Sortable directions are: asc, desc'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Per Page Limit Override.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      offset:
        name: offset
        description: 'Offset Override.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      is_featured: 1
      has_offers: 1
      has_stores: 1
      has_store_offers: 1
      filter: 'Filterable columns are: id, name, created_at, updated_at'
      filter_value: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
      sort: 'Sortable columns are: id, name, created_at, updated_at'
      order: 'Sortable directions are: asc, desc'
      limit: 10
      offset: 0
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "categories": []
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: ''
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EVdDa3h56gec8v6aP4Z1kbf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/merchant_categories/{offer_id}'
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Categories'
      subgroupDescription: ''
      title: 'Get Merchant Categories by offer id'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      offer_id:
        name: offer_id
        description: 'The id of the merchant offer id.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      offer_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "categories": []
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: ''
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g4Zafb6v1eD3h6VaPdk5Ec8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/merchant-contact
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Contact'
      subgroupDescription: ''
      title: 'Submit Merchant Contact Information'
      description: 'Allows users to submit merchant contact information via the API.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the contact person.'
        required: true
        example: 'Alex Koh'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address of the contact person.'
        required: true
        example: alex@funhub.my
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tel_no:
        name: tel_no
        description: 'The telephone number of the contact person.'
        required: true
        example: '182036794'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      company_name:
        name: company_name
        description: 'The name of the company.'
        required: true
        example: 'Funhub TV'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      business_type:
        name: business_type
        description: 'The type of the business.'
        required: true
        example: others
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      other_business_type:
        name: other_business_type
        description: 'required_if:business_type,others The type of the business.'
        required: false
        example: 'IT Consult'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      message_type:
        name: message_type
        description: 'The category of the message.'
        required: true
        example: 'General Inquiry'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      message:
        name: message
        description: 'The message or remarks.'
        required: true
        example: 'This is a sample message.'
        type: text
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Alex Koh'
      email: alex@funhub.my
      tel_no: '182036794'
      company_name: 'Funhub TV'
      business_type: others
      other_business_type: 'IT Consult'
      message_type: 'General Inquiry'
      message: 'This is a sample message.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Merchant contact information submitted successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: |-
          {
          "errors": {
              "name": ["The Name field is required."],
              "email": ["The Email field must be a valid email address."],
              "tel_no": ["The Phone Number field is required."],
              "company_name": ["The Company Name field is required."],
              "business_type": ["The Business Type field is required."],
              "message_type": ["The Message Category field is required."],
              "message": ["The Message field is required."]
              }
          }
        headers: []
        description: 'Invalid Form Fields'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dEabZf6h8D65kea1vg3VPc4'
    controller: null
    method: null
    route: null
    custom: []
