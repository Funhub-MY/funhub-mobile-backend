name: Stores
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/stores
    metadata:
      groupName: Stores
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Stores'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      categories_id:
        name: categories_id
        description: 'optional Categories ID.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      merchant_ids:
        name: merchant_ids
        description: 'optional Merchant IDs.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      store_ids:
        name: store_ids
        description: 'optional Store IDs.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'optional Per Page Limit.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      categories_id: '1,2,3'
      merchant_ids: '1,2,3'
      store_ids: '1,2,3'
      limit: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1b5ec46aVaD3df8hkPZg6vE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/stores/rating_categories
    metadata:
      groupName: Stores
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Store Rating Categories'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          data: []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zda6e8a43k61cbhVEfP5gvD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/stores/locations
    metadata:
      groupName: Stores
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Store Locations by Store IDS'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      store_ids:
        name: store_ids
        description: 'Store IDs.'
        required: true
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      store_ids: '1,2,3'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      store_ids:
        name: store_ids
        description: ''
        required: true
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      store_ids: cumque
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer af46hVPav6c8bZdE13Deg5k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/stores/{store_id}/ratings'
    metadata:
      groupName: Stores
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Stores Ratings'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      store_id:
        name: store_id
        description: 'The ID of the store.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      store:
        name: store
        description: 'Store ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      only_mine:
        name: only_mine
        description: 'boolean optional Only show my ratings.'
        required: false
        example: 'true'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      user_id:
        name: user_id
        description: 'optional Only load specific user ratings.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      merchant_id:
        name: merchant_id
        description: 'optional Only load specific merchant ratings.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort:
        name: sort
        description: 'Column to Sort.'
        required: false
        example: 'Sortable columns are: id, rating, created_at, updated_at'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      order:
        name: order
        description: 'Direction to Sort.'
        required: false
        example: 'Sortable directions are: asc, desc'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'Per Page Limit Override.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      store_id: 1
      store: '1'
      only_mine: 'true'
      user_id: 1
      merchant_id: 1
      sort: 'Sortable columns are: id, rating, created_at, updated_at'
      order: 'Sortable directions are: asc, desc'
      limit: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 65vDZ3kb61Vec8hgPaEdaf4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/stores/{store_id}/ratings'
    metadata:
      groupName: Stores
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Rate a Store'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      store_id:
        name: store_id
        description: 'The ID of the store.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      store:
        name: store
        description: 'Store ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      store_id: 1
      store: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rating:
        name: rating
        description: Rating.
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      comment:
        name: comment
        description: 'optional Comment.'
        required: false
        example: 'Good service'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      rating_category_ids:
        name: rating_category_ids
        description: 'optional Rating Category IDs.'
        required: false
        example: '1,2,3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      rating: 5
      comment: 'Good service'
      rating_category_ids: '1,2,3'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          data: {}
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zgh56f46v1de8EkPcbVD3aa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/stores/{store_id}/menus'
    metadata:
      groupName: Stores
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Merchant Menus via Store'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      store_id:
        name: store_id
        description: 'The ID of the store.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      store:
        name: store
        description: 'Store ID.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      store_id: 1
      store: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          [
          {'name': 'Menu 1', 'url': 'http://example.com/menu1.jpg'},
          ]
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aE5agDe83dcV66b4fkZvhP1'
    controller: null
    method: null
    route: null
    custom: []
