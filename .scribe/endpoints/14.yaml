name: Mission
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/missions
    metadata:
      groupName: Mission
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all missions available.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      completed_only:
        name: completed_only
        description: 'boolean optional Only show completed missions(is_completed=1).'
        required: false
        example: '0'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      claimed_only:
        name: claimed_only
        description: 'boolean optional Only show claimed missions(claimed_only=1).'
        required: false
        example: '0'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      frequency:
        name: frequency
        description: 'optional Filter by frequency, can combine frquency with multiple comma separated.'
        required: false
        example: 'one-off,daily,monthly'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      completed_only: '0'
      claimed_only: '0'
      frequency: 'one-off,daily,monthly'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": [
            {
            "id": 1,
            "name": "Complete 10 missions",
            "is_participating": true,
            "description": "Complete 10 missions to earn a reward",
            "events": ["mission_completed"],
            "current_values": {"mission_completed": 5},
            "values": {"mission_completed": 10},
            "reward": {
                "id": 1,
                "name": "Egg",
                "description": "egg",
                "thumbnail_url": "https://example.com/egg.png",
            },
            "reward_quantity": 1,
            "claimed": false,
            "claimed_at": null,
            "claimed_at_formatted": null,
            "claimed_at_ago": null
           }
          ],
          "first_page_url": "http://localhost:8000/api/missions?page=1",
          "from": 1,
          "last_page": 1,
          "last_page_url": "http://localhost:8000/api/missions?page=1",
          "next_page_url": null,
          "path": "http://localhost:8000/api/missions",
          "per_page": 15,
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8ac3PgEeb6Vkh16d4aDfZ5v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/missions/complete
    metadata:
      groupName: Mission
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Complete all missions or single mission'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mission_id:
        name: mission_id
        description: 'The id of the mission to complete, if not pass in, system will complete all missions thats eligible to be completed.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      mission_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Mission(s) completed successfully.",
          "completed_missions": [
             1, 2
          ],
          "reward": {
            "object": {},
            "quantity": 1
          }
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k15hbvPdaDe634E6ZgV8cfa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/missions/claimables
    metadata:
      groupName: Mission
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get latest claimable missions'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [
           {
           "id": 1,
           "name": "Mission 1",
           ...
           }
          ]
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P3ehZ8fka6gVcv5a4Dd1E6b'
    controller: null
    method: null
    route: null
    custom: []
