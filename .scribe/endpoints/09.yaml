name: Point
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/points/my_balance/all
    metadata:
      groupName: Point
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the point & point components balance of the logged in user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "point_balance": { "id": 1, "name": 'Funhub', "thumbnail_url": 'http://localhost:8000/storage/rewards/1/1.jpg', "balance": 100 },
          "point_components": {[
            {"id": 1, "name": "rice", "thumbnail_url": 'http://localhost:8000/storage/rewards/1/1.jpg', "balance": 100},
            {"id": 2, "name": "egg", "thumbnail_url": 'http://localhost:8000/storage/rewards/1/1.jpg', "balance": 100},
            {"id": 3, "name": "vegetable", "thumbnail_url": 'http://localhost:8000/storage/rewards/1/1.jpg', "balance": 100},
            {"id": 4, "name": "meat", "thumbnail_url": 'http://localhost:8000/storage/rewards/1/1.jpg', "balance": 100},
            {"id": 5, "name": "fish", "thumbnail_url": 'http://localhost:8000/storage/rewards/1/1.jpg', "balance": 100},
          ]}
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 81DgPb63V5kdeaZ4Ev6fcha'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/points/balance
    metadata:
      groupName: Point
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the point balance of the user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "balance": 100
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a5cfZDv8d6eb6khg41aEP3V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/points/components/balance
    metadata:
      groupName: Point
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the point component balance of the user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'The type of point component.'
        required: true
        example: egg
        type: string
        custom: []
    cleanBodyParameters:
      type: egg
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "type": "egg",
          "balance": 100
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z6chDEb1VagPvke43f68d5a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/points/rewards
    metadata:
      groupName: Point
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Rewards Available.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "rewards": [
          {
          "id": 1,
          "name": "Funhub",
          "description": "Funhub",
          "components": [],
          }
          ]
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6k5VfchPgZab1Dvea8E436d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/points/reward_combine
    metadata:
      groupName: Point
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Combine Points Component to Form a Reward'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      quantity:
        name: quantity
        description: 'The quantity of the reward to form.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanBodyParameters:
      quantity: 1
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 63hvV6ZfPD85b4dkEecgaa1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/points/ledgers
    metadata:
      groupName: Point
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Point Ledger'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [
          {
            "id": 1,
            ...
          }
          ]
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 63v4Zea6Vad5kfDbE8gPhc1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/points/components/ledgers
    metadata:
      groupName: Point
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Point Component Ledgers)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      filter_type:
        name: filter_type
        description: 'Type of Component (name).'
        required: false
        example: egg
        type: string
        custom: []
    cleanUrlParameters:
      filter_type: egg
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [
          {
            "id": 1,
            ...
          }
          ]
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 56k3ZbdhP1v68gf4eDaVaEc'
    controller: null
    method: null
    route: null
    custom: []
