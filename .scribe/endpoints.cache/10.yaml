## Autogenerated by Scribe. DO NOT MODIFY.

name: View
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/views
    metadata:
      groupName: View
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Record view for viewable
        This is used for recording views for articles, comments, merchant offers, and user profiles
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      viewable_type:
        name: viewable_type
        description: 'The type of the viewable.'
        required: true
        example: article/comment/merchant_offer/user_profile
        type: string
        enumValues: []
        custom: []
      viewable_id:
        name: viewable_id
        description: 'The id of the viewable.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      viewable_type: article/comment/merchant_offer/user_profile
      viewable_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "View recorded"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fdak4g1evVcP83h6Z6ED5ab'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/views/{type}/{id}'
    metadata:
      groupName: View
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get views for viewable type
        This is used for getting views for articles, comments, merchant offers, and user profiles
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type of the viewable.'
        required: true
        example: article/comment/merchant_offer/user_profile
        type: string
        enumValues: []
        custom: []
      id:
        name: id
        description: 'The id of the viewable.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      type: article/comment/merchant_offer/user_profile
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "views": [],
          "total": 0
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5eca6dfvZ6ag1Ebh8k3P4DV'
    controller: null
    method: null
    route: null
    custom: []
