## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Settings'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/user/settings
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get settings of logged in user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "name": "John Doe",
           "email": "johndoe@gmail.com"
           "username": "johndoe",
           "dob": "1990-01-01",
           "gender": "male",
           "bio": "Hello",
           "job_title": "Engineer",
           "country_id": 1,
           "state_id": 1,
           "avatar": "https://www.example.com/avatar.jpg",
           "avatar_thumb": "https://www.example.com/avatar_thumb.jpg",
           "category_ids": [1,2,3]
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
      -
        status: 404
        content: '{"message": "No settings found yet."}'
        headers: []
        description: 'No settings found yet'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c68Ea1ZfkaVhPgD56e4dbv3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/phone_no/otp
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Phone No (send otp)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_code:
        name: country_code
        description: 'Country code of the user.'
        required: true
        example: '60'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_no:
        name: phone_no
        description: 'Phone number of the user.'
        required: true
        example: '123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      country_code: '60'
      phone_no: '123456789'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": "success",
          "message": "OTP sent"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e3dvk56hb8P1Vc4gaEf6DZa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/phone_no/verify_otp
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Phone No (Verify OTP)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_code:
        name: country_code
        description: 'Country code of the user.'
        required: true
        example: '60'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_no:
        name: phone_no
        description: 'Phone number of the user.'
        required: true
        example: '123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      otp:
        name: otp
        description: 'OTP of the user.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      country_code: '60'
      phone_no: '123456789'
      otp: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "Phone No updated"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Eg86af41kDaeZ6VdPb5chv3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/email
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Email'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email of the user.'
        required: true
        example: john@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john@gmail.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Email updated",
          "email": "johndoe@gmail.com"
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
      -
        status: 422
        content: '{"message": "Email already verified for your account"}'
        headers: []
        description: 'Email already verified for your account'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 48Dc6PVf35hk6d1veabEagZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/verify/email
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify User Email with Token'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'Token of the user.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      token: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Email Verified"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1agV846fED5ah3Zck6Pbvde'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/name
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Name'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Name updated",
          "name": "John Doe"
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z6ePfh8abvaVg3d15E4c6Dk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/article_categories
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Link Article Categories to User (used for interest tagging)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_ids:
        name: category_ids
        description: 'Array of article category ids.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      category_ids:
        - 1
        - 2
        - 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Article categories linked to user",
          "category_ids": [1,2,3]
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e6b8kf1h35DadcvVPZga64E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/avatar/upload
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload or Update User Profile Picture'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      avatar:
        name: avatar
        description: 'One image file to upload.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      avatar: null
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Avatar uploaded",
          "avatar": "url",
          "avatar_thumb": "url"
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z6vfPk8h65VD1gab4a3eEdc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/cover/upload
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload or Update User Cover'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      cover:
        name: cover
        description: 'One image file to upload.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      cover: null
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Cover uploaded",
          "cover": "url",
          "cover_thumb": "url"
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P8ac4hdvkVDbe1gEZ536f6a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/username
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Username'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Username of the user.'
        required: true
        example: johndoe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      username: johndoe
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Username updated",
          "username": "johndoe"
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ef5cDa1PE4abV63dkvg6hZ8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/bio
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Bio'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      bio:
        name: bio
        description: 'Bio of the user.'
        required: true
        example: 'I am a software engineer'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      bio: 'I am a software engineer'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Bio updated",
          "bio": "I am a software engineer"
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DE8v31aPfagkhV46b65ecdZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/dob
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Date of Birth'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      day:
        name: day
        description: 'Day of the date of birth.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      month:
        name: month
        description: 'Month of the date of birth.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      year:
        name: year
        description: 'Year of the date of birth.'
        required: true
        example: 1990
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      day: 1
      month: 1
      year: 1990
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Date of birth updated",
          "dob": "1990-01-01"
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 41DPkaEdc66h38aV5bvZfeg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/gender
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Save Gender'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      gender:
        name: gender
        description: ''
        required: true
        example: male
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      gender: male
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Gender updated",
          "gender": "male"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8DP6de346v5cEf1gVabaZkh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/location
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Location'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_id:
        name: country_id
        description: 'Country id of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      state_id:
        name: state_id
        description: 'State id of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      country_id: 1
      state_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Location updated"
          "country_id": 1,
          "state_id": 1
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Dkhbvg8PdcZe4Efa1aV3665'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/job-title
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Job title'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      job_title:
        name: job_title
        description: 'Job title of the user.'
        required: true
        example: 'Software Engineer'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      job_title: 'Software Engineer'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Job Title updated",
          "job_title": "Software Engineer"
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f6PE18ch6Dab4gVeadZvk53'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/language
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Save Language of User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      last_lang:
        name: last_lang
        description: ''
        required: true
        example: en
        type: string
        enumValues:
          - en
          - zh
        exampleWasSpecified: false
        nullable: false
        custom: []
      lang:
        name: lang
        description: 'The language of the user.'
        required: true
        example: en/zh
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      last_lang: en
      lang: en/zh
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Saved"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eagh6Z6kPva3DfEVcdb5418'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/postUpdatePassword
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user password (only for login with OTP)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      old_password:
        name: old_password
        description: 'The old password of the user.'
        required: true
        example: abcd1234
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The new password of the user.'
        required: true
        example: abcd1234
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The new password confirmation of the user.'
        required: true
        example: abcd1234
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      old_password: abcd1234
      password: abcd1234
      password_confirmation: abcd1234
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Password updated"
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "The given data was invalid.",
          "errors": {
          "old_password": [
           "The old password is incorrect"
          ],
          "password": [
          "The password confirmation does not match."
          ]
          }
        headers: []
        description: 'validation error'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dg6DVhb16a54PeEvaZcfk38'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/profile-privacy
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Profile Privacy Setting'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_privacy:
        name: profile_privacy
        description: 'The profile privacy of the user.'
        required: true
        example: public
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      profile_privacy: public
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Profile privacy updated",
          "profile_privacy": "public"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VaEfv6c143bh58gkaPdZD6e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user/settings/referrals/my-code
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: Referral
      subgroupDescription: ''
      title: 'Referral - Get My Referral Code'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "referral_code": "ABC123",
          "message": "Come and join with with referral code ABC123"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 356DkZvbg6aac1hd8eEP4fV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/referrals/save
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: Referral
      subgroupDescription: ''
      title: 'Referral - Save Referral'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      referral_code:
        name: referral_code
        description: 'Referral code of the user.'
        required: true
        example: ABC123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      referral_code: ABC123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Referral saved"
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "User already referred by someone"
          }
        headers: []
        description: 'User already referred by someone'
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "Referral code not found"
          }
        headers: []
        description: 'Referral code not found'
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "You cannot refer yourself"
          }
        headers: []
        description: 'You cannot refer yourself'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3VDk8hfgE4PdZvb6e65c1aa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/onesignal/save
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Save OneSignal Subscription Id'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      onesignal_subscription_id:
        name: onesignal_subscription_id
        description: 'The OneSignal subscription id.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      onesignal_subscription_id: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Saved"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vEDZPVe836fk61hd54bgcaa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/onesignal/user_id/save
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Save OneSignal User ID'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      onesignal_user_id:
        name: onesignal_user_id
        description: 'The OneSignal user id.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      onesignal_user_id: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Saved"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ePdVEkfDg63a6v4h5Za1c8b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user/settings/card-tokenization
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a Card (Tokenization)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success",
           "data": {
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5h8V6Zkfe6gPvada3D4E1bc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user/settings/cards
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: Card
      subgroupDescription: ''
      title: 'Get User Cards'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "cards": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 35hdgPveakbc1a486Zf6EDV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/card/remove
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: Card
      subgroupDescription: ''
      title: 'Remove a Card'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      card_id:
        name: card_id
        description: 'The id of the card.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      card_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Card removed"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h5eEf3ZD48dkb16ca6vVagP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/settings/card/set-as-default
    metadata:
      groupName: 'User Settings'
      groupDescription: ''
      subgroup: Card
      subgroupDescription: ''
      title: 'Set Card as Default'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      card_id:
        name: card_id
        description: 'The id of the card.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      card_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Card set as default"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3gD58a1keEaVb6hfZ46dcvP'
    controller: null
    method: null
    route: null
    custom: []
