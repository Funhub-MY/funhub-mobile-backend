## Autogenerated by Scribe. DO NOT MODIFY.

name: Merchant
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/merchant/offers/my_bookmarks
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get My Bookmarked Merchant Offers'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      filter:
        name: filter
        description: 'Column to Filter.'
        required: false
        example: 'Filterable columns are:  id, name, description, available_at, available_until, sku'
        type: string
        enumValues: []
        custom: []
      filter_value:
        name: filter_value
        description: 'Value to Filter.'
        required: false
        example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
        type: string
        enumValues: []
        custom: []
      sort:
        name: sort
        description: 'Column to Sort.'
        required: false
        example: 'Sortable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
        type: string
        enumValues: []
        custom: []
      order:
        name: order
        description: 'Direction to Sort.'
        required: false
        example: 'Sortable directions are: asc, desc'
        type: string
        enumValues: []
        custom: []
      limit:
        name: limit
        description: 'Per Page Limit Override.'
        required: false
        example: 10
        type: integer
        enumValues: []
        custom: []
      offset:
        name: offset
        description: 'Offset Override.'
        required: false
        example: 0
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      filter: 'Filterable columns are:  id, name, description, available_at, available_until, sku'
      filter_value: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
      sort: 'Sortable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
      order: 'Sortable directions are: asc, desc'
      limit: 10
      offset: 0
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [],
           "links": {},
           "meta": {
              "current_page": 1,
            }
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4DV3gd58h1bEcaePfv6kZ6a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant/offers
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get Offers'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_ids:
        name: category_ids
        description: 'optional Merchant Category Ids to Filter.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        custom: []
      city:
        name: city
        description: 'optional Filter by City.'
        required: false
        example: 'Subang Jaya'
        type: string
        enumValues: []
        custom: []
      lat:
        name: lat
        description: 'optional Filter by Lat of User (must provide lng).'
        required: false
        example: 3.123456
        type: number
        enumValues: []
        custom: []
      lng:
        name: lng
        description: 'optional Filter by Lng of User (must provide lat).'
        required: false
        example: 101.123456
        type: number
        enumValues: []
        custom: []
      radius:
        name: radius
        description: 'optional Filter by Radius (in meters) if provided lat, lng.'
        required: false
        example: 10000
        type: integer
        enumValues: []
        custom: []
      location_id:
        name: location_id
        description: 'optional Filter by Location Id.'
        required: false
        example: 1
        type: integer
        enumValues: []
        custom: []
      available_only:
        name: available_only
        description: 'optional Filter by Available Only.'
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      filter:
        name: filter
        description: 'Column to Filter.'
        required: false
        example: 'Filterable columns are: id, name, description, available_at, available_until, sku'
        type: string
        enumValues: []
        custom: []
      filter_value:
        name: filter_value
        description: 'Value to Filter.'
        required: false
        example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
        type: string
        enumValues: []
        custom: []
      sort:
        name: sort
        description: 'Column to Sort.'
        required: false
        example: 'Sortable columns are: id, name, description, available_at, available_until, sku, created_at, updated_at'
        type: string
        enumValues: []
        custom: []
      order:
        name: order
        description: 'Direction to Sort.'
        required: false
        example: 'Sortable directions are: asc, desc'
        type: string
        enumValues: []
        custom: []
      limit:
        name: limit
        description: 'Per Page Limit Override.'
        required: false
        example: 10
        type: integer
        enumValues: []
        custom: []
      offset:
        name: offset
        description: 'Offset Override.'
        required: false
        example: 0
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      category_ids:
        - 1
        - 2
        - 3
      city: 'Subang Jaya'
      lat: 3.123456
      lng: 101.123456
      radius: 10000
      location_id: 1
      available_only: true
      filter: 'Filterable columns are: id, name, description, available_at, available_until, sku'
      filter_value: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
      sort: 'Sortable columns are: id, name, description, available_at, available_until, sku, created_at, updated_at'
      order: 'Sortable directions are: asc, desc'
      limit: 10
      offset: 0
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [],
           "links": {},
           "meta": {
              "current_page": 1,
            }
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vh1a63f5P46dcbvkZaDeg8E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/merchant/offers/claim
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Claim Offer'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      offer_id:
        name: offer_id
        description: 'Offer ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      payment_method:
        name: payment_method
        description: 'Payment Method.'
        required: true
        example: points/fiat
        type: string
        enumValues: []
        custom: []
      fiat_payment_method:
        name: fiat_payment_method
        description: 'required_if:payment_method,fiat Payment Method.'
        required: false
        example: fpx/card
        type: string
        enumValues: []
        custom: []
      quantity:
        name: quantity
        description: Quantity.
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      offer_id: 1
      payment_method: points/fiat
      fiat_payment_method: fpx/card
      quantity: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Offer Claimed"
          }
        headers: []
        description: success
        custom: []
      -
        status: 200
        content: |-
          {
          "message": "Insufficient Point Balance"
          }
        headers: []
        description: insufficient_point_balance
        custom: []
      -
        status: 200
        content: |-
          {
          "message": "Redirect to gateway",
          "gateway_data": [
               'url' => $this->url .'/payment/eCommerce',
                'secureHash' => $this->generateHashForRequest($this->mid, $invoice_no, $amount),
                'mid' => $this->mid,
                'invno' => $invoice_no,
                'capture_amt' => $amount,
                'desc' => $desc,
                'postURL' => $redirectUrl,
                'phone' => $phoneNo,
                'email' => $email,
                'param' => $param,
                'authorize' => 'authorize'
            ];
          }
        headers: []
        description: fiat_payment_mode
        custom: []
      -
        status: 200
        content: |-
          {
          "message": "Offer is no longer valid"
          }
        headers: []
        description: offer_no_longer_valid
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4Dhdk5gVecaE6P31a68vZbf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/merchant/offers/redeem
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: |-
        Redeem a Merchant Offer (In-Store)
        This is when customer with claimed merchant offer wishes to redeem in store
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      claim_id:
        name: claim_id
        description: 'Claim ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      offer_id:
        name: offer_id
        description: 'Merchant Offer ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      quantity:
        name: quantity
        description: 'Quantity to Redeem.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      redeem_code:
        name: redeem_code
        description: 'Redemption Code Provided by Merchant.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      claim_id: 1
      offer_id: 1
      quantity: 1
      redeem_code: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Redeemed successfully",
          "offer": {
          }
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6caavD4k6hVb8fgdPZEe513'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/merchant/offers/cancel
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Cancel a Merchant Offer Transaction'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      merchant_offer_id:
        name: merchant_offer_id
        description: 'Merchant Offer ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      merchant_offer_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Transaction cancelled"
          }
        headers: []
        description: success
        custom: []
      -
        status: 200
        content: |-
          {
          "message": "You have not claimed this offer"
          }
        headers: []
        description: offer_pending_payment_not_found
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e6DcE6vh3fgdP1Vab8a4Z5k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant/offers/my_claimed_offers
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get My Merchant Offers (Logged in User)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      is_redeemed:
        name: is_redeemed
        description: 'optional Filter by Redeemed.'
        required: false
        example: 0.0
        type: number
        enumValues: []
        custom: []
    cleanUrlParameters:
      is_redeemed: 0.0
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hk1b6D5cgv8Zaed3P4VEa6f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/merchant/offers/{offer_id}'
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Offers'
      subgroupDescription: ''
      title: 'Get Offer By ID'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      offer_id:
        name: offer_id
        description: 'The ID of the offer.'
        required: true
        example: laudantium
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      offer_id: laudantium
    queryParameters:
      offer_id:
        name: offer_id
        description: 'Offer ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanQueryParameters:
      offer_id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "offer": {}
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8hPga6fEc6kDd1b34vVZa5e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/merchant_categories
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Categories'
      subgroupDescription: ''
      title: 'Get popular Merchant Categories'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_featured:
        name: is_featured
        description: 'Is Featured Categories.'
        required: false
        example: 1
        type: integer
        enumValues: []
        custom: []
      filter:
        name: filter
        description: 'Column to Filter.'
        required: false
        example: 'Filterable columns are: id, name, created_at, updated_at'
        type: string
        enumValues: []
        custom: []
      filter_value:
        name: filter_value
        description: 'Value to Filter.'
        required: false
        example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
        type: string
        enumValues: []
        custom: []
      sort:
        name: sort
        description: 'Column to Sort.'
        required: false
        example: 'Sortable columns are: id, name, created_at, updated_at'
        type: string
        enumValues: []
        custom: []
      order:
        name: order
        description: 'Direction to Sort.'
        required: false
        example: 'Sortable directions are: asc, desc'
        type: string
        enumValues: []
        custom: []
      limit:
        name: limit
        description: 'Per Page Limit Override.'
        required: false
        example: 10
        type: integer
        enumValues: []
        custom: []
      offset:
        name: offset
        description: 'Offset Override.'
        required: false
        example: 0
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      is_featured: 1
      filter: 'Filterable columns are: id, name, created_at, updated_at'
      filter_value: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
      sort: 'Sortable columns are: id, name, created_at, updated_at'
      order: 'Sortable directions are: asc, desc'
      limit: 10
      offset: 0
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "categories": []
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: ''
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hadE635VPavf4g81cZDkb6e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/merchant_categories/{offer_id}'
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Categories'
      subgroupDescription: ''
      title: 'Get Merchant Categories by offer id'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      offer_id:
        name: offer_id
        description: 'The id of the merchant offer id.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      offer_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "categories": []
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: ''
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8kVaE5bPfde634agZh1Dc6v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/merchant-contact
    metadata:
      groupName: Merchant
      groupDescription: ''
      subgroup: 'Merchant Contact'
      subgroupDescription: ''
      title: 'Submit Merchant Contact Information'
      description: 'Allows users to submit merchant contact information via the API.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the contact person.'
        required: true
        example: 'Alex Koh'
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'The email address of the contact person.'
        required: true
        example: alex@funhub.my
        type: string
        enumValues: []
        custom: []
      tel_no:
        name: tel_no
        description: 'The telephone number of the contact person.'
        required: true
        example: '182036794'
        type: string
        enumValues: []
        custom: []
      company_name:
        name: company_name
        description: 'The name of the company.'
        required: true
        example: 'Funhub TV'
        type: string
        enumValues: []
        custom: []
      business_type:
        name: business_type
        description: 'The type of the business.'
        required: true
        example: others
        type: string
        enumValues: []
        custom: []
      other_business_type:
        name: other_business_type
        description: 'required_if:business_type,others The type of the business.'
        required: false
        example: 'IT Consult'
        type: string
        enumValues: []
        custom: []
      message_type:
        name: message_type
        description: 'The category of the message.'
        required: true
        example: 'General Inquiry'
        type: string
        enumValues: []
        custom: []
      message:
        name: message
        description: 'The message or remarks.'
        required: true
        example: 'This is a sample message.'
        type: text
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: 'Alex Koh'
      email: alex@funhub.my
      tel_no: '182036794'
      company_name: 'Funhub TV'
      business_type: others
      other_business_type: 'IT Consult'
      message_type: 'General Inquiry'
      message: 'This is a sample message.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Merchant contact information submitted successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: |-
          {
          "errors": {
              "name": ["The Name field is required."],
              "email": ["The Email field must be a valid email address."],
              "tel_no": ["The Phone Number field is required."],
              "company_name": ["The Company Name field is required."],
              "business_type": ["The Business Type field is required."],
              "message_type": ["The Message Category field is required."],
              "message": ["The Message field is required."]
              }
          }
        headers: []
        description: 'Invalid Form Fields'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kg6cahVvZEPa1de3Df856b4'
    controller: null
    method: null
    route: null
    custom: []
