## Autogenerated by Scribe. DO NOT MODIFY.

name: Product
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/products
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Products for Sale (Gift Cards)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8cbev5aD1dPZEaVfh6g364k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/products/limited
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Products for Sale (Limited Gift Cards)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vecVdhZ6P384kf5aEaDb6g1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/products/history
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Funcard or Funbox for last 30 days Transactions History'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": []
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kv8d16agbcV3ZDa6fE5eP4h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/products/purchased
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Total Quantity of Funcard purchased by user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      from_date:
        name: from_date
        description: 'optional Filter by transaction created from this date (Y-m-d format).'
        required: false
        example: '2025-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      to_date:
        name: to_date
        description: 'optional Filter by transaction created until this date (Y-m-d format).'
        required: false
        example: '2025-01-16'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_ids:
        name: product_ids
        description: 'optional Filter by product_id.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      from_date: '2025-01-01'
      to_date: '2025-01-16'
      product_ids: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "quantity": 10
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6e1a8b3cfvDEga56V4ZdkhP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/products/checkout
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: 'Product Rewards'
      subgroupDescription: ''
      title: 'Post Checkout'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_id:
        name: product_id
        description: 'Product ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: 'Payment Method.'
        required: true
        example: fiat
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      fiat_payment_method:
        name: fiat_payment_method
        description: 'required_if:payment_method,fiat Payment Method.'
        required: false
        example: fpx/card
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      card_id:
        name: card_id
        description: 'required_if:fiat_payment_method,card Card ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: Quantity.
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      referral_code:
        name: referral_code
        description: ''
        required: false
        example: ipsa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      wallet_type:
        name: wallet_type
        description: 'optional Wallet Type.'
        required: false
        example: TNG/FPX-CIMB
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_id: 1
      payment_method: fiat
      fiat_payment_method: fpx/card
      card_id: 1
      quantity: 1
      referral_code: ipsa
      wallet_type: TNG/FPX-CIMB
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Redirect to Gateway"
          }
        headers: []
        description: success
        custom: []
      -
        status: 200
        content: |-
          {
          "message": "Product is sold out"
          }
        headers: []
        description: insufficient_product_quantity
        custom: []
      -
        status: 200
        content: |-
          {
          "message": "Redirect to gateway",
          "gateway_data": [
               'url' => $this->url .'/payment/eCommerce',
                'secureHash' => $this->generateHashForRequest($this->mid, $invoice_no, $amount),
                'mid' => $this->mid,
                'invno' => $invoice_no,
                'capture_amt' => $amount,
                'desc' => $desc,
                'postURL' => $redirectUrl,
                'phone' => $phoneNo,
                'email' => $email,
                'param' => $param,
                'authorize' => 'authorize'
            ];
          }
        headers: []
        description: fiat_payment_mode
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aDbZd43vkg5afP6E8ec6Vh1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/products/checkout/cancel
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cancel Product Checkout'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      transaction_no:
        name: transaction_no
        description: 'Transaction No.'
        required: true
        example: '11234455'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      transaction_no: '11234455'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Transaction cancelled"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E4dfbZe6Pc3vkDa85hV61ag'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{product_id}'
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Product By ID'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {USER_TOKEN_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: occaecati
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: occaecati
    queryParameters:
      product_id:
        name: product_id
        description: 'Product ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      product_id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {}
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4EaPedv3c5afk8ghb66DVZ1'
    controller: null
    method: null
    route: null
    custom: []
