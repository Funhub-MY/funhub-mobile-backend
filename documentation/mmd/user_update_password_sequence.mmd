sequenceDiagram
    participant Client
    participant UserSettingsController as Controller
    participant Request
    participant User as AuthUser (Model)
    participant Hash
    participant Database as DB
    participant Event

    Client->>+Controller: POST /api/user/settings/password (data) // Activate Controller
    Controller->>+Request: validate(old_password, new_password, new_password_confirmation) // Activate Request
    Request-->>Controller: Validation OK // Deactivate Request
    Controller->>+AuthUser: Get authenticated user // Activate AuthUser
    AuthUser-->>Controller: User object // Deactivate AuthUser
    Controller->>+Hash: check(request.old_password, user.password) // Activate Hash
    Hash-->>Controller: Matches (true/false) // Deactivate Hash
    alt Old Password Does Not Match
        Controller->>Client: JSON Error Response (Invalid old password)
    else Password Matches
        Controller->>+Hash: make(request.new_password) // Activate Hash
        Hash-->>Controller: Hashed new password // Deactivate Hash
        Controller->>+AuthUser: Update password = hashed_new_password // Activate AuthUser
        Controller->>AuthUser: save()
        AuthUser->>+DB: Update User record // Activate DB
        DB-->>AuthUser: Confirmation // Deactivate DB
        AuthUser-->>Controller: Confirmation // Deactivate AuthUser
        Controller->>+Event: dispatch(new UserSettingsUpdated(user)) // Activate Event
        Event-->>Controller: Dispatched // Deactivate Event
        Controller->>Client: JSON Success Response (Password updated)
    end
    Controller-->>-Client: // Explicitly deactivate Controller at the end