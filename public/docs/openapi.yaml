openapi: 3.0.3
info:
  title: FUNHUB
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://funhub-mobile-backend.test'
paths:
  /api/v1/article_cities:
    get:
      summary: 'Get Article Cities (Unique)'
      operationId: getArticleCitiesUnique
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  cities: []
                properties:
                  cities:
                    type: array
                    example: []
      tags:
        - Article
    parameters:
      -
        in: path
        name: search
        description: 'Optional parameter. optional Search for city.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '"Kota"'
  /api/v1/articles/gallery:
    post:
      summary: 'Upload Images for Article'
      operationId: uploadImagesForArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  uploaded:
                    -
                      id: 1
                      name: image.jpg
                      url: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                      size: 12345
                      type: image/jpeg
                properties:
                  uploaded:
                    type: array
                    example:
                      -
                        id: 1
                        name: image.jpg
                        url: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                        size: 12345
                        type: image/jpeg
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: image.jpg
                        url:
                          type: string
                          example: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                        size:
                          type: integer
                          example: 12345
                        type:
                          type: string
                          example: image/jpeg
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["images": ["The images field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: string
                  format: binary
                  description: 'The images to upload.'
                is_cover:
                  type: boolean
                  description: 'used to set this image as a cover.'
                  example: true
              required:
                - images
  /api/v1/articles/video-upload:
    post:
      summary: 'Upload Video for Article'
      operationId: uploadVideoForArticle
      description: "Video size must not larger than 500MB, will stream video response back to client on progress via header X-Upload-Progress / calculate your own using X-Content-Duration\n\nMust be able to stream completion percentage back to client"
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  url: 'http://localhost:8000/storage/user_video_uploads/1/video.mp4'
                properties:
                  url:
                    type: string
                    example: 'http://localhost:8000/storage/user_video_uploads/1/video.mp4'
      tags:
        - Article
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                video:
                  type: string
                  format: binary
                  description: 'The video to upload.'
              required:
                - video
  /api/v1/articles/my_articles:
    get:
      summary: 'Get Articles by User ID or Logged In User'
      operationId: getArticlesByUserIDOrLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'optional Load Spciefic User Articles.'
                  example: 1
                published_only:
                  type: boolean
                  description: 'optional Filter by published articles.'
                  example: true
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                video_only:
                  type: integer
                  description: 'optional Filter by Videos.'
                  example: 1
  /api/v1/articles/my_bookmarks:
    get:
      summary: 'Get Bookmarked Articles by User ID or Logged In User'
      operationId: getBookmarkedArticlesByUserIDOrLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'optional Load Spciefic User Bookmarked Articles.'
                  example: 1
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                video_only:
                  type: integer
                  description: 'optional Filter by Videos.'
                  example: 1
  /api/v1/articles/report:
    post:
      summary: 'Report an article'
      operationId: reportAnArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Comment reported\",\n}"
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"message": "You have already reported this comment" ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article_id:
                  type: integer
                  description: ''
                  example: 11
                reason:
                  type: string
                  description: 'The reason for reporting the comment.'
                  example: 'Spam     * @bodyParam violation_type required The violation type of this report'
                violation_type:
                  type: string
                  description: ''
                  example: impedit
                violation_level:
                  type: required
                  description: 'The violation level of this report'
                  example: dolores
                article:
                  type: integer
                  description: 'The id of the article.'
                  example: 1
              required:
                - article_id
                - reason
                - violation_type
                - article
  /api/v1/articles/not_interested:
    post:
      summary: 'Hide Article When Not Interested By user'
      operationId: hideArticleWhenNotInterestedByUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article marked as not interested'
                properties:
                  message:
                    type: string
                    example: 'Article marked as not interested'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article_id:
                  type: integer
                  description: 'Article Id.'
                  example: 1
              required:
                - article_id
  /api/v1/articles/tagged_users:
    get:
      summary: 'Get Tagged users of article'
      operationId: getTaggedUsersOfArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article_id:
                  type: integer
                  description: 'Article Id.'
                  example: 1
              required:
                - article_id
  '/api/v1/articles/merchant_offers/{article_id}':
    get:
      summary: 'Get Article Merchant Offers'
      operationId: getArticleMerchantOffers
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - {  }
                properties:
                  data:
                    type: array
                    example:
                      - []
                    items:
                      type: object
                      properties: []
      tags:
        - Article
    parameters:
      -
        in: path
        name: article_id
        description: 'The ID of the article.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: article
        description: 'The id of the article.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/articles/nearby:
    get:
      summary: 'Get Articles Nearby'
      operationId: getArticlesNearby
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [],\n}"
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article_ids:
                  type: array
                  description: 'optional Article Ids to Filter. Example [1,2,3]'
                  example:
                    - optio
                  items:
                    type: string
                category_ids:
                  type: array
                  description: 'optional Category Ids to Filter.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                video_only:
                  type: integer
                  description: 'optional Filter by Videos.'
                  example: 1
                tag_ids:
                  type: array
                  description: 'optional Tag Ids to Filter.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                city:
                  type: string
                  description: 'optional Filter by City Name.'
                  example: 'Subang Jaya'
                lat:
                  type: number
                  description: 'Filter by Lat of User (must provide lng).'
                  example: 3.123456
                lng:
                  type: number
                  description: 'Filter by Lng of User (must provide lat).'
                  example: 101.123456
                radius:
                  type: integer
                  description: 'optional Filter by Radius (in meters) if provided lat, lng.'
                  example: 10000
                include_own_article:
                  type: integer
                  description: 'optional Include own article.'
                  example: 1
                limit:
                  type: integer
                  description: 'optional Per Page Limit Override.'
                  example: 10
              required:
                - lat
                - lng
  /api/v1/articles/keyword:
    get:
      summary: 'Get Articles by Keyword ID'
      operationId: getArticlesByKeywordID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword_id:
                  type: integer
                  description: ''
                  example: 17
              required:
                - keyword_id
    parameters:
      -
        in: path
        name: keyword_id
        description: 'Optional parameter. ID required The id of the keyword.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1'
  /api/v1/articles/search:
    get:
      summary: 'Search Articles'
      operationId: searchArticles
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                suggestion:
                  type: string
                  description: 'Suggested keyword.'
                  example: 'KL Food'
  /api/v1/articles:
    get:
      summary: "Get Articles for Logged in user (for Home Page)\nNote: user's own posts will not show up on home page"
      operationId: getArticlesForLoggedInUserforHomePageNoteUsersOwnPostsWillNotShowUpOnHomePage
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                article_ids:
                  type: array
                  description: 'optional Article Ids to Filter. Example [1,2,3]'
                  example:
                    - consequatur
                  items:
                    type: string
                category_ids:
                  type: array
                  description: 'optional Category Ids to Filter.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                video_only:
                  type: integer
                  description: 'optional Filter by Videos.'
                  example: 1
                following_only:
                  type: integer
                  description: 'optional Filter by Articles by Users who logged in user is following.'
                  example: 1
                tag_ids:
                  type: array
                  description: 'optional Tag Ids to Filter.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                city:
                  type: string
                  description: 'optional Filter by City.'
                  example: 'Subang Jaya'
                lat:
                  type: number
                  description: 'optional Filter by Lat of User (must provide lng).'
                  example: 3.123456
                lng:
                  type: number
                  description: 'optional Filter by Lng of User (must provide lat).'
                  example: 101.123456
                radius:
                  type: integer
                  description: 'optional Filter by Radius (in meters) if provided lat, lng.'
                  example: 10000
                location_id:
                  type: integer
                  description: 'optional Filter by Location Id.'
                  example: 1
                include_own_article:
                  type: integer
                  description: 'optional Include own article.'
                  example: 1
                pinned_only:
                  type: integer
                  description: 'optional Filter by Pinned Articles.'
                  example: 1
                build_recommendations:
                  type: boolean
                  description: 'optional Build Recommendations On or Off, On by Default.'
                  example: true
                refresh_recommendations:
                  type: boolean
                  description: 'optional Refresh Recommendations.'
                  example: true
                limit:
                  type: integer
                  description: 'optional Per Page Limit Override.'
                  example: 10
    post:
      summary: 'Create New Article'
      operationId: createNewArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Article updated\",\n}"
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Comment not found'
                properties:
                  message:
                    type: string
                    example: 'Comment not found'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["body": ["The Body field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the article.'
                  example: 'This is a title'
                type:
                  type: string
                  description: 'The type of the article.'
                  example: 'multimedia,text,video'
                body:
                  type: string
                  description: 'The body of the article.'
                  example: 'This is a caption or body of article'
                status:
                  type: integer
                  description: 'The status of the article.'
                  example: 0
                published_at:
                  type: datetime
                  description: 'The published date of the article.'
                  example: '2021-02-21 12:00:00'
                categories:
                  type: array
                  description: 'The categories ID of the article.'
                  example:
                    - 1
                    - 2
                  items:
                    type: string
                tags:
                  type: array
                  description: 'The tags of the article.'
                  example:
                    - '#tag1'
                    - '#tag2'
                  items:
                    type: string
                images:
                  type: array
                  description: 'The images IDs. Must first call upload images endpoint.'
                  example:
                    - 1
                    - 2
                  items:
                    type: string
                video:
                  type: integer
                  description: 'The video ID. Must first call upload videos endpoint.'
                  example: 1
                excerpt:
                  type: string
                  description: 'The excerpt of the article.'
                  example: 'This is a excerpt of article'
                location:
                  type: string
                  description: 'The location of the article.'
                  example: '{"lat": 123, "lng": 123, "name": "location name", "address": "location address", "address_2" : "", "city": "city", "state": "state name/id", "postcode": "010000", "rating": "5"}'
                tagged_user_ids:
                  type: array
                  description: 'The tagged users IDs.'
                  example:
                    - 1
                    - 2
                  items:
                    type: string
                visibility:
                  type: string
                  description: 'The visibility of the article.'
                  example: 'public,private'
              required:
                - title
                - type
                - body
                - status
  '/api/v1/articles/{id}':
    get:
      summary: 'Get One Article by ID'
      operationId: getOneArticleByID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  article: {  }
                properties:
                  article:
                    type: object
                    properties: {  }
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article not found'
                properties:
                  message:
                    type: string
                    example: 'Article not found'
      tags:
        - Article
    put:
      summary: 'Update article by ID. (Only owner of article can update)'
      operationId: updateArticleByIDOnlyOwnerOfArticleCanUpdate
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Article updated\",\n}"
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Comment not found'
                properties:
                  message:
                    type: string
                    example: 'Comment not found'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["body": ["The Body field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: 'The body of the article.'
                  example: 'This is a comment'
                status:
                  type: integer
                  description: 'The status of the article, change this to 0 to unpublish.'
                  example: 0
                title:
                  type: string
                  description: 'The title of the article, will regenerate slug.'
                  example: 'This is a title'
                tags:
                  type: array
                  description: 'The tags of the article.'
                  example:
                    - '#tag1'
                    - '#tag2'
                  items:
                    type: string
                categories:
                  type: array
                  description: 'The categories ID of the article.'
                  example:
                    - 1
                    - 2
                  items:
                    type: string
                images:
                  type: string
                  format: binary
                  description: 'The images ID of the article.'
                video:
                  type: string
                  format: binary
                  description: 'The video ID of the article.'
                tagged_user_ids:
                  type: array
                  description: 'The tagged user IDs of the article.'
                  example:
                    - 1
                    - 2
                  items:
                    type: string
                location:
                  type: string
                  description: 'The location of the article.'
                  example: '{"lat": 123, "lng": 123, "name": "location name", "address": "location address", "address_2" : "", "city": "city", "state": "state name/id", "postcode": "010000", "rating": "5"}'
                visibility:
                  type: string
                  description: 'The visibility of the article.'
                  example: 'public,private'
              required:
                - body
                - status
                - title
    delete:
      summary: 'Remove article by ID. (Only owner of article can delete)'
      operationId: removeArticleByIDOnlyOwnerOfArticleCanDelete
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article deleted'
                properties:
                  message:
                    type: string
                    example: 'Article deleted'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article not found'
                properties:
                  message:
                    type: string
                    example: 'Article not found'
      tags:
        - Article
    parameters:
      -
        in: path
        name: id
        description: 'The id of the article.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/article_tags:
    get:
      summary: 'Get popular tags'
      operationId: getPopularTags
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  tags: []
                properties:
                  tags:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, name, created_at, updated_at'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, name, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
  /api/v1/article_tags/all:
    get:
      summary: 'Get all tags available'
      operationId: getAllTagsAvailable
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  tags: []
                properties:
                  tags:
                    type: array
                    example: []
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: 'optional Hashtag to Filter.'
                  example: ta
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, name, created_at, updated_at'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, name, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
  '/api/v1/article_tags/{article_id}':
    get:
      summary: 'Get Tags by article id'
      operationId: getTagsByArticleId
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  tags: []
                properties:
                  tags:
                    type: array
                    example: []
        404:
          description: 'No tags found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
    parameters:
      -
        in: path
        name: article_id
        description: 'The id of the article.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/article_categories:
    get:
      summary: 'Get popular Article Categories'
      operationId: getPopularArticleCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  categories: []
                properties:
                  categories:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_featured:
                  type: integer
                  description: 'Is Featured Categories.'
                  example: 1
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, name, created_at, updated_at'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, name, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
  /api/v1/article_categories/all:
    get:
      summary: 'Get All Article Categories'
      operationId: getAllArticleCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  categories: []
                properties:
                  categories:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
  '/api/v1/article_categories/{article_id}':
    get:
      summary: 'Get Article Categories by article id'
      operationId: getArticleCategoriesByArticleId
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  categories: []
                properties:
                  categories:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
    parameters:
      -
        in: path
        name: article_id
        description: 'The id of the article.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/comments/replies/{comment_id}':
    get:
      summary: 'Get replies to a comment'
      operationId: getRepliesToAComment
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": {},\n}"
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Comment not found'
                properties:
                  message:
                    type: string
                    example: 'Comment not found'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reply_to_id:
                  type: integer
                  description: 'The id of the comment.'
                  example: 1
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
              required:
                - reply_to_id
    parameters:
      -
        in: path
        name: comment_id
        description: 'The ID of the comment.'
        example: harum
        required: true
        schema:
          type: string
  /api/v1/comments/like_toggle:
    post:
      summary: 'Toggle a Comment Like'
      operationId: toggleACommentLike
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Comment liked/Un-Liked\",\n}"
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["comment_id": ["The Comment Id field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment_id:
                  type: integer
                  description: 'The id of the comment.'
                  example: 1
              required:
                - comment_id
  /api/v1/comments/report:
    post:
      summary: 'Report a comment'
      operationId: reportAComment
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Comment reported\",\n}"
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"message": "You have already reported this comment" ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment_id:
                  type: integer
                  description: 'The id of the comment.'
                  example: 1
                reason:
                  type: string
                  description: 'The reason for reporting the comment.'
                  example: Spam
                violation_level:
                  type: required
                  description: 'The violation level of this report'
                  example: architecto
                violation_type:
                  type: required
                  description: 'The violation type of this report'
                  example: est
              required:
                - comment_id
                - reason
  /api/v1/comments/taggable_users:
    get:
      summary: "Get taggable users in comment\nOnly users whos is followers of logged in user can be tag in article"
      operationId: getTaggableUsersInCommentOnlyUsersWhosIsFollowersOfLoggedInUserCanBeTagInArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [],\n}"
      tags:
        - Article
  /api/v1/comments:
    get:
      summary: 'Get comments on a commentable type (eg. Articles)'
      operationId: getCommentsOnACommentableTypeegArticles
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of commentable.'
                  example: article
                id:
                  type: integer
                  description: 'The id of the commentable.'
                  example: 1
                replies_per_comment:
                  type: integer
                  description: 'Number of replies to show per comment.'
                  example: 3
                replies_sort:
                  type: string
                  description: 'Column to Sort Replies.'
                  example: 'Sortable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                replies_order:
                  type: string
                  description: 'Direction to Sort Replies.'
                  example: 'Sortable directions are: asc, desc'
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
              required:
                - type
                - id
    post:
      summary: 'Create a new comment by logged in user'
      operationId: createANewCommentByLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"comment\": {},\n}"
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["commentable_type": ["The Commentable Type field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of commentable.'
                  example: article
                id:
                  type: integer
                  description: 'The id of the commentable.'
                  example: 1
                body:
                  type: string
                  description: 'The body of the comment.'
                  example: 'This is a comment'
                tagged_users:
                  type: array
                  description: 'List of user ids tagged in comment.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                parent_id:
                  type: integer
                  description: 'The id of the parent comment.'
                  example: 1
                reply_to_id:
                  type: integer
                  description: 'The id of the child comment (Under Replies).'
                  example: 1
              required:
                - type
                - id
                - body
  '/api/v1/comments/{id}':
    get:
      summary: 'Show one comment by ID'
      operationId: showOneCommentByID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"comment\": {},\n}"
        401:
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
                example: ''
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The id of the comment.'
                  example: 1
                replies_per_comment:
                  type: integer
                  description: 'Number of replies to show per comment.'
                  example: 3
                replies_sort:
                  type: string
                  description: 'Column to Sort Replies.'
                  example: 'Sortable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                replies_order:
                  type: string
                  description: 'Direction to Sort Replies.'
                  example: 'Sortable directions are: asc, desc'
              required:
                - id
    put:
      summary: 'Update comment by ID. (Only owner of comment can update)'
      operationId: updateCommentByIDOnlyOwnerOfCommentCanUpdate
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Comment updated\",\n}"
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Comment not found'
                properties:
                  message:
                    type: string
                    example: 'Comment not found'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["body": ["The Body field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: 'The body of the comment.'
                  example: 'This is a comment'
                tagged_users:
                  type: array
                  description: 'List of user ids tagged in comment.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
              required:
                - body
    delete:
      summary: 'Remove comment by ID. (Only owner of comment can delete)'
      operationId: removeCommentByIDOnlyOwnerOfCommentCanDelete
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Article
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: nostrum
        required: true
        schema:
          type: string
  /api/v1/check_phone_no:
    post:
      summary: 'Check phone no exists or not'
      operationId: checkPhoneNoExistsOrNot
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Phone Number not registered'
                properties:
                  message:
                    type: string
                    example: 'Phone Number not registered'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: "The country code of user's phone number."
                  example: '60'
                phone_no:
                  type: string
                  description: 'The Phone No of the user.'
                  example: '1234567890'
              required:
                - country_code
                - phone_no
      security: []
  /api/v1/sendOtp:
    post:
      summary: 'Send OTP'
      operationId: sendOTP
      description: 'Send SMS OTP to phone number'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'OTP Sent!'
                properties:
                  message:
                    type: string
                    example: 'OTP Sent!'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: "The country code of user's phone number."
                  example: '60'
                phone_no:
                  type: string
                  description: 'The Phone No of the user.'
                  example: '1234567890'
              required:
                - country_code
                - phone_no
      security: []
  /api/v1/verifyOtp:
    post:
      summary: 'Verify OTP'
      operationId: verifyOTP
      description: 'Login user into the system with OTP'
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"user\": {\n    id: 1,\n    name: \"John Smith\"\n },\n \"token\": \"AuthenticationTokenHere\"\n}"
        401:
          description: 'Invalid Login details'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid login details'
                properties:
                  message:
                    type: string
                    example: 'Invalid login details'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: "The country code of user's phone number."
                  example: '60'
                phone_no:
                  type: string
                  description: 'The Phone No of the user.'
                  example: '1234567890'
                otp:
                  type: string
                  description: "The OTP sent to user's phone number."
                  example: '123456'
              required:
                - country_code
                - phone_no
                - otp
      security: []
  /api/v1/loginWithPassword:
    post:
      summary: 'Login with Password'
      operationId: loginWithPassword
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  user: {  }
                  token: auth_token
                properties:
                  user:
                    type: object
                    properties: {  }
                  token:
                    type: string
                    example: auth_token
        401:
          description: 'Invalid Credentials'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid Credentials'
                properties:
                  message:
                    type: string
                    example: 'Invalid Credentials'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: 'Country code of phone number.'
                  example: '60'
                phone_no:
                  type: string
                  description: 'Phone number.'
                  example: '1234567890'
                password:
                  type: string
                  description: Password.
                  example: abcd1234
              required:
                - country_code
                - phone_no
                - password
      security: []
  /api/v1/loginWithOtp:
    post:
      summary: 'Login with OTP'
      operationId: loginWithOTP
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"user\": {\n   id: 1,\n  name: \"John Smith\"\n},\n\"token\": \"AuthenticationTokenHere\"\n}"
        401:
          description: 'Invalid Login details'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid login details'
                properties:
                  message:
                    type: string
                    example: 'Invalid login details'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: "The country code of user's phone number."
                  example: '60'
                phone_no:
                  type: string
                  description: 'The Phone No of the user.'
                  example: '1234567890'
                otp:
                  type: string
                  description: "The OTP sent to user's phone number."
                  example: '123456'
              required:
                - country_code
                - phone_no
                - otp
      security: []
  /api/v1/register/otp:
    post:
      summary: 'Register with OTP'
      operationId: registerWithOTP
      description: 'Register user with OTP'
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"user\": {\n    id: 1,\n    name: \"John Smith\"\n },\n \"token\": \"AuthenticationTokenHere\"\n}"
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: "The country code of user's phone number."
                  example: '60'
                phone_no:
                  type: string
                  description: 'The Phone No of the user.'
                  example: '1234567890'
                otp:
                  type: string
                  description: "The OTP sent to user's phone number."
                  example: '123456'
                name:
                  type: string
                  description: 'The name of the use.'
                  example: 'John Smith'
                password:
                  type: string
                  description: 'The password of the user.'
                  example: abcd1234
              required:
                - country_code
                - phone_no
                - otp
                - name
                - password
      security: []
  /api/v1/login/facebook:
    post:
      summary: 'Login with Facebook'
      operationId: loginWithFacebook
      description: 'Login user with Facebook'
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Client error: `GET https://graph.facebook.com/v3.3/me?access_token=1234567890&fields=name%2Cemail%2Cgender%2Cverified%2Clink` resulted in a `400 Bad Request` response:\n{\"error\":{\"message\":\"Invalid OAuth access token - Cannot parse access token\",\"type\":\"OAuthException\",\"code\":190,\"fbtrace (truncated...)\n"
                  exception: GuzzleHttp\Exception\ClientException
                  file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Exception/RequestException.php
                  line: 113
                  trace:
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Middleware.php
                      line: 72
                      function: create
                      class: GuzzleHttp\Exception\RequestException
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 209
                      function: 'GuzzleHttp\{closure}'
                      class: GuzzleHttp\Middleware
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 158
                      function: callHandler
                      class: GuzzleHttp\Promise\Promise
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/TaskQueue.php
                      line: 52
                      function: 'GuzzleHttp\Promise\{closure}'
                      class: GuzzleHttp\Promise\Promise
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 251
                      function: run
                      class: GuzzleHttp\Promise\TaskQueue
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 227
                      function: invokeWaitFn
                      class: GuzzleHttp\Promise\Promise
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 272
                      function: waitIfPending
                      class: GuzzleHttp\Promise\Promise
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 229
                      function: invokeWaitList
                      class: GuzzleHttp\Promise\Promise
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 69
                      function: waitIfPending
                      class: GuzzleHttp\Promise\Promise
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Client.php
                      line: 189
                      function: wait
                      class: GuzzleHttp\Promise\Promise
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/ClientTrait.php
                      line: 44
                      function: request
                      class: GuzzleHttp\Client
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/socialite/src/Two/FacebookProvider.php
                      line: 168
                      function: get
                      class: GuzzleHttp\Client
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/socialite/src/Two/FacebookProvider.php
                      line: 102
                      function: getUserFromAccessToken
                      class: Laravel\Socialite\Two\FacebookProvider
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/socialite/src/Two/AbstractProvider.php
                      line: 272
                      function: getUserByToken
                      class: Laravel\Socialite\Two\FacebookProvider
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/AuthController.php
                      line: 581
                      function: userFromToken
                      class: Laravel\Socialite\Two\AbstractProvider
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: facebookLogin
                      class: App\Http\Controllers\Api\AuthController
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 259
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 798
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                      line: 47
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: App\Http\Middleware\SetLocaleFromHeader
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 126
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 92
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 54
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 797
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 776
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 740
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 729
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 190
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                      line: 19
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Livewire\DisableBrowserCache
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 165
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 134
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 300
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 288
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 661
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 183
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                      line: 326
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 152
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 1078
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 324
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 175
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 155
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: "Client error: `GET https://graph.facebook.com/v3.3/me?access_token=1234567890&fields=name%2Cemail%2Cgender%2Cverified%2Clink` resulted in a `400 Bad Request` response:\n{\"error\":{\"message\":\"Invalid OAuth access token - Cannot parse access token\",\"type\":\"OAuthException\",\"code\":190,\"fbtrace (truncated...)\n"
                  exception:
                    type: string
                    example: GuzzleHttp\Exception\ClientException
                  file:
                    type: string
                    example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Exception/RequestException.php
                  line:
                    type: integer
                    example: 113
                  trace:
                    type: array
                    example:
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Middleware.php
                        line: 72
                        function: create
                        class: GuzzleHttp\Exception\RequestException
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 209
                        function: 'GuzzleHttp\{closure}'
                        class: GuzzleHttp\Middleware
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 158
                        function: callHandler
                        class: GuzzleHttp\Promise\Promise
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/TaskQueue.php
                        line: 52
                        function: 'GuzzleHttp\Promise\{closure}'
                        class: GuzzleHttp\Promise\Promise
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 251
                        function: run
                        class: GuzzleHttp\Promise\TaskQueue
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 227
                        function: invokeWaitFn
                        class: GuzzleHttp\Promise\Promise
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 272
                        function: waitIfPending
                        class: GuzzleHttp\Promise\Promise
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 229
                        function: invokeWaitList
                        class: GuzzleHttp\Promise\Promise
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 69
                        function: waitIfPending
                        class: GuzzleHttp\Promise\Promise
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Client.php
                        line: 189
                        function: wait
                        class: GuzzleHttp\Promise\Promise
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/ClientTrait.php
                        line: 44
                        function: request
                        class: GuzzleHttp\Client
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/socialite/src/Two/FacebookProvider.php
                        line: 168
                        function: get
                        class: GuzzleHttp\Client
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/socialite/src/Two/FacebookProvider.php
                        line: 102
                        function: getUserFromAccessToken
                        class: Laravel\Socialite\Two\FacebookProvider
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/socialite/src/Two/AbstractProvider.php
                        line: 272
                        function: getUserByToken
                        class: Laravel\Socialite\Two\FacebookProvider
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/AuthController.php
                        line: 581
                        function: userFromToken
                        class: Laravel\Socialite\Two\AbstractProvider
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: facebookLogin
                        class: App\Http\Controllers\Api\AuthController
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 259
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 798
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                        line: 47
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: App\Http\Middleware\SetLocaleFromHeader
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 126
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 92
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 54
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 797
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 776
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 740
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 729
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 190
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                        line: 19
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Livewire\DisableBrowserCache
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 165
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 134
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 300
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 288
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 661
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 183
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                        line: 326
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 152
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 1078
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 324
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 175
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 155
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Middleware.php
                        line:
                          type: integer
                          example: 72
                        function:
                          type: string
                          example: create
                        class:
                          type: string
                          example: GuzzleHttp\Exception\RequestException
                        type:
                          type: string
                          example: '::'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: 'The access token of the user from Facebook.'
                  example: '1234567890'
              required:
                - access_token
      security: []
  /api/v1/login/google:
    post:
      summary: 'Login with Google'
      operationId: loginWithGoogle
      description: 'Login user with Google'
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Client error: `GET https://www.googleapis.com/oauth2/v3/userinfo?prettyPrint=false` resulted in a `401 Unauthorized` response:\n{\n  \"error\": \"invalid_request\",\n  \"error_description\": \"Invalid Credentials\"\n}\n"
                  exception: GuzzleHttp\Exception\ClientException
                  file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Exception/RequestException.php
                  line: 113
                  trace:
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Middleware.php
                      line: 72
                      function: create
                      class: GuzzleHttp\Exception\RequestException
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 209
                      function: 'GuzzleHttp\{closure}'
                      class: GuzzleHttp\Middleware
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 158
                      function: callHandler
                      class: GuzzleHttp\Promise\Promise
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/TaskQueue.php
                      line: 52
                      function: 'GuzzleHttp\Promise\{closure}'
                      class: GuzzleHttp\Promise\Promise
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 251
                      function: run
                      class: GuzzleHttp\Promise\TaskQueue
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 227
                      function: invokeWaitFn
                      class: GuzzleHttp\Promise\Promise
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 272
                      function: waitIfPending
                      class: GuzzleHttp\Promise\Promise
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 229
                      function: invokeWaitList
                      class: GuzzleHttp\Promise\Promise
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                      line: 69
                      function: waitIfPending
                      class: GuzzleHttp\Promise\Promise
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Client.php
                      line: 189
                      function: wait
                      class: GuzzleHttp\Promise\Promise
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/ClientTrait.php
                      line: 44
                      function: request
                      class: GuzzleHttp\Client
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/socialite/src/Two/GoogleProvider.php
                      line: 50
                      function: get
                      class: GuzzleHttp\Client
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/socialite/src/Two/AbstractProvider.php
                      line: 272
                      function: getUserByToken
                      class: Laravel\Socialite\Two\GoogleProvider
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/AuthController.php
                      line: 623
                      function: userFromToken
                      class: Laravel\Socialite\Two\AbstractProvider
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: googleLogin
                      class: App\Http\Controllers\Api\AuthController
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 259
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 798
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                      line: 47
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: App\Http\Middleware\SetLocaleFromHeader
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 126
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 92
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 54
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 797
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 776
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 740
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 729
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 190
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                      line: 19
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Livewire\DisableBrowserCache
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 165
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 134
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 300
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 288
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 661
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 183
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                      line: 326
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 152
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 1078
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 324
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 175
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 155
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: "Client error: `GET https://www.googleapis.com/oauth2/v3/userinfo?prettyPrint=false` resulted in a `401 Unauthorized` response:\n{\n  \"error\": \"invalid_request\",\n  \"error_description\": \"Invalid Credentials\"\n}\n"
                  exception:
                    type: string
                    example: GuzzleHttp\Exception\ClientException
                  file:
                    type: string
                    example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Exception/RequestException.php
                  line:
                    type: integer
                    example: 113
                  trace:
                    type: array
                    example:
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Middleware.php
                        line: 72
                        function: create
                        class: GuzzleHttp\Exception\RequestException
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 209
                        function: 'GuzzleHttp\{closure}'
                        class: GuzzleHttp\Middleware
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 158
                        function: callHandler
                        class: GuzzleHttp\Promise\Promise
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/TaskQueue.php
                        line: 52
                        function: 'GuzzleHttp\Promise\{closure}'
                        class: GuzzleHttp\Promise\Promise
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 251
                        function: run
                        class: GuzzleHttp\Promise\TaskQueue
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 227
                        function: invokeWaitFn
                        class: GuzzleHttp\Promise\Promise
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 272
                        function: waitIfPending
                        class: GuzzleHttp\Promise\Promise
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 229
                        function: invokeWaitList
                        class: GuzzleHttp\Promise\Promise
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/promises/src/Promise.php
                        line: 69
                        function: waitIfPending
                        class: GuzzleHttp\Promise\Promise
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Client.php
                        line: 189
                        function: wait
                        class: GuzzleHttp\Promise\Promise
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/ClientTrait.php
                        line: 44
                        function: request
                        class: GuzzleHttp\Client
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/socialite/src/Two/GoogleProvider.php
                        line: 50
                        function: get
                        class: GuzzleHttp\Client
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/socialite/src/Two/AbstractProvider.php
                        line: 272
                        function: getUserByToken
                        class: Laravel\Socialite\Two\GoogleProvider
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/AuthController.php
                        line: 623
                        function: userFromToken
                        class: Laravel\Socialite\Two\AbstractProvider
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: googleLogin
                        class: App\Http\Controllers\Api\AuthController
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 259
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 798
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                        line: 47
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: App\Http\Middleware\SetLocaleFromHeader
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 126
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 92
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 54
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 797
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 776
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 740
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 729
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 190
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                        line: 19
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Livewire\DisableBrowserCache
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 165
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 134
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 300
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 288
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 661
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 183
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                        line: 326
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 152
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 1078
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 324
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 175
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 155
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/guzzlehttp/guzzle/src/Middleware.php
                        line:
                          type: integer
                          example: 72
                        function:
                          type: string
                          example: create
                        class:
                          type: string
                          example: GuzzleHttp\Exception\RequestException
                        type:
                          type: string
                          example: '::'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: 'The access token of the user from Google.'
                  example: '1234567890'
              required:
                - access_token
      security: []
  /api/v1/login/social:
    post:
      summary: 'Login with Social (via Firebase Auth)'
      operationId: loginWithSocialviaFirebaseAuth
      description: 'Login user with Social'
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"user\": {\n    id: 1,\n    name: \"John Smith\"\n },\n \"token\": \"AuthenticationTokenHere\"\n}"
        422:
          description: 'Invalid Token'
          content:
            text/plain:
              schema:
                type: string
                example: '{"message": "Invalid Token" ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: 'Firebase Auth Token ().'
                  example: "'ey271236...'"
              required:
                - access_token
      security: []
  /api/v1/reset-password-send-otp:
    post:
      summary: 'Reset Password Send NEW OTP (Step 1)'
      operationId: resetPasswordSendNEWOTPStep1
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'OTP sent successfully'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'OTP sent successfully'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_no:
                  type: string
                  description: 'The phone no of the user.'
                  example: '0123456789'
              required:
                - phone_no
      security: []
  /api/v1/reset-password:
    post:
      summary: 'Reset Password with OTP (Step 2)'
      operationId: resetPasswordWithOTPStep2
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Password reset successfully'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Password reset successfully'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_no:
                  type: string
                  description: 'The phone no of the user.'
                  example: '0123456789'
                new_password:
                  type: string
                  description: 'The new password of the user.'
                  example: '123456'
                otp:
                  type: string
                  description: 'The otp of the user.'
                  example: '123456'
              required:
                - phone_no
                - new_password
                - otp
      security: []
  /api/v1/logout:
    post:
      summary: Logout
      operationId: logout
      description: 'Log User Out and destroy any active tokens of user'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Logged Out'
                properties:
                  message:
                    type: string
                    example: 'Logged Out'
        401:
          description: 'Access Denied'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Access Denied'
                properties:
                  message:
                    type: string
                    example: 'Access Denied'
      tags:
        - Authentication
  /api/v1/user/complete-profile:
    post:
      summary: 'Complete Profile'
      operationId: completeProfile
      description: 'Complete user profile after registration'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Profile Updated'
                properties:
                  message:
                    type: string
                    example: 'Profile Updated'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"message": "Please verify your phone number first" ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the use.'
                  example: 'John Smith'
                email:
                  type: string
                  description: 'The email of the user(email verificatioin will be sent).'
                  example: john@example.com
                password:
                  type: string
                  description: 'The password of the user(social login do not need to provide).'
                  example: abcd1234
              required:
                - name
                - email
  /api/v1/user/send-email-verification:
    post:
      summary: 'Send Verification Email with Token Inside'
      operationId: sendVerificationEmailWithTokenInside
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Verification Email Sent'
                properties:
                  message:
                    type: string
                    example: 'Verification Email Sent'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'You can pass in email address here if user decide to change it again.'
                  example: john@example.com
              required:
                - email
  /api/v1/user/verify-email:
    post:
      summary: 'Verify Email with Token'
      operationId: verifyEmailWithToken
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email Verified'
                properties:
                  message:
                    type: string
                    example: 'Email Verified'
        422:
          description: 'Invalid Token'
          content:
            text/plain:
              schema:
                type: string
                example: '{"message": "Invalid Token" ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'The email verification token.'
                  example: '123456'
              required:
                - token
  /api/v1/campaigns/active:
    get:
      summary: 'Get Active Campaigns'
      operationId: getActiveCampaigns
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  has_active_campaign: true
                  campaigns: []
                properties:
                  has_active_campaign:
                    type: boolean
                    example: true
                  campaigns:
                    type: array
                    example: []
      tags:
        - Campaigns
  /api/v1/campaigns/save/single_aswer:
    post:
      summary: 'Save Single Answer to a Question'
      operationId: saveSingleAnswerToAQuestion
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Answer saved successfully'
                properties:
                  message:
                    type: string
                    example: 'Answer saved successfully'
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: integer
                  description: 'The ID of the question.'
                  example: 1
                answer:
                  type: string
                  description: 'The answer to the question.'
                  example: Yes/A/B/C/D/Text
              required:
                - question_id
                - answer
  /api/v1/campaigns/answers_by_campaign_brand:
    get:
      summary: 'Get My Answers by Campaign and Brand'
      operationId: getMyAnswersByCampaignAndBrand
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  campaign: {  }
                  answers: []
                properties:
                  campaign:
                    type: object
                    properties: {  }
                  answers:
                    type: array
                    example: []
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_id:
                  type: integer
                  description: 'The ID of the campaign.'
                  example: 1
                brand:
                  type: string
                  description: 'The brand of the campaign.'
                  example: 'Brand A'
              required:
                - campaign_id
                - brand
  /api/v1/campaigns/questions_by_campaign:
    get:
      summary: 'Get Questions by Campaign'
      operationId: getQuestionsByCampaign
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  campaign: {  }
                  questions: []
                properties:
                  campaign:
                    type: object
                    properties: {  }
                  questions:
                    type: array
                    example: []
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_id:
                  type: integer
                  description: 'The ID of the campaign.'
                  example: 1
              required:
                - campaign_id
  /api/v1/campaigns/questions_by_brand_campaign:
    get:
      summary: 'Get Questions by Campaign and Brand'
      operationId: getQuestionsByCampaignAndBrand
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  campaign: {  }
                  questions: []
                properties:
                  campaign:
                    type: object
                    properties: {  }
                  questions:
                    type: array
                    example: []
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  type: string
                  description: 'The brand of the campaign.'
                  example: 'Brand A'
                campaign_id:
                  type: integer
                  description: 'The ID of the campaign.'
                  example: 1
              required:
                - brand
                - campaign_id
  /api/v1/campaigns/save/respondant_details:
    post:
      summary: 'Create Respondant Details'
      operationId: createRespondantDetails
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Respondant details created successfully'
                properties:
                  message:
                    type: string
                    example: 'Respondant details created successfully'
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_id:
                  type: integer
                  description: 'The ID of the campaign.'
                  example: 1
                name:
                  type: string
                  description: 'The name of the respondant.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'The email of the respondant. Example:'
                  example: kamryn91@example.net
                phone:
                  type: string
                  description: 'The phone of the respondant.'
                  example: '0123456789'
                ic:
                  type: string
                  description: 'The ic of the respondant.'
                  example: '123456789012'
                address:
                  type: string
                  description: 'The address of the respondant.'
                  example: '123, Jalan ABC, 12345, Kuala Lumpur'
              required:
                - campaign_id
                - name
                - email
                - phone
                - ic
                - address
  /api/v1/campaigns/respondant_details:
    get:
      summary: 'Get Respondant Details of User'
      operationId: getRespondantDetailsOfUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  respondant_details: {  }
                  has_submitted_respondant_details: true
                properties:
                  respondant_details:
                    type: object
                    properties: {  }
                  has_submitted_respondant_details:
                    type: boolean
                    example: true
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_id:
                  type: integer
                  description: 'The ID of the campaign.'
                  example: 1
              required:
                - campaign_id
  /api/v1/public_article:
    get:
      summary: 'Get Article (public)'
      operationId: getArticlepublic
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: ''
                  exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line: 1144
                  trace:
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                      line: 45
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/ArticleController.php
                      line: 1577
                      function: abort
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: getArticleForPublicView
                      class: App\Http\Controllers\Api\ArticleController
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 259
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 798
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                      line: 47
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: App\Http\Middleware\SetLocaleFromHeader
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 126
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 92
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 54
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 797
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 776
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 740
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 729
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 190
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                      line: 19
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Livewire\DisableBrowserCache
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 165
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 134
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 300
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 288
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 661
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 183
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                      line: 326
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 152
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 1078
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 324
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 175
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 155
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: ''
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file:
                    type: string
                    example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line:
                    type: integer
                    example: 1144
                  trace:
                    type: array
                    example:
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line: 45
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/ArticleController.php
                        line: 1577
                        function: abort
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: getArticleForPublicView
                        class: App\Http\Controllers\Api\ArticleController
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 259
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 798
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                        line: 47
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: App\Http\Middleware\SetLocaleFromHeader
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 126
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 92
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 54
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 797
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 776
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 740
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 729
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 190
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                        line: 19
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Livewire\DisableBrowserCache
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 165
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 134
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 300
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 288
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 661
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 183
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                        line: 326
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 152
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 1078
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 324
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 175
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 155
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line:
                          type: integer
                          example: 45
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                share_code:
                  type: string
                  description: ''
                  example: est
              required:
                - share_code
  /api/v1/public_user:
    get:
      summary: ''
      operationId: getApiV1Public_user
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User not found'
                properties:
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: dolorum
              required:
                - username
  /api/v1/public_offer:
    get:
      summary: 'Get Merchant Offer Public'
      operationId: getMerchantOfferPublic
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: ''
                  exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line: 1144
                  trace:
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                      line: 45
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/MerchantOfferController.php
                      line: 814
                      function: abort
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: getPublicOfferPublicView
                      class: App\Http\Controllers\Api\MerchantOfferController
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 259
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 798
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                      line: 47
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: App\Http\Middleware\SetLocaleFromHeader
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 126
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 92
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 54
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 797
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 776
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 740
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 729
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 190
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                      line: 19
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Livewire\DisableBrowserCache
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 165
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 134
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 300
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 288
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 661
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 183
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                      line: 326
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 152
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 1078
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 324
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 175
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 155
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: ''
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file:
                    type: string
                    example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line:
                    type: integer
                    example: 1144
                  trace:
                    type: array
                    example:
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line: 45
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/MerchantOfferController.php
                        line: 814
                        function: abort
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: getPublicOfferPublicView
                        class: App\Http\Controllers\Api\MerchantOfferController
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 259
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 798
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                        line: 47
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: App\Http\Middleware\SetLocaleFromHeader
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 126
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 92
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 54
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 797
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 776
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 740
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 729
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 190
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                        line: 19
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Livewire\DisableBrowserCache
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 165
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 134
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 300
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 288
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 661
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 183
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                        line: 326
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 152
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 1078
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 324
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 175
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 155
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line:
                          type: integer
                          example: 45
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                share_code:
                  type: string
                  description: ''
                  example: qui
              required:
                - share_code
  /api/v1/public_store:
    get:
      summary: 'Get Public Store Public View'
      operationId: getPublicStorePublicView
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: ''
                  exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line: 1144
                  trace:
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                      line: 45
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/StoreController.php
                      line: 493
                      function: abort
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: getPublicStorePublicView
                      class: App\Http\Controllers\Api\StoreController
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 259
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 798
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                      line: 47
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: App\Http\Middleware\SetLocaleFromHeader
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 126
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 92
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 54
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 797
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 776
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 740
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 729
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 190
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                      line: 19
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Livewire\DisableBrowserCache
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 165
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 134
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 300
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 288
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 661
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 183
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                      line: 326
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 152
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 1078
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 324
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 175
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 155
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: ''
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file:
                    type: string
                    example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line:
                    type: integer
                    example: 1144
                  trace:
                    type: array
                    example:
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line: 45
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/StoreController.php
                        line: 493
                        function: abort
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: getPublicStorePublicView
                        class: App\Http\Controllers\Api\StoreController
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 259
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 798
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                        line: 47
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: App\Http\Middleware\SetLocaleFromHeader
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 126
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 92
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 54
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 797
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 776
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 740
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 729
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 190
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                        line: 19
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Livewire\DisableBrowserCache
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 165
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 134
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 300
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 288
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 661
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 183
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                        line: 326
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 152
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 1078
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 324
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 175
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 155
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line:
                          type: integer
                          example: 45
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                share_code:
                  type: string
                  description: ''
                  example: voluptas
              required:
                - share_code
  /api/v1/help/faqs:
    get:
      summary: 'Get All FAQs'
      operationId: getAllFAQs
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Help Center'
    parameters:
      -
        in: path
        name: category_ids
        description: 'Optional parameter. array optional Array of category ids.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: query
        description: 'Optional parameter. optional Search query.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'How to ...'
  /api/v1/help/faq_categories:
    get:
      summary: 'Get All FAQs Categories'
      operationId: getAllFAQsCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Help Center'
  /api/v1/help/support_requests:
    get:
      summary: 'Get My Support Requests'
      operationId: getMySupportRequests
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Help Center'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'optional Status of support request.'
                  example: '0=pending,1=in progress,2=pending info,3=closed,4=reopened,5=invalid'
                category_ids:
                  type: array
                  description: 'optional Array of category ids.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                query:
                  type: string
                  description: 'optional Search query.'
                  example: 'my support request'
                limit:
                  type: integer
                  description: 'optional Limit of results per page.'
                  example: 10
  /api/v1/help/support_requests/raise:
    post:
      summary: 'Raise Support Request'
      operationId: raiseSupportRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Help Center'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: 'Category id.'
                  example: 1
                title:
                  type: string
                  description: 'Title of support request.'
                  example: 'My support request'
                message:
                  type: string
                  description: 'Message to send.'
                  example: 'This is my message'
                media_ids:
                  type: array
                  description: 'optional Array of media ids.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
              required:
                - category_id
                - title
                - message
  '/api/v1/help/support_requests/{support_request_id}/reply':
    post:
      summary: 'Reply to Support Request'
      operationId: replyToSupportRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: {  }
                  request: {  }
                properties:
                  message:
                    type: object
                    properties: {  }
                  request:
                    type: object
                    properties: {  }
      tags:
        - 'Help Center'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: 'Message to send.'
                  example: 'This is my message'
                media_ids:
                  type: array
                  description: 'optional Array of media ids.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
              required:
                - message
    parameters:
      -
        in: path
        name: support_request_id
        description: 'The ID of the support request.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'Support Request ID.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/v1/help/support_requests/{support_request_id}/messages':
    get:
      summary: 'Get Messages of Support Request'
      operationId: getMessagesOfSupportRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Help Center'
    parameters:
      -
        in: path
        name: support_request_id
        description: 'The ID of the support request.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'Support Request ID.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/v1/help/support_requests/{support_request_id}/resolve':
    post:
      summary: 'Resolve Support Request'
      operationId: resolveSupportRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Support request resolved and closed'
                properties:
                  message:
                    type: string
                    example: 'Support request resolved and closed'
      tags:
        - 'Help Center'
    parameters:
      -
        in: path
        name: support_request_id
        description: 'The ID of the support request.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'Support Request ID.'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/help/support_requests/categories:
    get:
      summary: 'Get Support Request Categories'
      operationId: getSupportRequestCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Help Center'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'optional Type of support request category.'
                  example: 'complain,bug,feature_request,others'
  /api/v1/help/support_requests/attach:
    post:
      summary: 'Upload Attachments(Images) for Support Messages'
      operationId: uploadAttachmentsImagesForSupportMessages
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  uploaded:
                    -
                      id: 1
                      name: image.jpg
                      url: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                      size: 12345
                      type: image/jpeg
                properties:
                  uploaded:
                    type: array
                    example:
                      -
                        id: 1
                        name: image.jpg
                        url: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                        size: 12345
                        type: image/jpeg
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: image.jpg
                        url:
                          type: string
                          example: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                        size:
                          type: integer
                          example: 12345
                        type:
                          type: string
                          example: image/jpeg
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["images": ["The images field is required."] ]}'
      tags:
        - 'Help Center'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: string
                  format: binary
                  description: 'The images to upload.'
              required:
                - images
  /api/v1/interactions/users:
    get:
      summary: 'Get Users of Interaction'
      operationId: getUsersOfInteraction
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links: {  }
                  meta: {  }
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties: {  }
                  meta:
                    type: object
                    properties: {  }
      tags:
        - Interactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interactable:
                  type: string
                  description: 'The type of interactable.'
                  example: 'article,merchant_offer,merchant_rating,store_rating,store'
                id:
                  type: integer
                  description: 'The id of the interactable.'
                  example: 1
                type:
                  type: string
                  description: 'The type of interaction.'
                  example: 'like,dislike,share,bookmark'
              required:
                - interactable
                - id
                - type
  /api/v1/interactions:
    get:
      summary: 'Get interactions on a interactable type (eg. Articles)'
      operationId: getInteractionsOnAInteractableTypeegArticles
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Interactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interactable:
                  type: string
                  description: 'The type of interactable.'
                  example: 'article,merchant_offer,merchant_rating,store_rating,store'
                id:
                  type: integer
                  description: 'The id of the interactable.'
                  example: 1
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, interactable_id, interactable_type, body, created_at, updated_at'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, interactable_id, interactable_type, body, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
              required:
                - interactable
                - id
    post:
      summary: 'Create an interaction for interactable type'
      operationId: createAnInteractionForInteractableType
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  interaction: {  }
                properties:
                  interaction:
                    type: object
                    properties: {  }
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - Interactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interactable:
                  type: string
                  description: 'The type of interactable.'
                  example: 'article,merchant_offer,merchant_rating,store_rating,store'
                type:
                  type: string
                  description: 'The type of interaction.'
                  example: 'like,dislike,share,bookmark'
                id:
                  type: integer
                  description: 'The id of the interactable (eg. Article ID).'
                  example: 1
                code:
                  type: string
                  description: 'optional The code of the shareable link(6 characters).'
                  example: '1'
                model_type:
                  type: string
                  description: 'optional The model type of the shareable link.'
                  example: 'article,merchant_offer,store'
              required:
                - interactable
                - type
                - id
  '/api/v1/interactions/{id}':
    get:
      summary: 'Show one interaction by ID'
      operationId: showOneInteractionByID
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Interactions
    delete:
      summary: "Remove Interaction By ID\nOnly owner can call this method"
      operationId: removeInteractionByIDOnlyOwnerCanCallThisMethod
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Interaction deleted'
                properties:
                  message:
                    type: string
                    example: 'Interaction deleted'
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: "{['message' => 'Interaction not found']}"
      tags:
        - Interactions
    parameters:
      -
        in: path
        name: id
        description: 'The id of the interaction.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/locations:
    get:
      summary: 'Get Locations'
      operationId: getLocations
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                location_ids:
                  type: array
                  description: 'optional Location Ids to Filter. Example [1,2,3]'
                  example:
                    - eum
                  items:
                    type: string
                name:
                  type: string
                  description: 'optional Search query.'
                  example: '"KFC SS15"'
                state_id:
                  type: integer
                  description: 'optional Filter by state id.'
                  example: 1
                country_id:
                  type: integer
                  description: 'optional Filter by country id.'
                  example: 1
                city:
                  type: string
                  description: 'optional Filter by city.'
                  example: '"Subang Jaya"'
                lat:
                  type: number
                  description: 'optional Latitude of User GeoLoc.'
                  example: 3.073065
                lng:
                  type: number
                  description: 'optional Longitude of User GeoLoc.'
                  example: 101.607787
                radius:
                  type: integer
                  description: 'optional Radius (KM) of search if lat,lng provided.'
                  example: 10
  '/api/v1/locations/{location_id}':
    get:
      summary: 'Get One Location'
      operationId: getOneLocation
      description: 'Locaiton will auto load state, coutry, articles, merchant offers, ratings'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                properties:
                  data:
                    type: object
                    properties: {  }
      tags:
        - Location
    parameters:
      -
        in: path
        name: location_id
        description: 'The ID of the location.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: location
        description: 'Location ID.'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/maintenance:
    get:
      summary: 'Get maintenance info'
      operationId: getMaintenanceInfo
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n}"
      tags:
        - Maintenance
  /api/v1/media/signed_upload:
    get:
      summary: "Get Signed URL Upload Media (photos/videos)\nMust only call one per file. If multiple files, call multiple times. URL generated you need to PUT a binary file to it."
      operationId: getSignedURLUploadMediaphotosvideosMustOnlyCallOnePerFileIfMultipleFilesCallMultipleTimesURLGeneratedYouNeedToPUTABinaryFileToIt
      description: ''
      parameters: []
      responses:
        200:
          description: failed
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Only applicable for S3 Storage'
                  url: null
                properties:
                  message:
                    type: string
                    example: 'Only applicable for S3 Storage'
                  url:
                    type: string
                    example: null
      tags:
        - Media
    parameters:
      -
        in: path
        name: filename
        description: 'The filename of the media to be uploaded, filename must only contain alphabets and numbers.'
        example: my-photo.jpg
        required: true
        schema:
          type: string
  /api/v1/media/upload_complete:
    post:
      summary: 'Upload Media Complete'
      operationId: uploadMediaComplete
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Success\",\n\"uploaded\": [\n{\n\"id\": 1,\n\"name\": \"1619114400-608b7a10a3b3d_my-photo.jpg\",\n\"url\": \"https://your-bucket-name.s3-ap-southeast-1.amazonaws.com/user_uploads/1619114400-608b7a10a3b3d_my-photo.jpg\",\n\"size\": 12345,\n\"type\": \"image/jpeg\"\n},\n]\n}"
      tags:
        - Media
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                upload_ids:
                  type: string
                  description: 'The upload_ids from get signed upload link, can be multiple ids in a comma separated.'
                  example: '1619114400-608b7a10a3b3d,1619114400-608b7a10a3b3e'
                is_cover:
                  type: boolean
                  description: 'optional The is_cover flag, default false.'
                  example: true
              required:
                - upload_ids
  /api/v1/merchant/offers/nearby:
    get:
      summary: 'Get Merchant Offers Nearby'
      operationId: getMerchantOffersNearby
      description: ''
      parameters:
        -
          in: query
          name: category_ids
          description: 'optional Merchant Category Ids to Filter.'
          example:
            - 1
            - 2
            - 3
          required: false
          schema:
            type: array
            description: 'optional Merchant Category Ids to Filter.'
            example:
              - 1
              - 2
              - 3
            items:
              type: string
        -
          in: query
          name: merchant_offer_ids
          description: 'optional Merchant Offer Ids to Filter. Example [1,2,3]'
          example:
            - dolor
          required: false
          schema:
            type: array
            description: 'optional Merchant Offer Ids to Filter. Example [1,2,3]'
            example:
              - dolor
            items:
              type: string
        -
          in: query
          name: city
          description: 'optional Filter by City Name.'
          example: 'Subang Jaya'
          required: false
          schema:
            type: string
            description: 'optional Filter by City Name.'
            example: 'Subang Jaya'
        -
          in: query
          name: lat
          description: 'Filter by Lat of User (must provide lng).'
          example: 3.123456
          required: true
          schema:
            type: number
            description: 'Filter by Lat of User (must provide lng).'
            example: 3.123456
        -
          in: query
          name: lng
          description: 'Filter by Lng of User (must provide lat).'
          example: 101.123456
          required: true
          schema:
            type: number
            description: 'Filter by Lng of User (must provide lat).'
            example: 101.123456
        -
          in: query
          name: radius
          description: 'optional Filter by Radius (in meters) if provided lat, lng.'
          example: 10000
          required: false
          schema:
            type: integer
            description: 'optional Filter by Radius (in meters) if provided lat, lng.'
            example: 10000
        -
          in: query
          name: available_only
          description: 'optional Filter by Available Only.'
          example: true
          required: false
          schema:
            type: boolean
            description: 'optional Filter by Available Only.'
            example: true
        -
          in: query
          name: coming_soon_only
          description: 'optional Filter by Coming Soon Only.'
          example: true
          required: false
          schema:
            type: boolean
            description: 'optional Filter by Coming Soon Only.'
            example: true
        -
          in: query
          name: except_expired
          description: 'optional Get all coming soon or available only but hide expired offers.'
          example: true
          required: false
          schema:
            type: boolean
            description: 'optional Get all coming soon or available only but hide expired offers.'
            example: true
        -
          in: query
          name: flash_only
          description: 'optional Filter by Flash Deals Only.'
          example: true
          required: false
          schema:
            type: boolean
            description: 'optional Filter by Flash Deals Only.'
            example: true
        -
          in: query
          name: limit
          description: 'optional Per Page Limit Override.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'optional Per Page Limit Override.'
            example: 10
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [],\n}"
      tags:
        - Merchant
  /api/v1/merchant/offers/my_bookmarks:
    get:
      summary: 'Get My Bookmarked Merchant Offers'
      operationId: getMyBookmarkedMerchantOffers
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Merchant
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are:  id, name, description, available_at, available_until, sku'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
  /api/v1/merchant/offers:
    get:
      summary: 'Get Offers'
      operationId: getOffers
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Merchant
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                category_ids:
                  type: array
                  description: 'optional Merchant Category Ids to Filter.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                merchant_offer_ids:
                  type: array
                  description: 'optional Merchant Offer Ids to Filter. Example [1,2,3]'
                  example:
                    - nobis
                  items:
                    type: string
                city:
                  type: string
                  description: 'optional Filter by City.'
                  example: 'Subang Jaya'
                lat:
                  type: number
                  description: 'optional Filter by Lat of User (must provide lng).'
                  example: 3.123456
                lng:
                  type: number
                  description: 'optional Filter by Lng of User (must provide lat).'
                  example: 101.123456
                radius:
                  type: integer
                  description: 'optional Filter by Radius (in meters) if provided lat, lng.'
                  example: 10000
                location_id:
                  type: integer
                  description: 'optional Filter by Location Id.'
                  example: 1
                available_only:
                  type: boolean
                  description: 'optional Filter by Available Only.'
                  example: true
                coming_soon_only:
                  type: boolean
                  description: 'optional Filter by Coming Soon Only.'
                  example: true
                except_expired:
                  type: boolean
                  description: 'optional Get all coming soon or available only but hide expired offers.'
                  example: true
                flash_only:
                  type: boolean
                  description: 'optional Filter by Flash Deals Only.'
                  example: true
                merchant_id:
                  type: integer
                  description: 'optional Filter by Merchant ID.'
                  example: 1
                store_id:
                  type: integer
                  description: 'optional Filter by Store ID.'
                  example: 1
                hide_purchased:
                  type: boolean
                  description: 'optional Hide Purchased Offers for current logged in user.'
                  example: true
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, name, description, available_at, available_until, sku'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, name, description, available_at, available_until, sku, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
  /api/v1/merchant/offers/claim:
    post:
      summary: 'Claim Offer'
      operationId: claimOffer
      description: ''
      parameters: []
      responses:
        200:
          description: offer_no_longer_valid
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Offer is no longer valid'
                properties:
                  message:
                    type: string
                    example: 'Offer is no longer valid'
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                offer_id:
                  type: integer
                  description: 'Offer ID.'
                  example: 1
                payment_method:
                  type: string
                  description: 'Payment Method.'
                  example: points/fiat
                fiat_payment_method:
                  type: string
                  description: 'required_if:payment_method,fiat Payment Method.'
                  example: fpx/card
                quantity:
                  type: integer
                  description: Quantity.
                  example: 1
              required:
                - offer_id
                - payment_method
                - quantity
  /api/v1/merchant/offers/redeem:
    post:
      summary: "Redeem a Merchant Offer (In-Store)\nThis is when customer with claimed merchant offer wishes to redeem in store"
      operationId: redeemAMerchantOfferInStoreThisIsWhenCustomerWithClaimedMerchantOfferWishesToRedeemInStore
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Redeemed successfully'
                  offer: {  }
                properties:
                  message:
                    type: string
                    example: 'Redeemed successfully'
                  offer:
                    type: object
                    properties: {  }
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                claim_id:
                  type: integer
                  description: 'Claim ID.'
                  example: 1
                offer_id:
                  type: integer
                  description: 'Merchant Offer ID.'
                  example: 1
                quantity:
                  type: integer
                  description: 'Quantity to Redeem.'
                  example: 1
                redeem_code:
                  type: string
                  description: 'Redemption Code Provided by Merchant.'
                  example: '123456'
              required:
                - claim_id
                - offer_id
                - quantity
                - redeem_code
  /api/v1/merchant/offers/cancel:
    post:
      summary: 'Cancel a Merchant Offer Transaction'
      operationId: cancelAMerchantOfferTransaction
      description: ''
      parameters: []
      responses:
        200:
          description: offer_pending_payment_not_found
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have not claimed this offer'
                properties:
                  message:
                    type: string
                    example: 'You have not claimed this offer'
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant_offer_id:
                  type: integer
                  description: 'Merchant Offer ID.'
                  example: 1
              required:
                - merchant_offer_id
  /api/v1/merchant/offers/my_claimed_offers:
    get:
      summary: 'Get My Merchant Offers (Logged in User)'
      operationId: getMyMerchantOffersLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: is_redeemed
        description: 'Optional parameter. optional Filter by Redeemed.'
        required: true
        schema:
          type: number
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 0.0
      -
        in: path
        name: is_expired
        description: 'Optional parameter. optional Filter by Expired.'
        required: true
        schema:
          type: number
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 0.0
  '/api/v1/merchant/offers/{offer_id}':
    get:
      summary: 'Get Offer By ID'
      operationId: getOfferByID
      description: ''
      parameters:
        -
          in: query
          name: offer_id
          description: 'Offer ID.'
          example: 1
          required: true
          schema:
            type: integer
            description: 'Offer ID.'
            example: 1
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  offer: {  }
                properties:
                  offer:
                    type: object
                    properties: {  }
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: offer_id
        description: 'The ID of the offer.'
        example: nihil
        required: true
        schema:
          type: string
  /api/v1/merchants:
    get:
      summary: 'Get Merchants'
      operationId: getMerchants
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: search
        description: 'Optional parameter. optional Search by business name.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'business name'
      -
        in: path
        name: categories_id
        description: 'Optional parameter. optional Search by categories id.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: merchant_ids
        description: 'Optional parameter. optional Search by merchant ids.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: store_ids
        description: 'Optional parameter. optional Search by store ids.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: limit
        description: 'Optional parameter. optional Limit the number of results.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  /api/v1/merchants/crm:
    post:
      summary: 'Create Merchant CRM Record'
      operationId: createMerchantCRMRecord
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Created Merchant Contact'
                properties:
                  message:
                    type: string
                    example: 'Created Merchant Contact'
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                brand_name:
                  type: string
                  description: 'Brand Name.'
                  example: ABC
                pic_name:
                  type: string
                  description: 'PIC Name.'
                  example: 'John Doe'
                postcode:
                  type: string
                  description: Postcode.
                  example: '47530'
                phone_no:
                  type: string
                  description: 'Phone Number.'
                  example: '0123456789'
                address:
                  type: string
                  description: 'optional Address.'
                  example: '123, Jalan ABC'
              required:
                - brand_name
                - pic_name
                - postcode
                - phone_no
  /api/v1/merchants/rating_categories:
    get:
      summary: 'Get Merchant Rating Categories'
      operationId: getMerchantRatingCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata: []\n}"
      tags:
        - Merchant
  /api/v1/merchants/nearby:
    get:
      summary: "Get Nearby Merchants\nWill lookup based on user provided lat,lng and search for merchant stores near user"
      operationId: getNearbyMerchantsWillLookupBasedOnUserProvidedLatlngAndSearchForMerchantStoresNearUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: lat
        description: Latitude.
        example: '3.1390'
        required: true
        schema:
          type: string
      -
        in: path
        name: lng
        description: Longitude.
        example: '101.6869'
        required: true
        schema:
          type: string
      -
        in: path
        name: radius
        description: 'Optional parameter. optional Radius in km.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '10'
      -
        in: path
        name: limit
        description: 'Optional parameter. optional Limit the number of results.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  '/api/v1/merchants/{merchant_id}/locations':
    get:
      summary: 'Get Location by Merchant ID'
      operationId: getLocationByMerchantID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: merchant_id
        description: 'Merchant ID.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/merchants/{merchant_id}/ratings':
    get:
      summary: 'Get Merchant Ratings'
      operationId: getMerchantRatings
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
    post:
      summary: 'Rate a Merchant'
      operationId: rateAMerchant
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata: {}\n}"
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  description: Rating.
                  example: 5
                comment:
                  type: string
                  description: 'optional Comment.'
                  example: 'Good service'
                rating_category_ids:
                  type: string
                  description: 'optional Rating Category IDs.'
                  example: '1,2,3'
              required:
                - rating
    parameters:
      -
        in: path
        name: merchant_id
        description: 'Optional parameter. optional Only load specific merchant ratings.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: merchant
        description: 'Merchant ID.'
        example: '1'
        required: true
        schema:
          type: string
      -
        in: path
        name: only_mine
        description: 'Optional parameter. boolean optional Only show my ratings.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'true'
      -
        in: path
        name: user_id
        description: 'Optional parameter. optional Only load specific user ratings.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: sort
        description: 'Optional parameter. Column to Sort.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'Sortable columns are: id, rating, created_at, updated_at'
      -
        in: path
        name: order
        description: 'Optional parameter. Direction to Sort.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'Sortable directions are: asc, desc'
      -
        in: path
        name: limit
        description: 'Optional parameter. Per Page Limit Override.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  '/api/v1/merchants/{merchant_id}/menus':
    get:
      summary: 'Get Merchant Menus'
      operationId: getMerchantMenus
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n[\n'https://example.com/menu1.pdf',\n'https://example.com/menu2.pdf',\n'https://example.com/menu3.pdf',\n]"
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: merchant_id
        description: 'The ID of the merchant.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: merchant
        description: 'Merchant ID.'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/merchant_offer_categories:
    get:
      summary: 'Get All Merchant Offer Categories'
      operationId: getAllMerchantOfferCategories
      description: ''
      parameters:
        -
          in: query
          name: is_featured
          description: 'Is Featured Categories.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Is Featured Categories.'
            example: 1
        -
          in: query
          name: is_active
          description: 'Is Active Categories.'
          example: 0
          required: false
          schema:
            type: integer
            description: 'Is Active Categories.'
            example: 0
        -
          in: query
          name: lat
          description: Latitude.
          example: 3.139
          required: false
          schema:
            type: number
            description: Latitude.
            example: 3.139
        -
          in: query
          name: lng
          description: Longitude.
          example: 101.6869
          required: false
          schema:
            type: number
            description: Longitude.
            example: 101.6869
        -
          in: query
          name: id
          description: 'Get subcategories of a specific parent category by its ID.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Get subcategories of a specific parent category by its ID.'
            example: 1
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
  /api/v1/merchant_categories:
    get:
      summary: 'Get popular Merchant Categories'
      operationId: getPopularMerchantCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  categories: []
                properties:
                  categories:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Merchant
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_featured:
                  type: integer
                  description: 'Is Featured Categories.'
                  example: 1
                has_offers:
                  type: integer
                  description: 'Check if category has published offers.'
                  example: 1
                has_stores:
                  type: integer
                  description: 'Check if category has linked to stores.'
                  example: 1
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, name, created_at, updated_at'
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, name, created_at, updated_at'
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
  '/api/v1/merchant_categories/{offer_id}':
    get:
      summary: 'Get Merchant Categories by offer id'
      operationId: getMerchantCategoriesByOfferId
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  categories: []
                properties:
                  categories:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: offer_id
        description: 'The id of the merchant offer id.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/merchant-contact:
    post:
      summary: 'Submit Merchant Contact Information'
      operationId: submitMerchantContactInformation
      description: 'Allows users to submit merchant contact information via the API.'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Merchant contact information submitted successfully'
                properties:
                  message:
                    type: string
                    example: 'Merchant contact information submitted successfully'
        422:
          description: 'Invalid Form Fields'
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    name:
                      - 'The Name field is required.'
                    email:
                      - 'The Email field must be a valid email address.'
                    tel_no:
                      - 'The Phone Number field is required.'
                    company_name:
                      - 'The Company Name field is required.'
                    business_type:
                      - 'The Business Type field is required.'
                    message_type:
                      - 'The Message Category field is required.'
                    message:
                      - 'The Message field is required.'
                properties:
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        example:
                          - 'The Name field is required.'
                        items:
                          type: string
                      email:
                        type: array
                        example:
                          - 'The Email field must be a valid email address.'
                        items:
                          type: string
                      tel_no:
                        type: array
                        example:
                          - 'The Phone Number field is required.'
                        items:
                          type: string
                      company_name:
                        type: array
                        example:
                          - 'The Company Name field is required.'
                        items:
                          type: string
                      business_type:
                        type: array
                        example:
                          - 'The Business Type field is required.'
                        items:
                          type: string
                      message_type:
                        type: array
                        example:
                          - 'The Message Category field is required.'
                        items:
                          type: string
                      message:
                        type: array
                        example:
                          - 'The Message field is required.'
                        items:
                          type: string
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the contact person.'
                  example: 'Alex Koh'
                email:
                  type: string
                  description: 'The email address of the contact person.'
                  example: alex@funhub.my
                tel_no:
                  type: string
                  description: 'The telephone number of the contact person.'
                  example: '182036794'
                company_name:
                  type: string
                  description: 'The name of the company.'
                  example: 'Funhub TV'
                business_type:
                  type: string
                  description: 'The type of the business.'
                  example: others
                other_business_type:
                  type: string
                  description: 'required_if:business_type,others The type of the business.'
                  example: 'IT Consult'
                message_type:
                  type: string
                  description: 'The category of the message.'
                  example: 'General Inquiry'
                message:
                  type: text
                  description: 'The message or remarks.'
                  example: 'This is a sample message.'
              required:
                - name
                - email
                - tel_no
                - company_name
                - business_type
                - message_type
                - message
  /api/v1/missions:
    get:
      summary: 'Get all missions available.'
      operationId: getAllMissionsAvailable
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"current_page\": 1,\n\"data\": [\n  {\n  \"id\": 1,\n  \"name\": \"Complete 10 missions\",\n  \"is_participating\": true,\n  \"description\": \"Complete 10 missions to earn a reward\",\n  \"events\": [\"mission_completed\"],\n  \"current_values\": {\"mission_completed\": 5},\n  \"values\": {\"mission_completed\": 10},\n  \"reward\": {\n      \"id\": 1,\n      \"name\": \"Egg\",\n      \"description\": \"egg\",\n      \"thumbnail_url\": \"https://example.com/egg.png\",\n  },\n  \"reward_quantity\": 1,\n  \"claimed\": false,\n  \"claimed_at\": null,\n  \"claimed_at_formatted\": null,\n  \"claimed_at_ago\": null\n }\n],\n\"first_page_url\": \"http://localhost:8000/api/missions?page=1\",\n\"from\": 1,\n\"last_page\": 1,\n\"last_page_url\": \"http://localhost:8000/api/missions?page=1\",\n\"next_page_url\": null,\n\"path\": \"http://localhost:8000/api/missions\",\n\"per_page\": 15,\n}"
      tags:
        - Mission
    parameters:
      -
        in: path
        name: completed_only
        description: 'Optional parameter. boolean optional Only show completed missions(is_completed=true).'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'false'
  /api/v1/missions/complete:
    post:
      summary: 'Complete all missions or single mission'
      operationId: completeAllMissionsOrSingleMission
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Mission(s) completed successfully.'
                  completed_missions:
                    - 1
                    - 2
                  reward:
                    object: {  }
                    quantity: 1
                properties:
                  message:
                    type: string
                    example: 'Mission(s) completed successfully.'
                  completed_missions:
                    type: array
                    example:
                      - 1
                      - 2
                    items:
                      type: integer
                  reward:
                    type: object
                    properties:
                      object:
                        type: object
                        properties: {  }
                      quantity:
                        type: integer
                        example: 1
      tags:
        - Mission
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                mission_id:
                  type: integer
                  description: 'The id of the mission to complete, if not pass in, system will complete all missions thats eligible to be completed.'
                  example: 1
  /api/v1/missions/claimables:
    get:
      summary: 'Get latest claimable missions'
      operationId: getLatestClaimableMissions
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [\n {\n \"id\": 1,\n \"name\": \"Mission 1\",\n ...\n }\n]\n}"
      tags:
        - Mission
  /api/v1/user/settings/fcm-token:
    post:
      summary: 'Update user fcm token'
      operationId: updateUserFcmToken
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fcm_token:
                  type: string
                  description: 'The fcm token of the user.'
                  example: '1'
              required:
                - fcm_token
  /api/v1/notifications:
    get:
      summary: "Get latest notifications of the user\nOrdered by latest one"
      operationId: getLatestNotificationsOfTheUserOrderedByLatestOne
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [\n{\n   \"id\": 1,\n   \"message\" : \"A commented on your Article\",\n   \"object\" : \"article\",\n   \"object_id\" : 1,\n   \"link_to_url\" : \"http://localhost:8000/articles/1\",\n   \"link_to_object\" : \"article\",\n   \"action\" : \"comment\",\n   \"from\" : \"user\",\n   \"from_id\" : 1,\n   \"created_at_raw\" : \"2021-08-04T07:00:00.000000Z\",\n   \"created_at\" : \"1 day ago\"\n}\n]"
      tags:
        - Notifications
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: integer
                  description: 'The number of items per page.'
                  example: 10
  /api/v1/notifications/mark_as_read:
    post:
      summary: 'Mark a Single Notification as Read by Notification ID'
      operationId: markASingleNotificationAsReadByNotificationID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Notification marked as read.'
                properties:
                  message:
                    type: string
                    example: 'Notification marked as read.'
      tags:
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notification_id:
                  type: string
                  description: 'The notification id.'
                  example: 058d0c3d-1028-4660-b905-7e30ad7eee9c
              required:
                - notification_id
  /api/v1/notifications/mark_all_as_read:
    post:
      summary: 'Mark all notifications as read'
      operationId: markAllNotificationsAsRead
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Notifications marked as read.'
                properties:
                  message:
                    type: string
                    example: 'Notifications marked as read.'
      tags:
        - Notifications
  /api/v1/countries:
    get:
      summary: 'Get Countries'
      operationId: getCountries
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n[\"id\" => 1, \"name\" => \"Nigeria\", \"code\" => \"NG\"],\n}"
      tags:
        - Other
  /api/v1/states:
    get:
      summary: 'Get States'
      operationId: getStates
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n[\"id\" => 1, \"name\" => \"Abia\", \"code\" => \"AB\", \"country_id\" => 1],\n}"
      tags:
        - Other
  /api/v1/points/my_balance/all:
    get:
      summary: 'Get the point & point components balance of the logged in user.'
      operationId: getThePointPointComponentsBalanceOfTheLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"point_balance\": { \"id\": 1, \"name\": 'Funhub', \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100 },\n\"point_components\": {[\n  {\"id\": 1, \"name\": \"rice\", \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100},\n  {\"id\": 2, \"name\": \"egg\", \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100},\n  {\"id\": 3, \"name\": \"vegetable\", \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100},\n  {\"id\": 4, \"name\": \"meat\", \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100},\n  {\"id\": 5, \"name\": \"fish\", \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100},\n]}\n}"
      tags:
        - Point
  /api/v1/points/balance:
    get:
      summary: 'Get the point balance of the user.'
      operationId: getThePointBalanceOfTheUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  balance: 100
                properties:
                  balance:
                    type: integer
                    example: 100
      tags:
        - Point
  /api/v1/points/components/balance:
    get:
      summary: 'Get the point component balance of the user.'
      operationId: getThePointComponentBalanceOfTheUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  type: egg
                  balance: 100
                properties:
                  type:
                    type: string
                    example: egg
                  balance:
                    type: integer
                    example: 100
      tags:
        - Point
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of point component.'
                  example: egg
              required:
                - type
  /api/v1/points/rewards:
    get:
      summary: 'Get Rewards Available.'
      operationId: getRewardsAvailable
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"rewards\": [\n{\n\"id\": 1,\n\"name\": \"Funhub\",\n\"description\": \"Funhub\",\n\"components\": [],\n}\n]"
      tags:
        - Point
  /api/v1/points/reward_combine:
    post:
      summary: 'Combine Points Component to Form a Reward'
      operationId: combinePointsComponentToFormAReward
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Point
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: 'The quantity of the reward to form.'
                  example: 1
              required:
                - quantity
  /api/v1/points/ledgers:
    get:
      summary: 'Get Point Ledger'
      operationId: getPointLedger
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [\n{\n  \"id\": 1,\n  ...\n}\n]\n}"
      tags:
        - Point
  /api/v1/points/components/ledgers:
    get:
      summary: 'Get Point Component Ledgers)'
      operationId: getPointComponentLedgers
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [\n{\n  \"id\": 1,\n  ...\n}\n]\n}"
      tags:
        - Point
    parameters:
      -
        in: path
        name: filter_type
        description: 'Optional parameter. Type of Component (name).'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: egg
  /api/v1/products/checkout:
    post:
      summary: 'Post Checkout'
      operationId: postCheckout
      description: ''
      parameters: []
      responses:
        200:
          description: fiat_payment_mode
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Redirect to gateway\",\n\"gateway_data\": [\n     'url' => $this->url .'/payment/eCommerce',\n      'secureHash' => $this->generateHashForRequest($this->mid, $invoice_no, $amount),\n      'mid' => $this->mid,\n      'invno' => $invoice_no,\n      'capture_amt' => $amount,\n      'desc' => $desc,\n      'postURL' => $redirectUrl,\n      'phone' => $phoneNo,\n      'email' => $email,\n      'param' => $param,\n      'authorize' => 'authorize'\n  ];\n}"
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: 'Product ID.'
                  example: 1
                payment_method:
                  type: string
                  description: 'Payment Method.'
                  example: fiat
                fiat_payment_method:
                  type: string
                  description: 'required_if:payment_method,fiat Payment Method.'
                  example: fpx/card
                quantity:
                  type: integer
                  description: Quantity.
                  example: 1
              required:
                - product_id
                - payment_method
                - quantity
  /api/v1/products/checkout/cancel:
    post:
      summary: 'Cancel Product Checkout'
      operationId: cancelProductCheckout
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Transaction cancelled'
                properties:
                  message:
                    type: string
                    example: 'Transaction cancelled'
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_no:
                  type: string
                  description: 'Transaction No.'
                  example: '11234455'
              required:
                - transaction_no
  /api/v1/stores:
    get:
      summary: 'Get Stores'
      operationId: getStores
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Stores
    parameters:
      -
        in: path
        name: categories_id
        description: 'Optional parameter. optional Categories ID.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: merchant_ids
        description: 'Optional parameter. optional Merchant IDs.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: store_ids
        description: 'Optional parameter. optional Store IDs.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: limit
        description: 'Optional parameter. optional Per Page Limit.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  /api/v1/stores/followings_been_here:
    get:
      summary: 'Get Stores Following Been Here'
      operationId: getStoresFollowingBeenHere
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'John Doe'
                    -
                      id: 2
                      name: 'John Doe'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'John Doe'
                      -
                        id: 2
                        name: 'John Doe'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'John Doe'
      tags:
        - Stores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_ids:
                  type: string
                  description: ''
                  example: nesciunt
              required:
                - store_ids
    parameters:
      -
        in: path
        name: store_ids
        description: 'The store ids.'
        example: '1,2,3'
        required: true
        schema:
          type: string
  /api/v1/stores/rating_categories:
    get:
      summary: 'Get Store Rating Categories'
      operationId: getStoreRatingCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata: []\n}"
      tags:
        - Stores
  /api/v1/stores/locations:
    get:
      summary: 'Get Store Locations by Store IDS'
      operationId: getStoreLocationsByStoreIDS
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Stores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_ids:
                  type: string
                  description: ''
                  example: aspernatur
              required:
                - store_ids
    parameters:
      -
        in: path
        name: store_ids
        description: 'Store IDs.'
        example: '1,2,3'
        required: true
        schema:
          type: string
  /api/v1/stores/stores_by_location:
    get:
      summary: 'Get Stores by Location ID'
      operationId: getStoresByLocationID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Stores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                location_id:
                  type: string
                  description: ''
                  example: est
              required:
                - location_id
    parameters:
      -
        in: path
        name: location_id
        description: 'Location ID.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/v1/stores/{store_id}/ratings':
    get:
      summary: 'Get Stores Ratings'
      operationId: getStoresRatings
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Stores
    post:
      summary: 'Rate a Store'
      operationId: rateAStore
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata: {}\n}"
      tags:
        - Stores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  description: Rating.
                  example: 5
                comment:
                  type: string
                  description: 'optional Comment.'
                  example: 'Good service'
                rating_category_ids:
                  type: string
                  description: 'optional Rating Category IDs.'
                  example: '1,2,3'
              required:
                - rating
    parameters:
      -
        in: path
        name: store_id
        description: 'The ID of the store.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: store
        description: 'Store ID.'
        example: '1'
        required: true
        schema:
          type: string
      -
        in: path
        name: only_mine
        description: 'Optional parameter. boolean optional Only show my ratings.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'true'
      -
        in: path
        name: user_id
        description: 'Optional parameter. optional Only load specific user ratings.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: merchant_id
        description: 'Optional parameter. optional Only load specific merchant ratings.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: sort
        description: 'Optional parameter. Column to Sort.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'Sortable columns are: id, rating, created_at, updated_at'
      -
        in: path
        name: order
        description: 'Optional parameter. Direction to Sort.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'Sortable directions are: asc, desc'
      -
        in: path
        name: limit
        description: 'Optional parameter. Per Page Limit Override.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  '/api/v1/stores/{store_id}/menus':
    get:
      summary: 'Get Merchant Menus via Store'
      operationId: getMerchantMenusViaStore
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n[\n{'name': 'Menu 1', 'url': 'http://example.com/menu1.jpg'},\n]"
      tags:
        - Stores
    parameters:
      -
        in: path
        name: store_id
        description: 'The ID of the store.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: store
        description: 'Store ID.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/v1/stores/{store_id}/ratings/ratings_categories':
    get:
      summary: 'Get Top X Store Rating Categories of'
      operationId: getTopXStoreRatingCategoriesOf
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata: []\n}"
      tags:
        - Stores
    parameters:
      -
        in: path
        name: store_id
        description: 'The ID of the store.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: store
        description: 'Store ID.'
        example: '1'
        required: true
        schema:
          type: string
      -
        in: path
        name: limit
        description: 'Optional parameter. optional Limit.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 3
      -
        in: path
        name: only_with_ratings
        description: 'Optional parameter. boolean optional Only with ratings.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1'
  /api/v1/transactions:
    get:
      summary: "Get all my transactions\nGet all transactions of current logged in users paginated"
      operationId: getAllMyTransactionsGetAllTransactionsOfCurrentLoggedInUsersPaginated
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Transaction
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                date_from:
                  type: string
                  description: 'Date from'
                  example: '2021-01-01'
                date_to:
                  type: string
                  description: 'Date to'
                  example: '2021-01-31'
  /api/v1/transactions/transaction_no:
    get:
      summary: 'Get Transaction by Transaction Number'
      operationId: getTransactionByTransactionNumber
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n data: {}\n}"
      tags:
        - Transaction
  '/api/v1/transactions/{transaction_id}':
    get:
      summary: 'Get a Transaction By ID'
      operationId: getATransactionByID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n data: {}\n}"
      tags:
        - Transaction
    parameters:
      -
        in: path
        name: transaction_id
        description: 'The ID of the transaction.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: transaction
        description: 'Transaction ID'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/user/import-contacts:
    post:
      summary: 'Import User Contacts'
      operationId: importUserContacts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Contacts imported successfully\""
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                contacts:
                  type: array
                  description: required.
                  example:
                    -
                      country_code: '60'
                      phone_no: '123456789'
                      name: 'John Doe'
                  items:
                    type: string
  /api/v1/user/contacts-friends:
    get:
      summary: 'Get Contacts not yet followed'
      operationId: getContactsNotYetFollowed
      description: ''
      parameters: []
      responses:
        200:
          description: error
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No friends found'
                properties:
                  message:
                    type: string
                    example: 'No friends found'
      tags:
        - User
  /api/v1/user/followings:
    get:
      summary: 'Get all followings of user id or logged in user'
      operationId: getAllFollowingsOfUserIdOrLoggedInUser
      description: ''
      parameters:
        -
          in: query
          name: query
          description: 'optional Search query for name of followings.'
          example: John
          required: false
          schema:
            type: string
            description: 'optional Search query for name of followings.'
            example: John
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  followings: []
                properties:
                  followings:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User not found'
                properties:
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - User
    parameters:
      -
        in: path
        name: user_id
        description: 'Optional parameter. optional The id of the user, if not provided will use Logged In User ID.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/v1/user/followers:
    get:
      summary: 'Get all followers of user id or logged in user'
      operationId: getAllFollowersOfUserIdOrLoggedInUser
      description: ''
      parameters:
        -
          in: query
          name: query
          description: 'optional Search query for name of followers.'
          example: John
          required: false
          schema:
            type: string
            description: 'optional Search query for name of followers.'
            example: John
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  followers: []
                properties:
                  followers:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User not found'
                properties:
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - User
    parameters:
      -
        in: path
        name: user_id
        description: 'Optional parameter. optional The id of the user, if not provided will use Logged In User ID.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/v1/user/follow:
    post:
      summary: 'Follow another user'
      operationId: followAnotherUser
      description: ''
      parameters: []
      responses:
        200:
          description: 'if user profile is private and not following'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Follow request sent'
                properties:
                  message:
                    type: string
                    example: 'Follow request sent'
        400:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are already following this user'
                properties:
                  message:
                    type: string
                    example: 'You are already following this user'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user to follow'
                  example: 17
              required:
                - user_id
  /api/v1/user/unfollow:
    post:
      summary: 'Unfollow another user'
      operationId: unfollowAnotherUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are now unfollowing this user'
                properties:
                  message:
                    type: string
                    example: 'You are now unfollowing this user'
        400:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are not following this user'
                properties:
                  message:
                    type: string
                    example: 'You are not following this user'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user to unfollow'
                  example: 16
              required:
                - user_id
  /api/v1/user/request_follow/accept:
    post:
      summary: 'Accept Follow Request'
      operationId: acceptFollowRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are now following this user'
                properties:
                  message:
                    type: string
                    example: 'You are now following this user'
        400:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Follow request not found'
                properties:
                  message:
                    type: string
                    example: 'Follow request not found'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user to accept follow request'
                  example: 4
              required:
                - user_id
  /api/v1/user/request_follow/reject:
    post:
      summary: 'Reject Follow Request'
      operationId: rejectFollowRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Follow request removed'
                properties:
                  message:
                    type: string
                    example: 'Follow request removed'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user to reject follow request'
                  example: 16
              required:
                - user_id
  /api/v1/user/request_follows:
    get:
      summary: 'My Follow Requests'
      operationId: myFollowRequests
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  users: []
                properties:
                  users:
                    type: array
                    example: []
      tags:
        - User
  /api/v1/user/report:
    post:
      summary: 'Report a user'
      operationId: reportAUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Comment reported\",\n}"
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"message": "You have already reported this comment" ]}'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the comment.'
                  example: 1
                reason:
                  type: string
                  description: ''
                  example: beatae
                violation_level:
                  type: required
                  description: 'The violation level of this report'
                  example: consequatur
                violation_type:
                  type: required
                  description: 'The violation type of this report'
                  example: sunt
                also_block_user:
                  type: boolean
                  description: 'optional Whether to block the user or not.'
                  example: true
              required:
                - user_id
                - reason
  /api/v1/user/block:
    post:
      summary: 'Block a user'
      operationId: blockAUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"User blocked\",\n}"
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user.'
                  example: 1
                reason:
                  type: string
                  description: 'optional The reason for blocking the user.'
                  example: Spam
              required:
                - user_id
  /api/v1/user/unblock:
    post:
      summary: 'Unblock a user'
      operationId: unblockAUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"User unblocked\",\n}"
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user.'
                  example: 1
              required:
                - user_id
  /api/v1/user/my_blocked_users:
    get:
      summary: 'Get My Blocked Users List'
      operationId: getMyBlockedUsersList
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n data: {}\n}"
      tags:
        - User
  /api/v1/user/delete/request-otp:
    post:
      summary: 'Delete Account Request for OTP first (Phone No registered users only)'
      operationId: deleteAccountRequestForOTPFirstPhoneNoRegisteredUsersOnly
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'OTP sent to your registered mobile number.'
                properties:
                  message:
                    type: string
                    example: 'OTP sent to your registered mobile number.'
      tags:
        - User
  /api/v1/user/delete:
    post:
      summary: 'Delete My Account'
      operationId: deleteMyAccount
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Account deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Account deleted successfully.'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: 'The reason for deleting the account.'
                  example: 'I am not using this account anymore.'
                otp:
                  type: string
                  description: 'The OTP sent to your registered mobile number(only applies to user registered with phone no).'
                  example: '123456'
              required:
                - reason
  /api/v1/users_by_id:
    get:
      summary: 'Get Users By IDs'
      operationId: getUsersByIDs
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                properties:
                  data:
                    type: object
                    properties: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_ids:
                  type: string
                  description: ''
                  example: consequuntur
              required:
                - user_ids
    parameters:
      -
        in: path
        name: user_ids
        description: 'The ids of the users.'
        example: '1,2,3'
        required: true
        schema:
          type: string
  '/api/v1/user/{user_id}':
    get:
      summary: 'Get a user'
      operationId: getAUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": {\n}"
      tags:
        - User
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 3
        required: true
        schema:
          type: integer
      -
        in: path
        name: user
        description: 'The id of the user.'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/user:
    get:
      summary: 'Get auth user details'
      operationId: getAuthUserDetails
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"user\": {\n},\n\"token\": \"\""
      tags:
        - User
    post:
      summary: 'Update User Details (name, username, bio, job_title, dob, gender, location, avatar, cover, article_categories)'
      operationId: updateUserDetailsnameUsernameBioJobTitleDobGenderLocationAvatarCoverArticleCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"user\":\n{\n \"id\": 1,\n \"name\": \"John Doe\"\n \"username\": \"johndoe\"\n \"email\": \"johndoe@gmail.com\"\n \"verified_email\": true\n \"auth_provider\": \"email\"\n \"avatar\": \"https://domain.com/storage/avatars/1/avatar.jpg\"\n \"avatar_thumb\": \"https://domain.com/storage/avatars/1/avatar_thumb.jpg\"\n \"bio\": \"I am a developer\"\n \"cover\": \"https://domain.com/storage/covers/1/cover.jpg\"\n \"articles_published_count\": 0\n \"following_count\": 0\n \"followers_count\": 0\n \"has_completed_profile\": false\n \"has_avatar\": true\n \"point_balance\": 0\n \"unread_notifications_count\": 0\n \"is_following\": false\n \"dob\": \"1990-01-01\",\n \"gender\": \"male\",\n \"job_title\": \"Engineer\",\n \"country_id\": 1,\n \"state_id\": 1,\n \"category_ids\": [1,2,3]\n},\n\"message\": \"Field updated\"\n\n}"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: 'Error updating user details'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Error updating user details'
                  error: 'Error message'
                properties:
                  message:
                    type: string
                    example: 'Error updating user details'
                  error:
                    type: string
                    example: 'Error message'
      tags:
        - User
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                update_type:
                  type: string
                  description: 'Field to update.'
                  example: job_title
                name:
                  type: string
                  description: "Name of the user (Required if update_type is 'name')."
                  example: 'John Doe'
                username:
                  type: string
                  description: "Username of the user (Required if update_type is 'username')."
                  example: johndoe
                bio:
                  type: string
                  description: "Bio of the user (Required if update_type is 'bio')."
                  example: 'I am a developer'
                job_title:
                  type: string
                  description: "Job title of the user (Required if update_type is 'job_title')."
                  example: Developer
                day:
                  type: integer
                  description: "Day of the date of birth (Required if update_type is 'dob')."
                  example: 1
                month:
                  type: integer
                  description: "Month of the date of birth (Required if update_type is 'dob')."
                  example: 1
                year:
                  type: integer
                  description: "Year of the date of birth (Required if update_type is 'dob')."
                  example: 1990
                country_id:
                  type: integer
                  description: "Country id of the user (Required if update_type is 'location')."
                  example: 1
                state_id:
                  type: integer
                  description: "State id of the user (Required if update_type is 'location')."
                  example: 1
                avatar:
                  type: string
                  format: binary
                  description: "One image file to upload,Avatar of the user (Required if update_type is 'avatar')."
                cover:
                  type: string
                  format: binary
                  description: "One image file to upload,Cover of the user (Required if update_type is 'cover')."
                category_ids:
                  type: array
                  description: "Array of article category ids (Required if update_type is 'article_categories')."
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
              required:
                - update_type
  '/api/v1/public/user/{user_id}':
    get:
      summary: 'Get a public user'
      operationId: getAPublicUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"user\": {\n}"
      tags:
        - User
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 3
        required: true
        schema:
          type: integer
      -
        in: path
        name: user
        description: 'The id of the user.'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/user/password:
    post:
      summary: 'Update user password (only for login with OTP)'
      operationId: updateUserPasswordonlyForLoginWithOTP
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Password updated\",\n\"user\":\n     * {\n \"id\": 1,\n \"name\": \"John Doe\"\n \"username\": \"johndoe\"\n \"email\": \"johndoe@gmail.com\"\n \"verified_email\": true\n \"auth_provider\": \"email\"\n \"avatar\": \"https://domain.com/storage/avatars/1/avatar.jpg\"\n \"avatar_thumb\": \"https://domain.com/storage/avatars/1/avatar_thumb.jpg\"\n \"bio\": \"I am a developer\"\n \"cover\": \"https://domain.com/storage/covers/1/cover.jpg\"\n \"articles_published_count\": 0\n \"following_count\": 0\n \"followers_count\": 0\n \"has_completed_profile\": false\n \"has_avatar\": true\n \"point_balance\": 0\n \"unread_notifications_count\": 0\n \"is_following\": false\n \"dob\": \"1990-01-01\",\n \"gender\": \"male\",\n \"job_title\": \"Engineer\",\n \"country_id\": 1,\n \"state_id\": 1,\n \"category_ids\": [1,2,3]\n},\n}"
        422:
          description: 'validation error'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"The given data was invalid.\",\n\"errors\": {\n\"old_password\": [\n \"The old password is incorrect\"\n],\n\"password\": [\n\"The password confirmation does not match.\"\n]\n}"
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: 'The old password of the user.'
                  example: abcd1234
                new_password:
                  type: string
                  description: 'The new password of the user.'
                  example: abcd1234
                new_password_confirmation:
                  type: string
                  description: 'The new password confirmation of the user.'
                  example: abcd1234
              required:
                - old_password
                - new_password
                - new_password_confirmation
  /api/v1/user/email:
    post:
      summary: 'Update User Email'
      operationId: updateUserEmail
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email updated'
                  email: johndoe@gmail.com
                  user: {  }
                properties:
                  message:
                    type: string
                    example: 'Email updated'
                  email:
                    type: string
                    example: johndoe@gmail.com
                  user:
                    type: object
                    properties: {  }
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        422:
          description: 'Email already verified for your account'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email already verified for your account'
                properties:
                  message:
                    type: string
                    example: 'Email already verified for your account'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: null
                new_email:
                  type: string
                  description: 'Email of the user.'
                  example: john@gmail.com
                new_email_confirmation:
                  type: string
                  description: 'Email of the user.'
                  example: john@gmail.com
              required:
                - new_email
                - new_email_confirmation
  /api/v1/user/settings:
    get:
      summary: 'Get settings of logged in user'
      operationId: getSettingsOfLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"name\": \"John Doe\",\n \"email\": \"johndoe@gmail.com\"\n \"username\": \"johndoe\",\n \"dob\": \"1990-01-01\",\n \"gender\": \"male\",\n \"bio\": \"Hello\",\n \"job_title\": \"Engineer\",\n \"country_id\": 1,\n \"state_id\": 1,\n \"avatar\": \"https://www.example.com/avatar.jpg\",\n \"avatar_thumb\": \"https://www.example.com/avatar_thumb.jpg\",\n \"category_ids\": [1,2,3]\n}"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: 'No settings found yet'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No settings found yet.'
                properties:
                  message:
                    type: string
                    example: 'No settings found yet.'
      tags:
        - 'User Settings'
  /api/v1/user/settings/phone_no/otp:
    post:
      summary: 'Update Phone No (send otp)'
      operationId: updatePhoneNosendOtp
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'OTP sent'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'OTP sent'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: 'Country code of the user.'
                  example: '60'
                phone_no:
                  type: string
                  description: 'Phone number of the user.'
                  example: '123456789'
              required:
                - country_code
                - phone_no
  /api/v1/user/settings/phone_no/verify_otp:
    post:
      summary: 'Update Phone No (Verify OTP)'
      operationId: updatePhoneNoVerifyOTP
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Phone No updated'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Phone No updated'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: 'Country code of the user.'
                  example: '60'
                phone_no:
                  type: string
                  description: 'Phone number of the user.'
                  example: '123456789'
                otp:
                  type: string
                  description: 'OTP of the user.'
                  example: '123456'
              required:
                - country_code
                - phone_no
                - otp
  /api/v1/user/settings/email:
    post:
      summary: 'Update User Email'
      operationId: updateUserEmail
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email updated'
                  email: johndoe@gmail.com
                properties:
                  message:
                    type: string
                    example: 'Email updated'
                  email:
                    type: string
                    example: johndoe@gmail.com
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        422:
          description: 'Email already verified for your account'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email already verified for your account'
                properties:
                  message:
                    type: string
                    example: 'Email already verified for your account'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Email of the user.'
                  example: john@gmail.com
              required:
                - email
  /api/v1/user/settings/verify/email:
    post:
      summary: 'Verify User Email with Token'
      operationId: verifyUserEmailWithToken
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email Verified'
                properties:
                  message:
                    type: string
                    example: 'Email Verified'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Token of the user.'
                  example: '123456'
              required:
                - token
  /api/v1/user/settings/name:
    post:
      summary: 'Update User Name'
      operationId: updateUserName
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Name updated'
                  name: 'John Doe'
                properties:
                  message:
                    type: string
                    example: 'Name updated'
                  name:
                    type: string
                    example: 'John Doe'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
              required:
                - name
  /api/v1/user/settings/article_categories:
    post:
      summary: 'Link Article Categories to User (used for interest tagging)'
      operationId: linkArticleCategoriesToUserusedForInterestTagging
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article categories linked to user'
                  category_ids:
                    - 1
                    - 2
                    - 3
                properties:
                  message:
                    type: string
                    example: 'Article categories linked to user'
                  category_ids:
                    type: array
                    example:
                      - 1
                      - 2
                      - 3
                    items:
                      type: integer
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_ids:
                  type: array
                  description: 'Array of article category ids.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
              required:
                - category_ids
  /api/v1/user/settings/avatar/upload:
    post:
      summary: 'Upload or Update User Profile Picture'
      operationId: uploadOrUpdateUserProfilePicture
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Avatar uploaded'
                  avatar: url
                  avatar_thumb: url
                properties:
                  message:
                    type: string
                    example: 'Avatar uploaded'
                  avatar:
                    type: string
                    example: url
                  avatar_thumb:
                    type: string
                    example: url
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                  description: 'One image file to upload.'
              required:
                - avatar
  /api/v1/user/settings/cover/upload:
    post:
      summary: 'Upload or Update User Cover'
      operationId: uploadOrUpdateUserCover
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cover uploaded'
                  cover: url
                  cover_thumb: url
                properties:
                  message:
                    type: string
                    example: 'Cover uploaded'
                  cover:
                    type: string
                    example: url
                  cover_thumb:
                    type: string
                    example: url
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cover:
                  type: string
                  format: binary
                  description: 'One image file to upload.'
              required:
                - cover
  /api/v1/user/settings/username:
    post:
      summary: 'Update User Username'
      operationId: updateUserUsername
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Username updated'
                  username: johndoe
                properties:
                  message:
                    type: string
                    example: 'Username updated'
                  username:
                    type: string
                    example: johndoe
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'Username of the user.'
                  example: johndoe
              required:
                - username
  /api/v1/user/settings/bio:
    post:
      summary: 'Update User Bio'
      operationId: updateUserBio
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Bio updated'
                  bio: 'I am a software engineer'
                properties:
                  message:
                    type: string
                    example: 'Bio updated'
                  bio:
                    type: string
                    example: 'I am a software engineer'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bio:
                  type: string
                  description: 'Bio of the user.'
                  example: 'I am a software engineer'
              required:
                - bio
  /api/v1/user/settings/dob:
    post:
      summary: 'Update User Date of Birth'
      operationId: updateUserDateOfBirth
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Date of birth updated'
                  dob: '1990-01-01'
                properties:
                  message:
                    type: string
                    example: 'Date of birth updated'
                  dob:
                    type: string
                    example: '1990-01-01'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: integer
                  description: 'Day of the date of birth.'
                  example: 1
                month:
                  type: integer
                  description: 'Month of the date of birth.'
                  example: 1
                year:
                  type: integer
                  description: 'Year of the date of birth.'
                  example: 1990
              required:
                - day
                - month
                - year
  /api/v1/user/settings/gender:
    post:
      summary: 'Update User Save Gender'
      operationId: updateUserSaveGender
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Gender updated'
                  gender: male
                properties:
                  message:
                    type: string
                    example: 'Gender updated'
                  gender:
                    type: string
                    example: male
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gender:
                  type: string
                  description: ''
                  example: male
                  enum:
                    - male
                    - female
              required:
                - gender
  /api/v1/user/settings/location:
    post:
      summary: 'Update User Location'
      operationId: updateUserLocation
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Location updated\"\n\"country_id\": 1,\n\"state_id\": 1\n}"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_id:
                  type: integer
                  description: 'Country id of the user.'
                  example: 1
                state_id:
                  type: integer
                  description: 'State id of the user.'
                  example: 1
              required:
                - country_id
                - state_id
  /api/v1/user/settings/job-title:
    post:
      summary: 'Update User Job title'
      operationId: updateUserJobTitle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Job Title updated'
                  job_title: 'Software Engineer'
                properties:
                  message:
                    type: string
                    example: 'Job Title updated'
                  job_title:
                    type: string
                    example: 'Software Engineer'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job_title:
                  type: string
                  description: 'Job title of the user.'
                  example: 'Software Engineer'
              required:
                - job_title
  /api/v1/user/settings/language:
    post:
      summary: 'Save Language of User'
      operationId: saveLanguageOfUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Saved
                properties:
                  message:
                    type: string
                    example: Saved
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                last_lang:
                  type: string
                  description: ''
                  example: zh
                  enum:
                    - en
                    - zh
                lang:
                  type: string
                  description: 'The language of the user.'
                  example: en/zh
              required:
                - last_lang
                - lang
  /api/v1/user/settings/postUpdatePassword:
    post:
      summary: 'Update user password (only for login with OTP)'
      operationId: updateUserPasswordonlyForLoginWithOTP
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password updated'
                properties:
                  message:
                    type: string
                    example: 'Password updated'
        422:
          description: 'validation error'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"The given data was invalid.\",\n\"errors\": {\n\"old_password\": [\n \"The old password is incorrect\"\n],\n\"password\": [\n\"The password confirmation does not match.\"\n]\n}"
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: 'The old password of the user.'
                  example: abcd1234
                password:
                  type: string
                  description: 'The new password of the user.'
                  example: abcd1234
                password_confirmation:
                  type: string
                  description: 'The new password confirmation of the user.'
                  example: abcd1234
              required:
                - old_password
                - password
                - password_confirmation
  /api/v1/user/settings/profile-privacy:
    post:
      summary: 'Profile Privacy Setting'
      operationId: profilePrivacySetting
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Profile privacy updated'
                  profile_privacy: public
                properties:
                  message:
                    type: string
                    example: 'Profile privacy updated'
                  profile_privacy:
                    type: string
                    example: public
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_privacy:
                  type: string
                  description: 'The profile privacy of the user.'
                  example: public
              required:
                - profile_privacy
  /api/v1/user/settings/referrals/my-code:
    get:
      summary: 'Referral - Get My Referral Code'
      operationId: referralGetMyReferralCode
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  referral_code: ABC123
                  message: 'Come and join with with referral code ABC123'
                properties:
                  referral_code:
                    type: string
                    example: ABC123
                  message:
                    type: string
                    example: 'Come and join with with referral code ABC123'
      tags:
        - 'User Settings'
  /api/v1/user/settings/referrals/save:
    post:
      summary: 'Referral - Save Referral'
      operationId: referralSaveReferral
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Referral saved'
                properties:
                  message:
                    type: string
                    example: 'Referral saved'
        422:
          description: 'You cannot refer yourself'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You cannot refer yourself'
                properties:
                  message:
                    type: string
                    example: 'You cannot refer yourself'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                referral_code:
                  type: string
                  description: 'Referral code of the user.'
                  example: ABC123
              required:
                - referral_code
  /api/v1/user/settings/onesignal/save:
    post:
      summary: 'Save OneSignal Subscription Id'
      operationId: saveOneSignalSubscriptionId
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Saved
                properties:
                  message:
                    type: string
                    example: Saved
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onesignal_subscription_id:
                  type: string
                  description: 'The OneSignal subscription id.'
                  example: '123456'
              required:
                - onesignal_subscription_id
  /api/v1/user/settings/onesignal/user_id/save:
    post:
      summary: 'Save OneSignal User ID'
      operationId: saveOneSignalUserID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Saved
                properties:
                  message:
                    type: string
                    example: Saved
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onesignal_user_id:
                  type: string
                  description: 'The OneSignal user id.'
                  example: '123456'
              required:
                - onesignal_user_id
  /api/v1/views:
    post:
      summary: "Record view for viewable\nThis is used for recording views for articles, comments, merchant offers, user profiles and location"
      operationId: recordViewForViewableThisIsUsedForRecordingViewsForArticlesCommentsMerchantOffersUserProfilesAndLocation
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'View recorded'
                properties:
                  message:
                    type: string
                    example: 'View recorded'
      tags:
        - View
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                viewable_type:
                  type: string
                  description: 'The type of the viewable.'
                  example: article/comment/merchant_offer/user_profile/location/store
                viewable_id:
                  type: integer
                  description: 'The id of the viewable.'
                  example: 1
              required:
                - viewable_type
                - viewable_id
  '/api/v1/views/{type}/{id}':
    get:
      summary: "Get views for viewable type\nThis is used for getting views for articles, comments, merchant offers, and user profiles"
      operationId: getViewsForViewableTypeThisIsUsedForGettingViewsForArticlesCommentsMerchantOffersAndUserProfiles
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  views: []
                  total: 0
                properties:
                  views:
                    type: array
                    example: []
                  total:
                    type: integer
                    example: 0
      tags:
        - View
    parameters:
      -
        in: path
        name: type
        description: 'The type of the viewable.'
        example: article/comment/merchant_offer/user_profile/stpres
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The id of the viewable.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Article
    description: ''
  -
    name: Authentication
    description: ''
  -
    name: Campaigns
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Help Center'
    description: ''
  -
    name: Interactions
    description: ''
  -
    name: Location
    description: ''
  -
    name: Maintenance
    description: ''
  -
    name: Media
    description: ''
  -
    name: Merchant
    description: ''
  -
    name: Mission
    description: ''
  -
    name: Notifications
    description: ''
  -
    name: Other
    description: ''
  -
    name: Point
    description: ''
  -
    name: Product
    description: ''
  -
    name: Stores
    description: ''
  -
    name: Transaction
    description: ''
  -
    name: User
    description: ''
  -
    name: 'User Settings'
    description: ''
  -
    name: View
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You will received a token to authenticate user requests after you logged in.'
security:
  -
    default: []
