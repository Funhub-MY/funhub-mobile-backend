openapi: 3.0.3
info:
  title: FUNHUB
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://funhub-mobile-backend.test'
paths:
  /api/v1/public_articles:
    get:
      summary: 'Web - Get Public Articles'
      operationId: webGetPublicArticles
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Article
    parameters:
      -
        in: path
        name: limit
        description: 'Optional parameter. optional Limit the number of results.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  /api/v1/public_articles_single:
    get:
      summary: 'Web - Get Single Public Article'
      operationId: webGetSinglePublicArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  article: {  }
                properties:
                  article:
                    type: object
                    properties: {  }
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'This field is required when <code>slug</code> is <code>null</code>.'
                  example: 12
                  nullable: false
                slug:
                  type: string
                  description: 'This field is required when <code>id</code> is <code>null</code>.'
                  example: aspernatur
                  nullable: false
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. optional The id of the article.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: slug
        description: 'Optional parameter. optional The slug of the article.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: my-article
  '/api/v1/public_articles_single/{article_id}/offers':
    get:
      summary: "Web - Get an Article's Offers"
      operationId: webGetAnArticlesOffers
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [],\n}"
      tags:
        - Article
    parameters:
      -
        in: path
        name: article_id
        description: 'The ID of the article.'
        example: 34
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The id of the article.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/article_cities:
    get:
      summary: 'Get Article Cities (Unique)'
      operationId: getArticleCitiesUnique
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  cities: []
                properties:
                  cities:
                    type: array
                    example: []
      tags:
        - Article
    parameters:
      -
        in: path
        name: search
        description: 'Optional parameter. optional Search for city.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '"Kota"'
  /api/v1/articles/gallery:
    post:
      summary: 'Upload Images for Article'
      operationId: uploadImagesForArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  uploaded:
                    -
                      id: 1
                      name: image.jpg
                      url: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                      size: 12345
                      type: image/jpeg
                properties:
                  uploaded:
                    type: array
                    example:
                      -
                        id: 1
                        name: image.jpg
                        url: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                        size: 12345
                        type: image/jpeg
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: image.jpg
                        url:
                          type: string
                          example: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                        size:
                          type: integer
                          example: 12345
                        type:
                          type: string
                          example: image/jpeg
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["images": ["The images field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: string
                  format: binary
                  description: 'The images to upload.'
                  nullable: false
                is_cover:
                  type: boolean
                  description: 'used to set this image as a cover.'
                  example: true
                  nullable: false
              required:
                - images
  /api/v1/articles/video-upload:
    post:
      summary: 'Upload Video for Article'
      operationId: uploadVideoForArticle
      description: "Video size must not larger than 500MB, will stream video response back to client on progress via header X-Upload-Progress / calculate your own using X-Content-Duration\n\nMust be able to stream completion percentage back to client"
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  url: 'http://localhost:8000/storage/user_video_uploads/1/video.mp4'
                properties:
                  url:
                    type: string
                    example: 'http://localhost:8000/storage/user_video_uploads/1/video.mp4'
      tags:
        - Article
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                video:
                  type: string
                  format: binary
                  description: 'The video to upload.'
                  nullable: false
              required:
                - video
  /api/v1/articles/my_articles:
    get:
      summary: 'Get Articles by User ID or Logged In User'
      operationId: getArticlesByUserIDOrLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'optional Load Spciefic User Articles.'
                  example: 1
                  nullable: false
                published_only:
                  type: boolean
                  description: 'optional Filter by published articles.'
                  example: true
                  nullable: false
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                  nullable: false
                video_only:
                  type: integer
                  description: 'optional Filter by Videos.'
                  example: 1
                  nullable: false
  /api/v1/articles/my_bookmarks:
    get:
      summary: 'Get Bookmarked Articles by User ID or Logged In User'
      operationId: getBookmarkedArticlesByUserIDOrLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'optional Load Spciefic User Bookmarked Articles.'
                  example: 1
                  nullable: false
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                  nullable: false
                video_only:
                  type: integer
                  description: 'optional Filter by Videos.'
                  example: 1
                  nullable: false
  /api/v1/articles/report:
    post:
      summary: 'Report an article'
      operationId: reportAnArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Comment reported\",\n}"
        422:
          description: ''
          content:
            text/plain:
              schema:
                oneOf:
                  -
                    description: 'Invalid Form Fields'
                    type: string
                    example: '{"errors": ["article_id": ["The Article Id field is required."] ]}'
                  -
                    description: 'Invalid Form Fields'
                    type: string
                    example: '{"message": "You have already reported this comment" ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article_id:
                  type: integer
                  description: ''
                  example: 1
                  nullable: false
                reason:
                  type: string
                  description: 'The reason for reporting the comment.'
                  example: 'Spam     * @bodyParam violation_type required The violation type of this report'
                  nullable: false
                violation_type:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: false
                violation_level:
                  type: required
                  description: 'The violation level of this report'
                  example: quidem
                  nullable: false
                article:
                  type: integer
                  description: 'The id of the article.'
                  example: 1
                  nullable: false
              required:
                - article_id
                - reason
                - violation_type
                - article
  /api/v1/articles/not_interested:
    post:
      summary: 'Hide Article When Not Interested By user'
      operationId: hideArticleWhenNotInterestedByUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article marked as not interested'
                properties:
                  message:
                    type: string
                    example: 'Article marked as not interested'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article_id:
                  type: integer
                  description: 'Article Id.'
                  example: 1
                  nullable: false
              required:
                - article_id
  /api/v1/articles/tagged_users:
    get:
      summary: 'Get Tagged users of article'
      operationId: getTaggedUsersOfArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article_id:
                  type: integer
                  description: 'Article Id.'
                  example: 1
                  nullable: false
              required:
                - article_id
  '/api/v1/articles/merchant_offers/{article_id}':
    get:
      summary: 'Get Article Merchant Offers'
      operationId: getArticleMerchantOffers
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - {  }
                properties:
                  data:
                    type: array
                    example:
                      - []
                    items:
                      type: object
                      properties: []
      tags:
        - Article
    parameters:
      -
        in: path
        name: article_id
        description: 'The ID of the article.'
        example: 8
        required: true
        schema:
          type: integer
      -
        in: path
        name: article
        description: 'The id of the article.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/articles/recommendations:
    post:
      summary: 'Save Article Recommendations (from Algolia)'
      operationId: saveArticleRecommendationsfromAlgolia
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article recommendations updated'
                  user_id: 1
                  total_articles: 3
                properties:
                  message:
                    type: string
                    example: 'Article recommendations updated'
                  user_id:
                    type: integer
                    example: 1
                  total_articles:
                    type: integer
                    example: 3
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article_ids:
                  type: array
                  description: 'Article Ids to Filter. Example [1,2,3]'
                  example:
                    - voluptas
                  items:
                    type: string
              required:
                - article_ids
  /api/v1/articles/nearby:
    get:
      summary: 'Get Articles Nearby'
      operationId: getArticlesNearby
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [],\n}"
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article_ids:
                  type: array
                  description: 'optional Article Ids to Filter. Example [1,2,3]'
                  example:
                    - qui
                  items:
                    type: string
                category_ids:
                  type: array
                  description: 'optional Category Ids to Filter.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                video_only:
                  type: integer
                  description: 'optional Filter by Videos.'
                  example: 1
                  nullable: false
                tag_ids:
                  type: array
                  description: 'optional Tag Ids to Filter.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                city:
                  type: string
                  description: 'optional Filter by City Name.'
                  example: 'Subang Jaya'
                  nullable: false
                lat:
                  type: number
                  description: 'Filter by Lat of User (must provide lng).'
                  example: 3.123456
                  nullable: false
                lng:
                  type: number
                  description: 'Filter by Lng of User (must provide lat).'
                  example: 101.123456
                  nullable: false
                radius:
                  type: integer
                  description: 'optional Filter by Radius (in meters) if provided lat, lng.'
                  example: 10000
                  nullable: false
                include_own_article:
                  type: integer
                  description: 'optional Include own article.'
                  example: 1
                  nullable: false
                limit:
                  type: integer
                  description: 'optional Per Page Limit Override.'
                  example: 10
                  nullable: false
              required:
                - lat
                - lng
  /api/v1/articles/keyword:
    get:
      summary: 'Get Articles by Keyword ID'
      operationId: getArticlesByKeywordID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the search_keywords table.'
                  example: 19
                  nullable: false
              required:
                - keyword_id
    parameters:
      -
        in: path
        name: keyword_id
        description: 'Optional parameter. ID required The id of the keyword.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1'
  /api/v1/articles/search:
    get:
      summary: 'Search Articles'
      operationId: searchArticles
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                suggestion:
                  type: string
                  description: 'Suggested keyword.'
                  example: 'KL Food'
                  nullable: false
  /api/v1/articles:
    get:
      summary: "Get Articles for Logged in user (for Home Page)\nNote: user's own posts will not show up on home page"
      operationId: getArticlesForLoggedInUserforHomePageNoteUsersOwnPostsWillNotShowUpOnHomePage
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                article_ids:
                  type: array
                  description: 'optional Article Ids to Filter. Example [1,2,3]'
                  example:
                    - voluptatum
                  items:
                    type: string
                category_ids:
                  type: array
                  description: 'optional Category Ids to Filter.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                video_only:
                  type: integer
                  description: 'optional Filter by Videos.'
                  example: 1
                  nullable: false
                following_only:
                  type: integer
                  description: 'optional Filter by Articles by Users who logged in user is following.'
                  example: 1
                  nullable: false
                tag_ids:
                  type: array
                  description: 'optional Tag Ids to Filter.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                city:
                  type: string
                  description: 'optional Filter by City.'
                  example: 'Subang Jaya'
                  nullable: false
                lat:
                  type: number
                  description: 'optional Filter by Lat of User (must provide lng).'
                  example: 3.123456
                  nullable: false
                lng:
                  type: number
                  description: 'optional Filter by Lng of User (must provide lat).'
                  example: 101.123456
                  nullable: false
                radius:
                  type: integer
                  description: 'optional Filter by Radius (in meters) if provided lat, lng.'
                  example: 10000
                  nullable: false
                location_id:
                  type: integer
                  description: 'optional Filter by Location Id.'
                  example: 1
                  nullable: false
                store_id:
                  type: integer
                  description: 'optional Filter by Store Id.'
                  example: 1
                  nullable: false
                include_own_article:
                  type: integer
                  description: 'optional Include own article.'
                  example: 1
                  nullable: false
                disable_home_conditions:
                  type: boolean
                  description: 'optional Disable Home Conditions like hidden from home or whitelisted.'
                  example: true
                  nullable: false
                pinned_only:
                  type: integer
                  description: 'optional Filter by Pinned Articles.'
                  example: 1
                  nullable: false
                build_recommendations:
                  type: boolean
                  description: 'optional Build Recommendations On or Off, On by Default.'
                  example: true
                  nullable: false
                refresh_recommendations:
                  type: boolean
                  description: 'optional Refresh Recommendations.'
                  example: true
                  nullable: false
                limit:
                  type: integer
                  description: 'optional Per Page Limit Override.'
                  example: 10
                  nullable: false
    post:
      summary: 'Create New Article'
      operationId: createNewArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Article updated\",\n}"
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Comment not found'
                properties:
                  message:
                    type: string
                    example: 'Comment not found'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["body": ["The Body field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the article.'
                  example: 'This is a title'
                  nullable: false
                type:
                  type: string
                  description: 'The type of the article.'
                  example: 'multimedia,text,video'
                  nullable: false
                body:
                  type: string
                  description: 'The body of the article.'
                  example: 'This is a caption or body of article'
                  nullable: false
                status:
                  type: integer
                  description: 'The status of the article.'
                  example: 0
                  nullable: false
                published_at:
                  type: datetime
                  description: 'The published date of the article.'
                  example: '2021-02-21 12:00:00'
                  nullable: true
                categories:
                  type: array
                  description: 'The categories ID of the article.'
                  example:
                    - 1
                    - 2
                  items:
                    type: string
                    nullable: true
                tags:
                  type: array
                  description: 'The tags of the article.'
                  example:
                    - '#tag1'
                    - '#tag2'
                  items:
                    type: string
                    nullable: true
                images:
                  type: array
                  description: 'The images IDs. Must first call upload images endpoint.'
                  example:
                    - 1
                    - 2
                  items:
                    type: string
                    nullable: true
                video:
                  type: integer
                  description: 'The video ID. Must first call upload videos endpoint.'
                  example: 1
                  nullable: true
                excerpt:
                  type: string
                  description: 'The excerpt of the article.'
                  example: 'This is a excerpt of article'
                  nullable: false
                location:
                  type: string
                  description: 'The location of the article.'
                  example: '{"lat": 123, "lng": 123, "name": "location name", "address": "location address", "address_2" : "", "city": "city", "state": "state name/id", "postcode": "010000", "rating": "5"}'
                  nullable: false
                tagged_user_ids:
                  type: array
                  description: 'The tagged users IDs.'
                  example:
                    - 1
                    - 2
                  items:
                    type: string
                visibility:
                  type: string
                  description: 'The visibility of the article.'
                  example: 'public,private'
                  nullable: false
              required:
                - title
                - type
                - body
                - status
  '/api/v1/articles/{id}':
    get:
      summary: 'Get One Article by ID'
      operationId: getOneArticleByID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  article: {  }
                properties:
                  article:
                    type: object
                    properties: {  }
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article not found'
                properties:
                  message:
                    type: string
                    example: 'Article not found'
      tags:
        - Article
    put:
      summary: 'Update article by ID. (Only owner of article can update)'
      operationId: updateArticleByIDOnlyOwnerOfArticleCanUpdate
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Article updated\",\n}"
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Comment not found'
                properties:
                  message:
                    type: string
                    example: 'Comment not found'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["body": ["The Body field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: 'The body of the article.'
                  example: 'This is a comment'
                  nullable: false
                status:
                  type: integer
                  description: 'The status of the article, change this to 0 to unpublish.'
                  example: 0
                  nullable: false
                title:
                  type: string
                  description: 'The title of the article, will regenerate slug.'
                  example: 'This is a title'
                  nullable: false
                tags:
                  type: array
                  description: 'The tags of the article.'
                  example:
                    - '#tag1'
                    - '#tag2'
                  items:
                    type: string
                categories:
                  type: array
                  description: 'The categories ID of the article.'
                  example:
                    - 1
                    - 2
                  items:
                    type: string
                images:
                  type: string
                  format: binary
                  description: 'The images ID of the article.'
                  nullable: false
                video:
                  type: string
                  format: binary
                  description: 'The video ID of the article.'
                  nullable: false
                tagged_user_ids:
                  type: array
                  description: 'The tagged user IDs of the article.'
                  example:
                    - 1
                    - 2
                  items:
                    type: string
                location:
                  type: string
                  description: 'The location of the article.'
                  example: '{"lat": 123, "lng": 123, "name": "location name", "address": "location address", "address_2" : "", "city": "city", "state": "state name/id", "postcode": "010000", "rating": "5"}'
                  nullable: false
                visibility:
                  type: string
                  description: 'The visibility of the article.'
                  example: 'public,private'
                  nullable: false
              required:
                - body
                - status
                - title
    delete:
      summary: 'Remove article by ID. (Only owner of article can delete)'
      operationId: removeArticleByIDOnlyOwnerOfArticleCanDelete
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article deleted'
                properties:
                  message:
                    type: string
                    example: 'Article deleted'
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article not found'
                properties:
                  message:
                    type: string
                    example: 'Article not found'
      tags:
        - Article
    parameters:
      -
        in: path
        name: id
        description: 'The id of the article.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/article_tags:
    get:
      summary: 'Get popular tags'
      operationId: getPopularTags
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  tags: []
                properties:
                  tags:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, name, created_at, updated_at'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, name, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                  nullable: false
  /api/v1/article_tags/all:
    get:
      summary: 'Get all tags available'
      operationId: getAllTagsAvailable
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  tags: []
                properties:
                  tags:
                    type: array
                    example: []
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: 'optional Hashtag to Filter.'
                  example: ta
                  nullable: false
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, name, created_at, updated_at'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, name, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
  '/api/v1/article_tags/{article_id}':
    get:
      summary: 'Get Tags by article id'
      operationId: getTagsByArticleId
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  tags: []
                properties:
                  tags:
                    type: array
                    example: []
        404:
          description: 'No tags found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
    parameters:
      -
        in: path
        name: article_id
        description: 'The id of the article.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/article_categories:
    get:
      summary: 'Get popular Article Categories'
      operationId: getPopularArticleCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  categories: []
                properties:
                  categories:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_featured:
                  type: integer
                  description: 'Is Featured Categories.'
                  example: 1
                  nullable: false
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, name, created_at, updated_at'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, name, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                  nullable: false
  /api/v1/article_categories/all:
    get:
      summary: 'Get All Article Categories'
      operationId: getAllArticleCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  categories: []
                properties:
                  categories:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
  '/api/v1/article_categories/{article_id}':
    get:
      summary: 'Get Article Categories by article id'
      operationId: getArticleCategoriesByArticleId
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  categories: []
                properties:
                  categories:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
    parameters:
      -
        in: path
        name: article_id
        description: 'The id of the article.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/comments/replies/{comment_id}':
    get:
      summary: 'Get replies to a comment'
      operationId: getRepliesToAComment
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": {},\n}"
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Comment not found'
                properties:
                  message:
                    type: string
                    example: 'Comment not found'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reply_to_id:
                  type: integer
                  description: 'The id of the comment.'
                  example: 1
                  nullable: false
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                  nullable: false
              required:
                - reply_to_id
    parameters:
      -
        in: path
        name: comment_id
        description: 'The ID of the comment.'
        example: qui
        required: true
        schema:
          type: string
  /api/v1/comments/like_toggle:
    post:
      summary: 'Toggle a Comment Like'
      operationId: toggleACommentLike
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Comment liked/Un-Liked\",\n}"
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["comment_id": ["The Comment Id field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment_id:
                  type: integer
                  description: 'The id of the comment.'
                  example: 1
                  nullable: false
              required:
                - comment_id
  /api/v1/comments/report:
    post:
      summary: 'Report a comment'
      operationId: reportAComment
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Comment reported\",\n}"
        422:
          description: ''
          content:
            text/plain:
              schema:
                oneOf:
                  -
                    description: 'Invalid Form Fields'
                    type: string
                    example: '{"errors": ["comment_id": ["The Comment Id field is required."] ]}'
                  -
                    description: 'Invalid Form Fields'
                    type: string
                    example: '{"message": "You have already reported this comment" ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment_id:
                  type: integer
                  description: 'The id of the comment.'
                  example: 1
                  nullable: false
                reason:
                  type: string
                  description: 'The reason for reporting the comment.'
                  example: Spam
                  nullable: false
                violation_level:
                  type: required
                  description: 'The violation level of this report'
                  example: molestiae
                  nullable: false
                violation_type:
                  type: required
                  description: 'The violation type of this report'
                  example: officiis
                  nullable: false
              required:
                - comment_id
                - reason
  /api/v1/comments/taggable_users:
    get:
      summary: "Get taggable users in comment\nOnly users whos is followers of logged in user can be tag in article"
      operationId: getTaggableUsersInCommentOnlyUsersWhosIsFollowersOfLoggedInUserCanBeTagInArticle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [],\n}"
      tags:
        - Article
    parameters:
      -
        in: path
        name: query
        description: 'Optional parameter. optional Search query.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: John
  /api/v1/comments:
    get:
      summary: 'Get comments on a commentable type (eg. Articles)'
      operationId: getCommentsOnACommentableTypeegArticles
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of commentable.'
                  example: article
                  nullable: false
                id:
                  type: integer
                  description: 'The id of the commentable.'
                  example: 1
                  nullable: false
                replies_per_comment:
                  type: integer
                  description: 'Number of replies to show per comment.'
                  example: 3
                  nullable: false
                replies_sort:
                  type: string
                  description: 'Column to Sort Replies.'
                  example: 'Sortable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                  nullable: false
                replies_order:
                  type: string
                  description: 'Direction to Sort Replies.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                  nullable: false
              required:
                - type
                - id
    post:
      summary: 'Create a new comment by logged in user'
      operationId: createANewCommentByLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"comment\": {},\n}"
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["commentable_type": ["The Commentable Type field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of commentable.'
                  example: article
                  nullable: false
                id:
                  type: integer
                  description: 'The id of the commentable.'
                  example: 1
                  nullable: false
                body:
                  type: string
                  description: 'The body of the comment.'
                  example: 'This is a comment'
                  nullable: false
                tagged_users:
                  type: array
                  description: 'List of user ids tagged in comment.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                    nullable: true
                parent_id:
                  type: integer
                  description: 'The id of the parent comment.'
                  example: 1
                  nullable: false
                reply_to_id:
                  type: integer
                  description: 'The id of the child comment (Under Replies).'
                  example: 1
                  nullable: false
              required:
                - type
                - id
                - body
  '/api/v1/comments/{id}':
    get:
      summary: 'Show one comment by ID'
      operationId: showOneCommentByID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"comment\": {},\n}"
        401:
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
                example: ''
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The id of the comment.'
                  example: 1
                  nullable: false
                replies_per_comment:
                  type: integer
                  description: 'Number of replies to show per comment.'
                  example: 3
                  nullable: false
                replies_sort:
                  type: string
                  description: 'Column to Sort Replies.'
                  example: 'Sortable columns are: id, commentable_id, commentable_type, body, created_at, updated_at'
                  nullable: false
                replies_order:
                  type: string
                  description: 'Direction to Sort Replies.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
              required:
                - id
    put:
      summary: 'Update comment by ID. (Only owner of comment can update)'
      operationId: updateCommentByIDOnlyOwnerOfCommentCanUpdate
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Comment updated\",\n}"
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Comment not found'
                properties:
                  message:
                    type: string
                    example: 'Comment not found'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["body": ["The Body field is required."] ]}'
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: 'The body of the comment.'
                  example: 'This is a comment'
                  nullable: false
                tagged_users:
                  type: array
                  description: 'List of user ids tagged in comment.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
              required:
                - body
    delete:
      summary: 'Remove comment by ID. (Only owner of comment can delete)'
      operationId: removeCommentByIDOnlyOwnerOfCommentCanDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Article
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: suscipit
        required: true
        schema:
          type: string
  /api/v1/check_phone_no:
    post:
      summary: 'Check phone no exists or not'
      operationId: checkPhoneNoExistsOrNot
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Phone Number not registered'
                properties:
                  message:
                    type: string
                    example: 'Phone Number not registered'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: "The country code of user's phone number."
                  example: '60'
                  nullable: false
                phone_no:
                  type: string
                  description: 'The Phone No of the user.'
                  example: '1234567890'
                  nullable: false
              required:
                - country_code
                - phone_no
      security: []
  /api/v1/sendOtp:
    post:
      summary: 'Send OTP'
      operationId: sendOTP
      description: 'Send SMS OTP to phone number'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'OTP Sent!'
                properties:
                  message:
                    type: string
                    example: 'OTP Sent!'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: "The country code of user's phone number."
                  example: '60'
                  nullable: false
                phone_no:
                  type: string
                  description: 'The Phone No of the user.'
                  example: '1234567890'
                  nullable: false
              required:
                - country_code
                - phone_no
      security: []
  /api/v1/verifyOtp:
    post:
      summary: 'Verify OTP'
      operationId: verifyOTP
      description: 'Login user into the system with OTP'
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"user\": {\n    id: 1,\n    name: \"John Smith\"\n },\n \"token\": \"AuthenticationTokenHere\"\n}"
        401:
          description: 'Invalid Login details'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid login details'
                properties:
                  message:
                    type: string
                    example: 'Invalid login details'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: "The country code of user's phone number."
                  example: '60'
                  nullable: false
                phone_no:
                  type: string
                  description: 'The Phone No of the user.'
                  example: '1234567890'
                  nullable: false
                otp:
                  type: string
                  description: "The OTP sent to user's phone number."
                  example: '123456'
                  nullable: false
              required:
                - country_code
                - phone_no
                - otp
      security: []
  /api/v1/loginWithPassword:
    post:
      summary: 'Login with Password'
      operationId: loginWithPassword
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  user: {  }
                  token: auth_token
                properties:
                  user:
                    type: object
                    properties: {  }
                  token:
                    type: string
                    example: auth_token
        401:
          description: 'Invalid Credentials'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid Credentials'
                properties:
                  message:
                    type: string
                    example: 'Invalid Credentials'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: 'Country code of phone number.'
                  example: '60'
                  nullable: false
                phone_no:
                  type: string
                  description: 'Phone number.'
                  example: '1234567890'
                  nullable: false
                password:
                  type: string
                  description: Password.
                  example: abcd1234
                  nullable: false
              required:
                - country_code
                - phone_no
                - password
      security: []
  /api/v1/loginWithOtp:
    post:
      summary: 'Login with OTP'
      operationId: loginWithOTP
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"user\": {\n   id: 1,\n  name: \"John Smith\"\n},\n\"token\": \"AuthenticationTokenHere\"\n}"
        401:
          description: 'Invalid Login details'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid login details'
                properties:
                  message:
                    type: string
                    example: 'Invalid login details'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: "The country code of user's phone number."
                  example: '60'
                  nullable: false
                phone_no:
                  type: string
                  description: 'The Phone No of the user.'
                  example: '1234567890'
                  nullable: false
                otp:
                  type: string
                  description: "The OTP sent to user's phone number."
                  example: '123456'
                  nullable: false
              required:
                - country_code
                - phone_no
                - otp
      security: []
  /api/v1/register/otp:
    post:
      summary: 'Register with OTP'
      operationId: registerWithOTP
      description: 'Register user with OTP'
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"user\": {\n    id: 1,\n    name: \"John Smith\"\n },\n \"token\": \"AuthenticationTokenHere\"\n}"
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["country_code": ["The Country COde field is required."], "phone_no": ["The Phone No field is required."] ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: "The country code of user's phone number."
                  example: '60'
                  nullable: false
                phone_no:
                  type: string
                  description: 'The Phone No of the user.'
                  example: '1234567890'
                  nullable: false
                otp:
                  type: string
                  description: "The OTP sent to user's phone number."
                  example: '123456'
                  nullable: false
                name:
                  type: string
                  description: 'The name of the use.'
                  example: 'John Smith'
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user.'
                  example: abcd1234
                  nullable: false
              required:
                - country_code
                - phone_no
                - otp
                - name
                - password
      security: []
  /api/v1/login/facebook:
    post:
      summary: 'Login with Facebook'
      operationId: loginWithFacebook
      description: 'Login user with Facebook'
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: 'The access token of the user from Facebook.'
                  example: '1234567890'
                  nullable: false
              required:
                - access_token
      security: []
  /api/v1/login/google:
    post:
      summary: 'Login with Google'
      operationId: loginWithGoogle
      description: 'Login user with Google'
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: 'The access token of the user from Google.'
                  example: '1234567890'
                  nullable: false
              required:
                - access_token
      security: []
  /api/v1/login/social:
    post:
      summary: 'Login with Social (via Firebase Auth)'
      operationId: loginWithSocialviaFirebaseAuth
      description: 'Login user with Social'
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"user\": {\n    id: 1,\n    name: \"John Smith\"\n },\n \"token\": \"AuthenticationTokenHere\"\n}"
        422:
          description: 'Invalid Token'
          content:
            text/plain:
              schema:
                type: string
                example: '{"message": "Invalid Token" ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: 'Firebase Auth Token ().'
                  example: "'ey271236...'"
                  nullable: false
              required:
                - access_token
      security: []
  /api/v1/reset-password-send-otp:
    post:
      summary: 'Reset Password Send NEW OTP (Step 1)'
      operationId: resetPasswordSendNEWOTPStep1
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'OTP sent successfully'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'OTP sent successfully'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_no:
                  type: string
                  description: 'The phone no of the user.'
                  example: '0123456789'
                  nullable: false
              required:
                - phone_no
      security: []
  /api/v1/reset-password:
    post:
      summary: 'Reset Password with OTP (Step 2)'
      operationId: resetPasswordWithOTPStep2
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Password reset successfully'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Password reset successfully'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_no:
                  type: string
                  description: 'The phone no of the user.'
                  example: '0123456789'
                  nullable: false
                new_password:
                  type: string
                  description: 'The new password of the user.'
                  example: '123456'
                  nullable: false
                otp:
                  type: string
                  description: 'The otp of the user.'
                  example: '123456'
                  nullable: false
              required:
                - phone_no
                - new_password
                - otp
      security: []
  /api/v1/logout:
    post:
      summary: Logout
      operationId: logout
      description: 'Log User Out and destroy any active tokens of user'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Logged Out'
                properties:
                  message:
                    type: string
                    example: 'Logged Out'
        401:
          description: 'Access Denied'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Access Denied'
                properties:
                  message:
                    type: string
                    example: 'Access Denied'
      tags:
        - Authentication
  /api/v1/user/complete-profile:
    post:
      summary: 'Complete Profile'
      operationId: completeProfile
      description: 'Complete user profile after registration'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Profile Updated'
                properties:
                  message:
                    type: string
                    example: 'Profile Updated'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        422:
          description: ''
          content:
            text/plain:
              schema:
                oneOf:
                  -
                    description: 'Invalid Form Fields'
                    type: string
                    example: '{"errors": ["name": ["The Name field is required."], "email": ["The Email field is required."] ]}'
                  -
                    description: 'Invalid Form Fields'
                    type: string
                    example: '{"message": "Please verify your phone number first" ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the use.'
                  example: 'John Smith'
                  nullable: false
                email:
                  type: string
                  description: 'The email of the user(email verificatioin will be sent).'
                  example: john@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user(social login do not need to provide).'
                  example: abcd1234
                  nullable: false
              required:
                - name
                - email
  /api/v1/user/send-email-verification:
    post:
      summary: 'Send Verification Email with Token Inside'
      operationId: sendVerificationEmailWithTokenInside
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Verification Email Sent'
                properties:
                  message:
                    type: string
                    example: 'Verification Email Sent'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'You can pass in email address here if user decide to change it again.'
                  example: john@example.com
                  nullable: false
              required:
                - email
  /api/v1/user/verify-email:
    post:
      summary: 'Verify Email with Token'
      operationId: verifyEmailWithToken
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email Verified'
                properties:
                  message:
                    type: string
                    example: 'Email Verified'
        422:
          description: 'Invalid Token'
          content:
            text/plain:
              schema:
                type: string
                example: '{"message": "Invalid Token" ]}'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'The email verification token.'
                  example: '123456'
                  nullable: false
              required:
                - token
  /api/v1/campaigns/active:
    get:
      summary: 'Get Active Campaigns'
      operationId: getActiveCampaigns
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  has_active_campaign: true
                  campaigns: []
                properties:
                  has_active_campaign:
                    type: boolean
                    example: true
                  campaigns:
                    type: array
                    example: []
      tags:
        - Campaigns
  /api/v1/campaigns/save/single_aswer:
    post:
      summary: 'Save Single Answer to a Question'
      operationId: saveSingleAnswerToAQuestion
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Answer saved successfully'
                properties:
                  message:
                    type: string
                    example: 'Answer saved successfully'
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: integer
                  description: 'The ID of the question.'
                  example: 1
                  nullable: false
                answer:
                  type: string
                  description: 'The answer to the question.'
                  example: Yes/A/B/C/D/Text
                  nullable: false
              required:
                - question_id
                - answer
  /api/v1/campaigns/answers_by_campaign_brand:
    get:
      summary: 'Get My Answers by Campaign and Brand'
      operationId: getMyAnswersByCampaignAndBrand
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  campaign: {  }
                  answers: []
                properties:
                  campaign:
                    type: object
                    properties: {  }
                  answers:
                    type: array
                    example: []
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_id:
                  type: integer
                  description: 'The ID of the campaign.'
                  example: 1
                  nullable: false
                brand:
                  type: string
                  description: 'The brand of the campaign.'
                  example: 'Brand A'
                  nullable: false
              required:
                - campaign_id
                - brand
  /api/v1/campaigns/questions_by_campaign:
    get:
      summary: 'Get Questions by Campaign'
      operationId: getQuestionsByCampaign
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  campaign: {  }
                  questions: []
                properties:
                  campaign:
                    type: object
                    properties: {  }
                  questions:
                    type: array
                    example: []
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_id:
                  type: integer
                  description: 'The ID of the campaign.'
                  example: 1
                  nullable: false
              required:
                - campaign_id
  /api/v1/campaigns/questions_by_brand_campaign:
    get:
      summary: 'Get Questions by Campaign and Brand'
      operationId: getQuestionsByCampaignAndBrand
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  campaign: {  }
                  questions: []
                properties:
                  campaign:
                    type: object
                    properties: {  }
                  questions:
                    type: array
                    example: []
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  type: string
                  description: 'The brand of the campaign.'
                  example: 'Brand A'
                  nullable: false
                campaign_id:
                  type: integer
                  description: 'The ID of the campaign.'
                  example: 1
                  nullable: false
              required:
                - brand
                - campaign_id
  /api/v1/campaigns/save/respondant_details:
    post:
      summary: 'Create Respondant Details'
      operationId: createRespondantDetails
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Respondant details created successfully'
                properties:
                  message:
                    type: string
                    example: 'Respondant details created successfully'
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_id:
                  type: integer
                  description: 'The ID of the campaign.'
                  example: 1
                  nullable: false
                name:
                  type: string
                  description: 'The name of the respondant.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'The email of the respondant. Example:'
                  example: xryan@example.org
                  nullable: false
                phone:
                  type: string
                  description: 'The phone of the respondant.'
                  example: '0123456789'
                  nullable: false
                ic:
                  type: string
                  description: 'The ic of the respondant.'
                  example: '123456789012'
                  nullable: false
                address:
                  type: string
                  description: 'The address of the respondant.'
                  example: '123, Jalan ABC, 12345, Kuala Lumpur'
                  nullable: false
              required:
                - campaign_id
                - name
                - email
                - phone
                - ic
                - address
  /api/v1/campaigns/respondant_details:
    get:
      summary: 'Get Respondant Details of User'
      operationId: getRespondantDetailsOfUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  respondant_details: {  }
                  has_submitted_respondant_details: true
                properties:
                  respondant_details:
                    type: object
                    properties: {  }
                  has_submitted_respondant_details:
                    type: boolean
                    example: true
      tags:
        - Campaigns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_id:
                  type: integer
                  description: 'The ID of the campaign.'
                  example: 1
                  nullable: false
              required:
                - campaign_id
  /api/v1/public_user:
    get:
      summary: ''
      operationId: getApiV1Public_user
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User not found'
                properties:
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: omnis
                  nullable: false
              required:
                - username
  /api/v1/public_store:
    get:
      summary: 'Get Public Store Public View'
      operationId: getPublicStorePublicView
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: ''
                  exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line: 1144
                  trace:
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                      line: 45
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/StoreController.php
                      line: 572
                      function: abort
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: getPublicStorePublicView
                      class: App\Http\Controllers\Api\StoreController
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 259
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 798
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                      line: 48
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: App\Http\Middleware\SetLocaleFromHeader
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 126
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 92
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 54
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 797
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 776
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 740
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 729
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 190
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                      line: 19
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Livewire\DisableBrowserCache
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 165
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 134
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 237
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 661
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 183
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                      line: 326
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 152
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 1078
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 324
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 175
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 155
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: ''
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file:
                    type: string
                    example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line:
                    type: integer
                    example: 1144
                  trace:
                    type: array
                    example:
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line: 45
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/StoreController.php
                        line: 572
                        function: abort
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: getPublicStorePublicView
                        class: App\Http\Controllers\Api\StoreController
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 259
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 798
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                        line: 48
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: App\Http\Middleware\SetLocaleFromHeader
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 126
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 92
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 54
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 797
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 776
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 740
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 729
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 190
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                        line: 19
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Livewire\DisableBrowserCache
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 165
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 134
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 237
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 661
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 183
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                        line: 326
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 152
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 1078
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 324
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 175
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 155
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line:
                          type: integer
                          example: 45
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                share_code:
                  type: string
                  description: ''
                  example: mollitia
                  nullable: false
              required:
                - share_code
  /api/v1/public_article:
    get:
      summary: 'Get Article (public)'
      operationId: getArticlepublic
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: ''
                  exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line: 1144
                  trace:
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                      line: 45
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/ArticleController.php
                      line: 1777
                      function: abort
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: getArticleForPublicView
                      class: App\Http\Controllers\Api\ArticleController
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 259
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 798
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                      line: 48
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: App\Http\Middleware\SetLocaleFromHeader
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 126
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 92
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 54
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 797
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 776
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 740
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 729
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 190
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                      line: 19
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Livewire\DisableBrowserCache
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 165
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 134
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 237
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 661
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 183
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                      line: 326
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 152
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 1078
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 324
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 175
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 155
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: ''
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file:
                    type: string
                    example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line:
                    type: integer
                    example: 1144
                  trace:
                    type: array
                    example:
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line: 45
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/ArticleController.php
                        line: 1777
                        function: abort
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: getArticleForPublicView
                        class: App\Http\Controllers\Api\ArticleController
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 259
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 798
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                        line: 48
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: App\Http\Middleware\SetLocaleFromHeader
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 126
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 92
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 54
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 797
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 776
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 740
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 729
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 190
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                        line: 19
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Livewire\DisableBrowserCache
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 165
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 134
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 237
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 661
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 183
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                        line: 326
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 152
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 1078
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 324
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 175
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 155
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line:
                          type: integer
                          example: 45
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                share_code:
                  type: string
                  description: ''
                  example: quidem
                  nullable: false
              required:
                - share_code
  /api/v1/public_offer:
    get:
      summary: 'Get Merchant Offer Public'
      operationId: getMerchantOfferPublic
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: ''
                  exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line: 1144
                  trace:
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                      line: 45
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/MerchantOfferController.php
                      line: 1285
                      function: abort
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: getPublicOfferPublicView
                      class: App\Http\Controllers\Api\MerchantOfferController
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 259
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 798
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                      line: 48
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: App\Http\Middleware\SetLocaleFromHeader
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 126
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 92
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 54
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 797
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 776
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 740
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 729
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 190
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                      line: 19
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Livewire\DisableBrowserCache
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 165
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 134
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 237
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 661
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 183
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                      line: 326
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 152
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 1078
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 324
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                      line: 175
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 155
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: ''
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file:
                    type: string
                    example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Application.php
                  line:
                    type: integer
                    example: 1144
                  trace:
                    type: array
                    example:
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line: 45
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Controllers/Api/MerchantOfferController.php
                        line: 1285
                        function: abort
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: getPublicOfferPublicView
                        class: App\Http\Controllers\Api\MerchantOfferController
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 259
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 798
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/app/Http/Middleware/SetLocaleFromHeader.php
                        line: 48
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: App\Http\Middleware\SetLocaleFromHeader
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 126
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 92
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 54
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 797
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 776
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 740
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 729
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 190
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/livewire/livewire/src/DisableBrowserCache.php
                        line: 19
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Livewire\DisableBrowserCache
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 165
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 134
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 237
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 661
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 183
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Command/Command.php
                        line: 326
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 152
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 1078
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 324
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/symfony/console/Application.php
                        line: 175
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 155
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /Users/elson/Documents/Projects/funhub-mobile-backend/artisan
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: /Users/elson/Documents/Projects/funhub-mobile-backend/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line:
                          type: integer
                          example: 45
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                share_code:
                  type: string
                  description: ''
                  example: et
                  nullable: false
              required:
                - share_code
  /api/v1/external/merchants:
    get:
      summary: "Get Merchants Lists\nMerchant portal will call this api to sync data\nGet merchant info, logo, user, categories, stores and store categories"
      operationId: getMerchantsListsMerchantPortalWillCallThisApiToSyncDataGetMerchantInfoLogoUserCategoriesStoresAndStoreCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid API token'
                properties:
                  message:
                    type: string
                    example: 'Invalid API token'
      tags:
        - Endpoints
  /api/v1/external/merchant/categories:
    get:
      summary: "Get Merchant Categories\nMerchant portal will call this api to sync data"
      operationId: getMerchantCategoriesMerchantPortalWillCallThisApiToSyncData
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid API token'
                properties:
                  message:
                    type: string
                    example: 'Invalid API token'
      tags:
        - Endpoints
  /api/v1/external/merchant/dashboard:
    post:
      summary: "Get Merchant's Dashboard\nMerchant portal will call this api for reporting overview"
      operationId: getMerchantsDashboardMerchantPortalWillCallThisApiForReportingOverview
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/external/merchant/offer_overview:
    post:
      summary: "Get Merchant's Offer Overview\nMerchant portal will call this api for reporting overview"
      operationId: getMerchantsOfferOverviewMerchantPortalWillCallThisApiForReportingOverview
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/external/merchant/offer_code_lists:
    post:
      summary: "Get Merchant's Offer Codes lists\nMerchant portal will call this api for reporting"
      operationId: getMerchantsOfferCodesListsMerchantPortalWillCallThisApiForReporting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/external/merchant/offer_lists:
    post:
      summary: "Get Merchant's Offer lists\nMerchant portal will call this api for reporting"
      operationId: getMerchantsOfferListsMerchantPortalWillCallThisApiForReporting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/external/merchant/register:
    post:
      summary: "Post Merchant Registration\nMerchant portal send data to this api to register the merchant information in base portal"
      operationId: postMerchantRegistrationMerchantPortalSendDataToThisApiToRegisterTheMerchantInformationInBasePortal
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/external/merchant/update:
    post:
      summary: "Post Merchant Update\nMerchant portal send data to this api to update the merchant information in base portal"
      operationId: postMerchantUpdateMerchantPortalSendDataToThisApiToUpdateTheMerchantInformationInBasePortal
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/v1/external/merchant/logo:
    post:
      summary: "Post Merchant Update Logo\nMerchant portal send data to this api to update the merchant information in base portal"
      operationId: postMerchantUpdateLogoMerchantPortalSendDataToThisApiToUpdateTheMerchantInformationInBasePortal
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v1/external/merchant/{merchant_id}':
    get:
      summary: "Get Single Merchant\nMerchant portal will call this api to sync data\nGet merchant info, logo, user, categories, stores and store categories"
      operationId: getSingleMerchantMerchantPortalWillCallThisApiToSyncDataGetMerchantInfoLogoUserCategoriesStoresAndStoreCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid API token'
                properties:
                  message:
                    type: string
                    example: 'Invalid API token'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: merchant_id
        description: 'The ID of the merchant.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/external/store/{store_id}':
    get:
      summary: "Get Single Store\nMerchant portal will call this api to sync data\nGet store info"
      operationId: getSingleStoreMerchantPortalWillCallThisApiToSyncDataGetStoreInfo
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid API token'
                properties:
                  message:
                    type: string
                    example: 'Invalid API token'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: store_id
        description: 'The ID of the store.'
        example: 3
        required: true
        schema:
          type: integer
  /api/v1/help/faqs:
    get:
      summary: 'Get All FAQs'
      operationId: getAllFAQs
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Help Center'
    parameters:
      -
        in: path
        name: category_ids
        description: 'Optional parameter. array optional Array of category ids.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: query
        description: 'Optional parameter. optional Search query.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'How to ...'
  /api/v1/help/faq_categories:
    get:
      summary: 'Get All FAQs Categories'
      operationId: getAllFAQsCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Help Center'
  /api/v1/help/support_requests:
    get:
      summary: 'Get My Support Requests'
      operationId: getMySupportRequests
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Help Center'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'optional Status of support request.'
                  example: '0=pending,1=in progress,2=pending info,3=closed,4=reopened,5=invalid'
                  nullable: false
                category_ids:
                  type: array
                  description: 'optional Array of category ids.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                query:
                  type: string
                  description: 'optional Search query.'
                  example: 'my support request'
                  nullable: false
                limit:
                  type: integer
                  description: 'optional Limit of results per page.'
                  example: 10
                  nullable: false
  /api/v1/help/support_requests/raise:
    post:
      summary: 'Raise Support Request'
      operationId: raiseSupportRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Help Center'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                supportable:
                  type: string
                  description: 'The type of supportable.'
                  example: article
                  nullable: true
                supportable_id:
                  type: integer
                  description: 'This field is required when <code>supportable</code> is present.'
                  example: 18
                  nullable: false
                category_id:
                  type: integer
                  description: 'Category id.'
                  example: 1
                  nullable: false
                title:
                  type: string
                  description: 'Title of support request.'
                  example: 'My support request'
                  nullable: false
                message:
                  type: string
                  description: 'Message to send.'
                  example: 'This is my message'
                  nullable: false
                media_ids:
                  type: array
                  description: 'optional Array of media ids.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                    nullable: true
              required:
                - supportable
                - category_id
                - title
                - message
  '/api/v1/help/support_requests/{support_request_id}/reply':
    post:
      summary: 'Reply to Support Request'
      operationId: replyToSupportRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: {  }
                  request: {  }
                properties:
                  message:
                    type: object
                    properties: {  }
                  request:
                    type: object
                    properties: {  }
      tags:
        - 'Help Center'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: 'Message to send.'
                  example: 'This is my message'
                  nullable: false
                media_ids:
                  type: array
                  description: 'optional Array of media ids.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                    nullable: true
              required:
                - message
    parameters:
      -
        in: path
        name: support_request_id
        description: 'The ID of the support request.'
        example: 10
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'Support Request ID.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/v1/help/support_requests/{support_request_id}/messages':
    get:
      summary: 'Get Messages of Support Request'
      operationId: getMessagesOfSupportRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - 'Help Center'
    parameters:
      -
        in: path
        name: support_request_id
        description: 'The ID of the support request.'
        example: 10
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'Support Request ID.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/v1/help/support_requests/{support_request_id}/resolve':
    post:
      summary: 'Resolve Support Request'
      operationId: resolveSupportRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Support request resolved and closed'
                properties:
                  message:
                    type: string
                    example: 'Support request resolved and closed'
      tags:
        - 'Help Center'
    parameters:
      -
        in: path
        name: support_request_id
        description: 'The ID of the support request.'
        example: 10
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'Support Request ID.'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/help/support_requests/categories:
    get:
      summary: 'Get Support Request Categories'
      operationId: getSupportRequestCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Help Center'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'optional Type of support request category.'
                  example: 'complain,bug,feature_request,others'
                  nullable: false
  /api/v1/help/support_requests/attach:
    post:
      summary: 'Upload Attachments(Images) for Support Messages'
      operationId: uploadAttachmentsImagesForSupportMessages
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  uploaded:
                    -
                      id: 1
                      name: image.jpg
                      url: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                      size: 12345
                      type: image/jpeg
                properties:
                  uploaded:
                    type: array
                    example:
                      -
                        id: 1
                        name: image.jpg
                        url: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                        size: 12345
                        type: image/jpeg
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: image.jpg
                        url:
                          type: string
                          example: 'http://localhost:8000/storage/user_uploads/1/image.jpg'
                        size:
                          type: integer
                          example: 12345
                        type:
                          type: string
                          example: image/jpeg
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["images": ["The images field is required."] ]}'
      tags:
        - 'Help Center'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: string
                  format: binary
                  description: 'The images to upload.'
                  nullable: false
              required:
                - images
  /api/v1/interactions/users:
    get:
      summary: 'Get Users of Interaction'
      operationId: getUsersOfInteraction
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links: {  }
                  meta: {  }
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties: {  }
                  meta:
                    type: object
                    properties: {  }
      tags:
        - Interactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interactable:
                  type: string
                  description: 'The type of interactable.'
                  example: 'article,merchant_offer,merchant_rating,store_rating,store'
                  nullable: false
                id:
                  type: integer
                  description: 'The id of the interactable.'
                  example: 1
                  nullable: false
                type:
                  type: string
                  description: 'The type of interaction.'
                  example: 'like,dislike,share,bookmark'
                  nullable: false
              required:
                - interactable
                - id
                - type
  /api/v1/interactions:
    get:
      summary: 'Get interactions on a interactable type (eg. Articles)'
      operationId: getInteractionsOnAInteractableTypeegArticles
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Interactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interactable:
                  type: string
                  description: 'The type of interactable.'
                  example: 'article,merchant_offer,merchant_rating,store_rating,store'
                  nullable: false
                id:
                  type: integer
                  description: 'The id of the interactable.'
                  example: 1
                  nullable: false
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, interactable_id, interactable_type, body, created_at, updated_at'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, interactable_id, interactable_type, body, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                  nullable: false
              required:
                - interactable
                - id
    post:
      summary: 'Create an interaction for interactable type'
      operationId: createAnInteractionForInteractableType
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  interaction: {  }
                properties:
                  interaction:
                    type: object
                    properties: {  }
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - Interactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interactable:
                  type: string
                  description: 'The type of interactable.'
                  example: 'article,merchant_offer,merchant_rating,store_rating,store'
                  nullable: false
                type:
                  type: string
                  description: 'The type of interaction.'
                  example: 'like,dislike,share,bookmark'
                  nullable: false
                id:
                  type: integer
                  description: 'The id of the interactable (eg. Article ID).'
                  example: 1
                  nullable: false
                code:
                  type: string
                  description: 'optional The code of the shareable link(6 characters).'
                  example: '1'
                  nullable: false
                model_type:
                  type: string
                  description: 'optional The model type of the shareable link.'
                  example: 'article,merchant_offer,store'
                  nullable: false
              required:
                - interactable
                - type
                - id
  '/api/v1/interactions/{id}':
    get:
      summary: 'Show one interaction by ID'
      operationId: showOneInteractionByID
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Interactions
    delete:
      summary: "Remove Interaction By ID\nOnly owner can call this method"
      operationId: removeInteractionByIDOnlyOwnerCanCallThisMethod
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Interaction deleted'
                properties:
                  message:
                    type: string
                    example: 'Interaction deleted'
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: "{['message' => 'Interaction not found']}"
      tags:
        - Interactions
    parameters:
      -
        in: path
        name: id
        description: 'The id of the interaction.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/external/locations:
    get:
      summary: 'Get Locations'
      operationId: getLocations
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                location_ids:
                  type: array
                  description: 'optional Location Ids to Filter. Example [1,2,3]'
                  example:
                    - dicta
                  items:
                    type: string
                name:
                  type: string
                  description: 'optional Search query.'
                  example: '"KFC SS15"'
                  nullable: false
                state_id:
                  type: integer
                  description: 'optional Filter by state id.'
                  example: 1
                  nullable: false
                country_id:
                  type: integer
                  description: 'optional Filter by country id.'
                  example: 1
                  nullable: false
                city:
                  type: string
                  description: 'optional Filter by city.'
                  example: '"Subang Jaya"'
                  nullable: false
                lat:
                  type: number
                  description: 'optional Latitude of User GeoLoc.'
                  example: 3.073065
                  nullable: false
                lng:
                  type: number
                  description: 'optional Longitude of User GeoLoc.'
                  example: 101.607787
                  nullable: false
                radius:
                  type: integer
                  description: 'optional Radius (KM) of search if lat,lng provided.'
                  example: 10
                  nullable: false
  /api/v1/locations:
    get:
      summary: 'Get Locations'
      operationId: getLocations
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                location_ids:
                  type: array
                  description: 'optional Location Ids to Filter. Example [1,2,3]'
                  example:
                    - blanditiis
                  items:
                    type: string
                name:
                  type: string
                  description: 'optional Search query.'
                  example: '"KFC SS15"'
                  nullable: false
                state_id:
                  type: integer
                  description: 'optional Filter by state id.'
                  example: 1
                  nullable: false
                country_id:
                  type: integer
                  description: 'optional Filter by country id.'
                  example: 1
                  nullable: false
                city:
                  type: string
                  description: 'optional Filter by city.'
                  example: '"Subang Jaya"'
                  nullable: false
                lat:
                  type: number
                  description: 'optional Latitude of User GeoLoc.'
                  example: 3.073065
                  nullable: false
                lng:
                  type: number
                  description: 'optional Longitude of User GeoLoc.'
                  example: 101.607787
                  nullable: false
                radius:
                  type: integer
                  description: 'optional Radius (KM) of search if lat,lng provided.'
                  example: 10
                  nullable: false
  '/api/v1/locations/{location_id}':
    get:
      summary: 'Get One Location'
      operationId: getOneLocation
      description: 'Locaiton will auto load state, coutry, articles, merchant offers, ratings'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                properties:
                  data:
                    type: object
                    properties: {  }
      tags:
        - Location
    parameters:
      -
        in: path
        name: location_id
        description: 'The ID of the location.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: location
        description: 'Location ID.'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/maintenance:
    get:
      summary: 'Get maintenance info'
      operationId: getMaintenanceInfo
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n}"
      tags:
        - Maintenance
  /api/v1/media/signed_upload:
    get:
      summary: "Get Signed URL Upload Media (photos/videos)\nMust only call one per file. If multiple files, call multiple times. URL generated you need to PUT a binary file to it."
      operationId: getSignedURLUploadMediaphotosvideosMustOnlyCallOnePerFileIfMultipleFilesCallMultipleTimesURLGeneratedYouNeedToPUTABinaryFileToIt
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: success
                    type: object
                    example:
                      id: 1619114400-608b7a10a3b3d
                      url: 'https://s3-ap-southeast-1.amazonaws.com/your-bucket-name/user_uploads/my-photo.jpg?AWSAccessKeyId=your-access-key-id&Expires=1619114400&Signature=your-signature'
                    properties:
                      id:
                        type: string
                        example: 1619114400-608b7a10a3b3d
                      url:
                        type: string
                        example: 'https://s3-ap-southeast-1.amazonaws.com/your-bucket-name/user_uploads/my-photo.jpg?AWSAccessKeyId=your-access-key-id&Expires=1619114400&Signature=your-signature'
                  -
                    description: failed
                    type: object
                    example:
                      message: 'Only applicable for S3 Storage'
                      url: null
                    properties:
                      message:
                        type: string
                        example: 'Only applicable for S3 Storage'
                      url:
                        type: string
                        example: null
      tags:
        - Media
    parameters:
      -
        in: path
        name: filename
        description: 'The filename of the media to be uploaded, filename must only contain alphabets and numbers.'
        example: my-photo.jpg
        required: true
        schema:
          type: string
  /api/v1/media/upload_complete:
    post:
      summary: 'Upload Media Complete'
      operationId: uploadMediaComplete
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Success\",\n\"uploaded\": [\n{\n\"id\": 1,\n\"name\": \"1619114400-608b7a10a3b3d_my-photo.jpg\",\n\"url\": \"https://your-bucket-name.s3-ap-southeast-1.amazonaws.com/user_uploads/1619114400-608b7a10a3b3d_my-photo.jpg\",\n\"size\": 12345,\n\"type\": \"image/jpeg\"\n},\n]\n}"
      tags:
        - Media
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                upload_ids:
                  type: string
                  description: 'The upload_ids from get signed upload link, can be multiple ids in a comma separated.'
                  example: '1619114400-608b7a10a3b3d,1619114400-608b7a10a3b3e'
                  nullable: false
                is_cover:
                  type: boolean
                  description: 'optional The is_cover flag, default false.'
                  example: true
                  nullable: false
              required:
                - upload_ids
  /api/v1/merchant_banners:
    get:
      summary: 'Get Banners'
      operationId: getBanners
      description: 'Get a list of published merchant banners ordered by ascending order.'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      title: 'New Year Sale'
                      link_to: 'https://example.com/sale'
                      banner_url: 'https://example.com/images/banner.jpg'
                      created_at: '2025-01-09T04:25:36.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: 'New Year Sale'
                        link_to: 'https://example.com/sale'
                        banner_url: 'https://example.com/images/banner.jpg'
                        created_at: '2025-01-09T04:25:36.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'New Year Sale'
                        link_to:
                          type: string
                          example: 'https://example.com/sale'
                        banner_url:
                          type: string
                          example: 'https://example.com/images/banner.jpg'
                        created_at:
                          type: string
                          example: '2025-01-09T04:25:36.000000Z'
      tags:
        - Merchant
  /api/v1/public_offers:
    get:
      summary: 'Web - Get Public Offers'
      operationId: webGetPublicOffers
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 5490
                      sku: ItoJapanese002-50-C001-2726
                      merchant_id: 137
                      store:
                        id: null
                        name: null
                      stores:
                        -
                          id: 793
                          name: 'Ito Japanese Restaurant'
                          address: '33, Jalan Puteri 4/8, Puchong, 雪兰莪州, Malaysia'
                          ratings: '4.7'
                          total_ratings: 3
                          address_postcode: '47100'
                          lat: '3.01609720'
                          lng: '101.61295420'
                          is_hq: 0
                          state:
                            id: 26
                            country_id: 131
                            code: CUSTOMIYz
                            name: 雪兰莪州
                            name_translation: '{"en": "雪兰莪州", "zh": ""}'
                            created_at: '2023-10-10T06:53:55.000000Z'
                            updated_at: '2023-10-10T06:53:55.000000Z'
                          country:
                            id: 131
                            code: MY
                            name: Malaysia
                            phone_code: '60'
                      logo: null
                      merchant:
                        id: 137
                        logo: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/142295/NHODBz3pgu217g1QQ8kMBK1sNBMpUX-metaTWVyY2hhbnQgTG9nbyBwbGFjZW1lbnRfMjAyNDEwMThfMTYyNzE1XzAwMDAucG5n-.png'
                        brand_name: 'Ito Japanese Restaurant'
                        business_name: 'Ito Japanese Restaurant Sdn Bhd'
                        business_phone_no: '0123567996'
                        user:
                          id: 21499
                          name: 'Ito Japanese Restaurant'
                      name: 'ITO Japanese Restaurant - RM10 现金优惠券'
                      is_flash: 0
                      description: "✨Puchong 区的日式料理屋 ✨\n平价｜服务好｜食物精致美味\n\n必吃 🤤 \n✅ Avocado Salad \n✅ Uni Tofu Nabe \n✅ Salmon Volcano\n✅ Ika Geso Spicy Age\n✅ Avocado Truffle Miso Gratin\n\n🙋 这里食物的选择非常多 \n而且环境舒适卫生 🥹 \n超级适合和家人或朋友一起聚餐哦 👍 \n\n居住在Puchong 或在这里的上班族 \n真的很值得推荐一试！😍 \n\n\n\n🎎【ITO Japanese Restaurant】🎎\n\n📍 G-35, Jalan Puteri 4/8, Bandar Puteri, 47100 Puchong, Selangor\n☎️  03-8052 7996\n⏰Monday to Sunday 11:30am -2:30pm, 5:30pm – 10:30pm\n\n"
                      fine_print: "1. 优惠券只限用于堂食(Dine In Only)\n2. 兑换此优惠券的最低消费要求为 RM20\n3. 每张优惠券1天只能兑换1次，如需兑换第二张须改日使用\n4. 此优惠券不可与其他优惠券、促销活动、折扣或特别优惠同时使用，且严禁分单\n"
                      redemption_policy: "1. 该优惠券自预订确认之日起 30 天内有效。最后一天23:59到期\n2. 优惠券不可与任何其他折扣同时使用，包括会员折扣\n3. 优惠券不可兑换现金\n4. 优惠券只能通过 FUNHUB App 兑换/使用\n5. 优惠券只能兑换一次\n6. 每张账单限用 1 张优惠券\n"
                      cancellation_policy: "1. 已兑换的优惠券不可随意取消、更改或退款。\n2. 已兑换的优惠券一经使用后，不可更改或取消。\n3. 已兑换的优惠券仅限有效期内使用，逾期则作废且不可进行退款。\n4. 若您发现他人盗用您的账号并使用此优惠券，请联系客服申请退还饭盒。\n5. 若您去消费时，因技术情况无法使用此优惠券，请联系客服申请退还饭盒。\n"
                      point_cost: 1
                      point_fiat_price: 10
                      discounted_point_fiat_price: 5
                      fiat_price: 10
                      discounted_fiat_price: 8
                      default_purchase_method: point
                      available_at: '2025-01-04 00:00:00'
                      available_until: '2025-01-07 23:59:59'
                      expiry_days: 30
                      quantity: 5
                      media:
                        -
                          name: ITO-SD1
                          file_name: wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc=-.png
                          uuid: d6675a50-d9a3-4767-90c4-3df171a16615
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152259/wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc%3D-.png'
                          order: null
                          custom_properties:
                            width: 1080
                            height: 1440
                            is_cover: false
                          extension: png
                          size: 2170208
                        -
                          name: ITO-SD1-banner
                          file_name: B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png
                          uuid: 4949a680-0c85-41e0-92c4-0ac064dfcb5e
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152260/B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png'
                          order: null
                          custom_properties:
                            width: 1035
                            height: 339
                            is_cover: false
                          extension: png
                          size: 300718
                      horizontal_banner:
                        name: ITO-SD1-banner
                        file_name: B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png
                        uuid: 4949a680-0c85-41e0-92c4-0ac064dfcb5e
                        original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152260/B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png'
                        order: null
                        custom_properties:
                          width: 1035
                          height: 339
                          is_cover: false
                        extension: png
                        size: 300718
                      vertical_banner:
                        name: ITO-SD1
                        file_name: wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc=-.png
                        uuid: d6675a50-d9a3-4767-90c4-3df171a16615
                        original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152259/wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc%3D-.png'
                        order: null
                        custom_properties:
                          width: 1080
                          height: 1440
                          is_cover: false
                        extension: png
                        size: 2170208
                      interactions:
                        -
                          id: 42954
                          user:
                            id: 6696
                            name: 'Elise 🌸'
                            avatar: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/105466/image_cropper_0A4C9DC4-A57D-4D51-B8A2-963DB67B09A4-10796-00000291432E54A1.jpg'
                          type: 3
                          created_at: '2025-01-06T07:50:49.000000Z'
                          updated_at: '2025-01-06T07:50:49.000000Z'
                          share_url: null
                          created_at_diff: '3 days ago'
                          updated_at_diff: '3 days ago'
                      location: null
                      count:
                        likes: 0
                        share: 1
                        bookmarks: 0
                        views: 29
                      categories: []
                      created_at: '2024-11-21T03:26:28.000000Z'
                      updated_at: '2025-01-03T16:02:49.000000Z'
                      created_at_diff: '1 month ago'
                      updated_at_diff: '6 days ago'
                    -
                      id: 8488
                      sku: FujiyamaJapanese003-54-C001-5668
                      merchant_id: 130
                      store:
                        id: null
                        name: null
                      stores:
                        -
                          id: 3571
                          name: 'Fujiyama 101 Japanese Restaurant'
                          address: '26, JALAN RUGBI 13/30, SEKSYEN 13 TADISMA BUSINESS PARK Shah Alam, 40100 Petaling Jaya, Selangor'
                          ratings: '0.0'
                          total_ratings: 0
                          address_postcode: '40100'
                          lat: '3.0884927'
                          lng: '101.5439374'
                          is_hq: 0
                          state:
                            id: 12
                            country_id: 131
                            code: SGR
                            name: Selangor
                            name_translation: '{"en": "Selangor", "zh": "雪兰莪"}'
                            created_at: '2023-04-09T23:44:27.000000Z'
                            updated_at: '2023-04-09T23:44:27.000000Z'
                          country:
                            id: 131
                            code: MY
                            name: Malaysia
                            phone_code: '60'
                      logo: null
                      merchant:
                        id: 130
                        logo: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/141931/JMGJibDf7EsKVmB3BMYVcgC3FYYaKL-metaTG9nbyAoMSkuanBn-.jpg'
                        brand_name: ' FujiYama 101 Japanese Restaurant '
                        business_name: 'Fujiyama Japanese Restaurant'
                        business_phone_no: '0168991900'
                        user:
                          id: 21453
                          name: ' FujiYama 101'
                      name: 'Salmon Belly Osaka Rolls'
                      is_flash: 0
                      description: "Chef Yama 是一位拥有超过35年经验的寿司大师 👏\n\n🙋 哪里可以见到Chef Yama？\n👉 Fujiyama Japanese Restaurant 101 \n\n👉 店里必吃的招牌 \n🍣Salmon Belly Osaka Rolls 🍣\n\n内层： \n🍣 辣味三文鱼 \n🥑 牛油果 \n🥒 黄瓜和墨西哥辣椒\n\n外层： \n🍣 三文鱼肚 \n🧄 蒜 \n🧅 洋葱鱼子酱\n\n最后的点缀： \n✨ 轻轻炙烤后，再配上Chef Yama 的招牌辣味蒜蓉酱\n\n\n每一片厚度均匀的三文鱼 \n都是老板经过三十五年的厨艺，精心打磨而成 🔪 \n一口入嘴， 让人按耐不住想再来一片的念头 😋 \n\n\n⛰️【Fujiyama Japanese Restaurant 101】⛰️\n\n📍26, JALAN RUGBI 13/30, SEKSYEN 13 TADISMA BUSINESS PARK Shah Alam, 40100 Petaling Jaya, Selangor\n☎️ 03-5524 3634\n⏰Monday to Sunday 11am -11pm\n⚠️ 星期五，六和日需预约\n\n"
                      fine_print: "1. 优惠券只限用于堂食(Dine In Only)\n2. 需消费最低 RM100 才能使用此优惠券\n3. 星期五，六和日需提前预约\n4. 每张优惠券1天只能兑换1次，如需兑换第二张须改日使用\n5. 此优惠券不可与其他优惠券、促销活动、折扣或特别优惠同时使用，且严禁分单\n"
                      redemption_policy: "1. 该优惠券自预订确认之日起 30 天内有效。最后一天23:59到期\n2. 优惠券不可与任何其他折扣同时使用，包括会员折扣\n3. 优惠券不可兑换现金\n4. 优惠券只能通过 FUNHUB App 兑换/使用\n5. 优惠券只能兑换一次\n6. 每张账单限用 1 张优惠券\n"
                      cancellation_policy: "1. 已兑换的优惠券不可随意取消、更改或退款。\n2. 已兑换的优惠券一经使用后，不可更改或取消。\n3. 已兑换的优惠券仅限有效期内使用，逾期则作废且不可进行退款。\n4. 若您发现他人盗用您的账号并使用此优惠券，请联系客服申请退还饭盒。\n5. 若您去消费时，因技术情况无法使用此优惠券，请联系客服申请退还饭盒。\n"
                      point_cost: 4
                      point_fiat_price: 43.8
                      discounted_point_fiat_price: 20
                      fiat_price: 43.8
                      discounted_fiat_price: 35
                      default_purchase_method: point
                      available_at: '2025-01-06 00:00:00'
                      available_until: '2025-01-08 23:59:59'
                      expiry_days: 30
                      quantity: 5
                      media:
                        -
                          name: Fujiyama-SD1
                          file_name: gQaUy2udVCp1MgDfOnfV1BUhglBWiT-metaRnVqaXlhbWEtU0QxLnBuZw==-.png
                          uuid: b78c7a04-a0b5-4da8-9c30-57baaa7805e1
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/165509/gQaUy2udVCp1MgDfOnfV1BUhglBWiT-metaRnVqaXlhbWEtU0QxLnBuZw%3D%3D-.png'
                          order: null
                          custom_properties:
                            width: 1080
                            height: 1440
                            is_cover: false
                          extension: png
                          size: 1609609
                        -
                          name: Fujiyama-SD1-voucher
                          file_name: gC2VLTdw6NtD8xW19UlQJY719AZCYK-metaRnVqaXlhbWEtU0QxLXZvdWNoZXIucG5n-.png
                          uuid: 05c5b576-b6ee-4fdd-b4b8-bf4137b58b43
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/165510/gC2VLTdw6NtD8xW19UlQJY719AZCYK-metaRnVqaXlhbWEtU0QxLXZvdWNoZXIucG5n-.png'
                          order: null
                          custom_properties:
                            width: 1035
                            height: 339
                            is_cover: false
                          extension: png
                          size: 273337
                      horizontal_banner:
                        name: Fujiyama-SD1-voucher
                        file_name: gC2VLTdw6NtD8xW19UlQJY719AZCYK-metaRnVqaXlhbWEtU0QxLXZvdWNoZXIucG5n-.png
                        uuid: 05c5b576-b6ee-4fdd-b4b8-bf4137b58b43
                        original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/165510/gC2VLTdw6NtD8xW19UlQJY719AZCYK-metaRnVqaXlhbWEtU0QxLXZvdWNoZXIucG5n-.png'
                        order: null
                        custom_properties:
                          width: 1035
                          height: 339
                          is_cover: false
                        extension: png
                        size: 273337
                      vertical_banner:
                        name: Fujiyama-SD1
                        file_name: gQaUy2udVCp1MgDfOnfV1BUhglBWiT-metaRnVqaXlhbWEtU0QxLnBuZw==-.png
                        uuid: b78c7a04-a0b5-4da8-9c30-57baaa7805e1
                        original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/165509/gQaUy2udVCp1MgDfOnfV1BUhglBWiT-metaRnVqaXlhbWEtU0QxLnBuZw%3D%3D-.png'
                        order: null
                        custom_properties:
                          width: 1080
                          height: 1440
                          is_cover: false
                        extension: png
                        size: 1609609
                      interactions: []
                      location: null
                      count:
                        likes: 0
                        share: 0
                        bookmarks: 0
                        views: 8
                      categories: []
                      created_at: '2024-12-26T06:03:26.000000Z'
                      updated_at: '2025-01-05T16:04:19.000000Z'
                      created_at_diff: '2 weeks ago'
                      updated_at_diff: '4 days ago'
                    -
                      id: 7684
                      sku: Scoopsy001-68-C001-4920
                      merchant_id: 55
                      store:
                        id: null
                        name: null
                      stores:
                        -
                          id: 8
                          name: Scoopsy
                          address: '6A, Jalan SS14/1, SS14, Subang Jaya'
                          ratings: '4.6'
                          total_ratings: 10
                          address_postcode: '47500'
                          lat: '3.0727664'
                          lng: '101.5889151'
                          is_hq: 1
                          state:
                            id: 12
                            country_id: 131
                            code: SGR
                            name: Selangor
                            name_translation: '{"en": "Selangor", "zh": "雪兰莪"}'
                            created_at: '2023-04-09T23:44:27.000000Z'
                            updated_at: '2023-04-09T23:44:27.000000Z'
                          country:
                            id: 131
                            code: MY
                            name: Malaysia
                            phone_code: '60'
                      logo: null
                      merchant:
                        id: 55
                        logo: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/116401/XGaPMS05MpJ1ULpy9IdFNQ3gFboic1-metaTWVyY2hhbnQgTG9nbyBwbGFjZW1lbnQgKDMpLnBuZw%3D%3D-.png'
                        brand_name: Scoopsy
                        business_name: 'Leading Ovis Sdn Bhd'
                        business_phone_no: '600356131290'
                        user:
                          id: 8048
                          name: Scoopsy
                      name: 'Classic Single Scoop Waffle'
                      is_flash: 0
                      description: "甜品控们看过来！\n\n🧇单勺冰淇淋华夫饼\n一片华夫饼，再来一勺冰淇淋\n酥脆的外壳搭配爽口的甜度\n有谁不爱呢😋\n\nScoopsy\n☎️03-5613 1290\n📍6A, Jalan SS 14/1, Ss 14, 47500 Subang Jaya, Selangor\n🕒1pm - 10pm\n"
                      fine_print: ' 此优惠券仅限堂食（Dine-in）。'
                      redemption_policy: "1. 此优惠券仅限堂食（Dine-in）。\n2. 此优惠券自成功购买当天起的 30天内有效，有效期的最后一天截止时间为23:59。\n3. 此优惠不可与其他促销和折扣叠加使用，包括会员折扣。\n4. 此优惠券不可兑换成现金。\n5. 此优惠券仅通过 FUNHUB App 兑换和使用。\n6. 此优惠券仅限一次交易。\n7. 此优惠券仅限用于一个账单。\n8. 如发现任何违规获取优惠券的情况，经核实后将予以作废处理\n"
                      cancellation_policy: "1. 已兑换的优惠券不可随意取消、更改或退款。\n2. 已兑换的优惠券一经使用后，不可更改或取消。\n3. 已兑换的优惠券仅限有效期内使用，逾期则作废且不可进行退款。\n4. 若您发现他人盗用您的账号并使用此优惠券，请联系客服申请退还饭盒。\n5. 若您去消费时，因技术情况无法使用此优惠券，请联系客服申请退还饭盒。\n"
                      point_cost: 1
                      point_fiat_price: 15.7
                      discounted_point_fiat_price: 5
                      fiat_price: 15.7
                      discounted_fiat_price: 10
                      default_purchase_method: point
                      available_at: '2025-01-06 00:00:00'
                      available_until: '2025-01-08 23:59:00'
                      expiry_days: 30
                      quantity: 5
                      media:
                        -
                          name: scoopsy-SD-chi
                          file_name: IQMCsFJ6Ykz5OBBFZWdJ7Qfdx965Uu-metac2Nvb3BzeS1TRC1jaGkucG5n-.png
                          uuid: 51bc066e-6277-4195-a8c8-78d91917d9f7
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161490/IQMCsFJ6Ykz5OBBFZWdJ7Qfdx965Uu-metac2Nvb3BzeS1TRC1jaGkucG5n-.png'
                          order: null
                          custom_properties:
                            width: 1080
                            height: 1441
                            is_cover: false
                          extension: png
                          size: 1769027
                        -
                          name: scoopsy-SD_voucher
                          file_name: xjlI6DHMTyqnPg6dAa60bF7oMK6AX6-metac2Nvb3BzeS1TRF92b3VjaGVyLnBuZw==-.png
                          uuid: 0039ec24-8b05-4331-b241-cf9a5ec5160a
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161491/xjlI6DHMTyqnPg6dAa60bF7oMK6AX6-metac2Nvb3BzeS1TRF92b3VjaGVyLnBuZw%3D%3D-.png'
                          order: null
                          custom_properties:
                            width: 1042
                            height: 338
                            is_cover: false
                          extension: png
                          size: 297570
                      horizontal_banner:
                        name: scoopsy-SD_voucher
                        file_name: xjlI6DHMTyqnPg6dAa60bF7oMK6AX6-metac2Nvb3BzeS1TRF92b3VjaGVyLnBuZw==-.png
                        uuid: 0039ec24-8b05-4331-b241-cf9a5ec5160a
                        original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161491/xjlI6DHMTyqnPg6dAa60bF7oMK6AX6-metac2Nvb3BzeS1TRF92b3VjaGVyLnBuZw%3D%3D-.png'
                        order: null
                        custom_properties:
                          width: 1042
                          height: 338
                          is_cover: false
                        extension: png
                        size: 297570
                      vertical_banner:
                        name: scoopsy-SD-chi
                        file_name: IQMCsFJ6Ykz5OBBFZWdJ7Qfdx965Uu-metac2Nvb3BzeS1TRC1jaGkucG5n-.png
                        uuid: 51bc066e-6277-4195-a8c8-78d91917d9f7
                        original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161490/IQMCsFJ6Ykz5OBBFZWdJ7Qfdx965Uu-metac2Nvb3BzeS1TRC1jaGkucG5n-.png'
                        order: null
                        custom_properties:
                          width: 1080
                          height: 1441
                          is_cover: false
                        extension: png
                        size: 1769027
                      interactions: []
                      location: null
                      count:
                        likes: 0
                        share: 0
                        bookmarks: 0
                        views: 3
                      categories: []
                      created_at: '2024-12-14T08:19:28.000000Z'
                      updated_at: '2025-01-07T04:20:11.000000Z'
                      created_at_diff: '3 weeks ago'
                      updated_at_diff: '2 days ago'
                    -
                      id: 7629
                      sku: SoYoung001-49-C001-4865
                      merchant_id: 264
                      store:
                        id: null
                        name: null
                      stores:
                        -
                          id: 3958
                          name: 'SoYoung Malaysia 濃い豆乳 @ Seri Kembangan'
                          address: 'Jalan Simfoni 1'
                          ratings: '0.0'
                          total_ratings: 0
                          address_postcode: '43300'
                          lat: '3.02655830'
                          lng: '101.75286160'
                          is_hq: 0
                          state:
                            id: 12
                            country_id: 131
                            code: SGR
                            name: Selangor
                            name_translation: '{"en": "Selangor", "zh": "雪兰莪"}'
                            created_at: '2023-04-09T23:44:27.000000Z'
                            updated_at: '2023-04-09T23:44:27.000000Z'
                          country:
                            id: 131
                            code: MY
                            name: Malaysia
                            phone_code: '60'
                        -
                          id: 3957
                          name: 'SoYoung Malaysia 濃い豆乳 @ TRX'
                          address: 'Grand Staircase'
                          ratings: '5.0'
                          total_ratings: 1
                          address_postcode: '55100'
                          lat: '3.14257190'
                          lng: '101.71802400'
                          is_hq: 0
                          state:
                            id: 14
                            country_id: 131
                            code: KUL
                            name: 'W.P. Kuala Lumpur'
                            name_translation: '{"en": "W.P. Kuala Lumpur", "zh": "吉隆坡"}'
                            created_at: '2023-04-09T23:44:27.000000Z'
                            updated_at: '2023-04-09T23:44:27.000000Z'
                          country:
                            id: 131
                            code: MY
                            name: Malaysia
                            phone_code: '60'
                      logo: null
                      merchant:
                        id: 264
                        logo: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/160736/ph0wWwvzoiioVs2u0NpNPgEX9TipZ0-metaTWVyY2hhbnQgTG9nbyBwbGFjZW1lbnQgKDc2KS5wbmc%3D-.png'
                        brand_name: 'SoYoung 濃い豆乳'
                        business_name: 'MOS F&B MARKETING SDN BHD '
                        business_phone_no: 012-2216809
                        user:
                          id: 27919
                          name: 'SoYoung 濃い豆乳'
                      name: 'SoYoung - 冬季の初雪·濃豆乳雪花冰'
                      is_flash: 0
                      description: "❄️ SoYoung | 冬季の初雪·濃豆乳雪花冰 ❄️\n Snowy Shirayuki (Japanese Soymilk Bingsu)\n✨  以豆浆为基底的纯净雪花，焕发活力，令人心旷神怡。\n 精选日本豆乳，打造成如雪花般细腻轻盈的刨冰，清凉的口感与浓郁的豆香在舌尖完美融合，像冬季的第一场雪，轻柔和沁人心脾。\n🍧 自选三种互补的奇特配料。\n选择您最喜欢的三种配料，创造属于您自己的独特风味雪花冰：\n\n 🌟 夜明珠：Q弹爽滑，嚼出丝丝甘甜\n 🌿 嫩仙草：萦绕着淡淡的清香和清新，并带有烟熏的味道。\n 💎 水晶珍珠：晶莹剔透，淀粉魔芋耀眼夺目\n 🌰 焙烤黑芝麻：豆浆的浓郁香气与纯黑芝麻的坚果风味完美融合 \n 🍬黑糖麻薯 & 软熟赤小豆： 经典的甜味一定会俘获你的心。\n 🍠 紫芋丸子 & 冲绳紫薯丸子：软糯香甜，质地诱人\n 🍵 抹茶丸子 & 美国杏仁果：独特的茶香和坚果味，丰富了味觉感受。\n💫 每一口，都是一场冬日的甜蜜旅行。\n 冬季の初雪·濃豆乳雪花冰在马来西亚为你带来不一样的冰雪奇缘。\n🌨️Snowy Shirayuki 将您带入梦幻般的白雪仙境，这是一次让您终生难忘的甜蜜冬日之旅，只在 SoYoung Malaysia！\n\n【SoYoung】\n\n🌱SoYoung (HQ)\n📍2, Jalan Simfoni 1, Balakong, 43300 Seri Kembangan, Selangor\n🕒11am-10pm (Mon-Thurs)\n🕒11am-10:30pm (Fri-Sun)\n☎️012-518 5355\n\n🌱 SoYoung (The Exchange TRX)\n📍C.OS.05, Level Concourse, Persiaran TRX, Tun Razak Exchange, 55188 Kuala Lumpur, Wilayah Persekutuan Kuala Lumpur. \n🕒10am-10pm (Mon to Sun)\n☎️012-252 6845\n"
                      fine_print: "1. 只限店内用餐可使用\n2. 一张桌子只能兑换一份\n3. 每张优惠券1天只能兑换1次，如需兑换第二张须改日使用\n4. 此优惠券不可与其他优惠券、促销活动、折扣或特别优惠同时使用，且严禁分单\n"
                      redemption_policy: "1. 该优惠券自预订确认之日起 30 天内有效。最后一天23:59到期\n2. 优惠券不可与任何其他折扣同时使用，包括会员折扣\n3. 优惠券不可兑换现金\n4. 优惠券只能通过 FUNHUB App 兑换/使用\n5. 优惠券只能兑换一次\n6. 每张账单限用 1 张优惠券\n"
                      cancellation_policy: "1. 已兑换的优惠券不可随意取消、更改或退款。\n2. 已兑换的优惠券一经使用后，不可更改或取消。\n3. 已兑换的优惠券仅限有效期内使用，逾期则作废且不可进行退款。\n4. 若您发现他人盗用您的账号并使用此优惠券，请联系客服申请退还饭盒。\n5. 若您去消费时，因技术情况无法使用此优惠券，请联系客服申请退还饭盒。\n\n"
                      point_cost: 2
                      point_fiat_price: 19.9
                      discounted_point_fiat_price: 10
                      fiat_price: 19.9
                      discounted_fiat_price: 15
                      default_purchase_method: point
                      available_at: '2025-01-06 00:00:00'
                      available_until: '2025-01-09 23:59:59'
                      expiry_days: 30
                      quantity: 5
                      media:
                        -
                          name: SoYoung-SD1
                          file_name: 5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png
                          uuid: 930a8eaa-cdb9-48ec-a71c-29b572ff3e18
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161195/5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png'
                          order: null
                          custom_properties:
                            width: 1080
                            height: 1440
                            is_cover: false
                          extension: png
                          size: 1746762
                        -
                          name: SoYoung-SD1-VOUCHER
                          file_name: s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc=-.png
                          uuid: 59944e2b-2915-4453-be56-e6a4b3f88e63
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161197/s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc%3D-.png'
                          order: null
                          custom_properties:
                            width: 1034
                            height: 331
                            is_cover: false
                          extension: png
                          size: 257340
                      horizontal_banner:
                        name: SoYoung-SD1-VOUCHER
                        file_name: s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc=-.png
                        uuid: 59944e2b-2915-4453-be56-e6a4b3f88e63
                        original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161197/s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc%3D-.png'
                        order: null
                        custom_properties:
                          width: 1034
                          height: 331
                          is_cover: false
                        extension: png
                        size: 257340
                      vertical_banner:
                        name: SoYoung-SD1
                        file_name: 5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png
                        uuid: 930a8eaa-cdb9-48ec-a71c-29b572ff3e18
                        original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161195/5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png'
                        order: null
                        custom_properties:
                          width: 1080
                          height: 1440
                          is_cover: false
                        extension: png
                        size: 1746762
                      interactions: []
                      location: null
                      count:
                        likes: 0
                        share: 0
                        bookmarks: 0
                        views: 3
                      categories: []
                      created_at: '2024-12-13T03:53:55.000000Z'
                      updated_at: '2025-01-05T16:04:02.000000Z'
                      created_at_diff: '3 weeks ago'
                      updated_at_diff: '4 days ago'
                  links:
                    first: 'https://funhub-mobile-backend.test/api/v1/public_offers?page=1'
                    last: 'https://funhub-mobile-backend.test/api/v1/public_offers?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://funhub-mobile-backend.test/api/v1/public_offers?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'https://funhub-mobile-backend.test/api/v1/public_offers'
                    per_page: 10
                    to: 4
                    total: 4
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 5490
                        sku: ItoJapanese002-50-C001-2726
                        merchant_id: 137
                        store:
                          id: null
                          name: null
                        stores:
                          -
                            id: 793
                            name: 'Ito Japanese Restaurant'
                            address: '33, Jalan Puteri 4/8, Puchong, 雪兰莪州, Malaysia'
                            ratings: '4.7'
                            total_ratings: 3
                            address_postcode: '47100'
                            lat: '3.01609720'
                            lng: '101.61295420'
                            is_hq: 0
                            state:
                              id: 26
                              country_id: 131
                              code: CUSTOMIYz
                              name: 雪兰莪州
                              name_translation: '{"en": "雪兰莪州", "zh": ""}'
                              created_at: '2023-10-10T06:53:55.000000Z'
                              updated_at: '2023-10-10T06:53:55.000000Z'
                            country:
                              id: 131
                              code: MY
                              name: Malaysia
                              phone_code: '60'
                        logo: null
                        merchant:
                          id: 137
                          logo: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/142295/NHODBz3pgu217g1QQ8kMBK1sNBMpUX-metaTWVyY2hhbnQgTG9nbyBwbGFjZW1lbnRfMjAyNDEwMThfMTYyNzE1XzAwMDAucG5n-.png'
                          brand_name: 'Ito Japanese Restaurant'
                          business_name: 'Ito Japanese Restaurant Sdn Bhd'
                          business_phone_no: '0123567996'
                          user:
                            id: 21499
                            name: 'Ito Japanese Restaurant'
                        name: 'ITO Japanese Restaurant - RM10 现金优惠券'
                        is_flash: 0
                        description: "✨Puchong 区的日式料理屋 ✨\n平价｜服务好｜食物精致美味\n\n必吃 🤤 \n✅ Avocado Salad \n✅ Uni Tofu Nabe \n✅ Salmon Volcano\n✅ Ika Geso Spicy Age\n✅ Avocado Truffle Miso Gratin\n\n🙋 这里食物的选择非常多 \n而且环境舒适卫生 🥹 \n超级适合和家人或朋友一起聚餐哦 👍 \n\n居住在Puchong 或在这里的上班族 \n真的很值得推荐一试！😍 \n\n\n\n🎎【ITO Japanese Restaurant】🎎\n\n📍 G-35, Jalan Puteri 4/8, Bandar Puteri, 47100 Puchong, Selangor\n☎️  03-8052 7996\n⏰Monday to Sunday 11:30am -2:30pm, 5:30pm – 10:30pm\n\n"
                        fine_print: "1. 优惠券只限用于堂食(Dine In Only)\n2. 兑换此优惠券的最低消费要求为 RM20\n3. 每张优惠券1天只能兑换1次，如需兑换第二张须改日使用\n4. 此优惠券不可与其他优惠券、促销活动、折扣或特别优惠同时使用，且严禁分单\n"
                        redemption_policy: "1. 该优惠券自预订确认之日起 30 天内有效。最后一天23:59到期\n2. 优惠券不可与任何其他折扣同时使用，包括会员折扣\n3. 优惠券不可兑换现金\n4. 优惠券只能通过 FUNHUB App 兑换/使用\n5. 优惠券只能兑换一次\n6. 每张账单限用 1 张优惠券\n"
                        cancellation_policy: "1. 已兑换的优惠券不可随意取消、更改或退款。\n2. 已兑换的优惠券一经使用后，不可更改或取消。\n3. 已兑换的优惠券仅限有效期内使用，逾期则作废且不可进行退款。\n4. 若您发现他人盗用您的账号并使用此优惠券，请联系客服申请退还饭盒。\n5. 若您去消费时，因技术情况无法使用此优惠券，请联系客服申请退还饭盒。\n"
                        point_cost: 1
                        point_fiat_price: 10
                        discounted_point_fiat_price: 5
                        fiat_price: 10
                        discounted_fiat_price: 8
                        default_purchase_method: point
                        available_at: '2025-01-04 00:00:00'
                        available_until: '2025-01-07 23:59:59'
                        expiry_days: 30
                        quantity: 5
                        media:
                          -
                            name: ITO-SD1
                            file_name: wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc=-.png
                            uuid: d6675a50-d9a3-4767-90c4-3df171a16615
                            original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152259/wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc%3D-.png'
                            order: null
                            custom_properties:
                              width: 1080
                              height: 1440
                              is_cover: false
                            extension: png
                            size: 2170208
                          -
                            name: ITO-SD1-banner
                            file_name: B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png
                            uuid: 4949a680-0c85-41e0-92c4-0ac064dfcb5e
                            original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152260/B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png'
                            order: null
                            custom_properties:
                              width: 1035
                              height: 339
                              is_cover: false
                            extension: png
                            size: 300718
                        horizontal_banner:
                          name: ITO-SD1-banner
                          file_name: B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png
                          uuid: 4949a680-0c85-41e0-92c4-0ac064dfcb5e
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152260/B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png'
                          order: null
                          custom_properties:
                            width: 1035
                            height: 339
                            is_cover: false
                          extension: png
                          size: 300718
                        vertical_banner:
                          name: ITO-SD1
                          file_name: wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc=-.png
                          uuid: d6675a50-d9a3-4767-90c4-3df171a16615
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152259/wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc%3D-.png'
                          order: null
                          custom_properties:
                            width: 1080
                            height: 1440
                            is_cover: false
                          extension: png
                          size: 2170208
                        interactions:
                          -
                            id: 42954
                            user:
                              id: 6696
                              name: 'Elise 🌸'
                              avatar: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/105466/image_cropper_0A4C9DC4-A57D-4D51-B8A2-963DB67B09A4-10796-00000291432E54A1.jpg'
                            type: 3
                            created_at: '2025-01-06T07:50:49.000000Z'
                            updated_at: '2025-01-06T07:50:49.000000Z'
                            share_url: null
                            created_at_diff: '3 days ago'
                            updated_at_diff: '3 days ago'
                        location: null
                        count:
                          likes: 0
                          share: 1
                          bookmarks: 0
                          views: 29
                        categories: []
                        created_at: '2024-11-21T03:26:28.000000Z'
                        updated_at: '2025-01-03T16:02:49.000000Z'
                        created_at_diff: '1 month ago'
                        updated_at_diff: '6 days ago'
                      -
                        id: 8488
                        sku: FujiyamaJapanese003-54-C001-5668
                        merchant_id: 130
                        store:
                          id: null
                          name: null
                        stores:
                          -
                            id: 3571
                            name: 'Fujiyama 101 Japanese Restaurant'
                            address: '26, JALAN RUGBI 13/30, SEKSYEN 13 TADISMA BUSINESS PARK Shah Alam, 40100 Petaling Jaya, Selangor'
                            ratings: '0.0'
                            total_ratings: 0
                            address_postcode: '40100'
                            lat: '3.0884927'
                            lng: '101.5439374'
                            is_hq: 0
                            state:
                              id: 12
                              country_id: 131
                              code: SGR
                              name: Selangor
                              name_translation: '{"en": "Selangor", "zh": "雪兰莪"}'
                              created_at: '2023-04-09T23:44:27.000000Z'
                              updated_at: '2023-04-09T23:44:27.000000Z'
                            country:
                              id: 131
                              code: MY
                              name: Malaysia
                              phone_code: '60'
                        logo: null
                        merchant:
                          id: 130
                          logo: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/141931/JMGJibDf7EsKVmB3BMYVcgC3FYYaKL-metaTG9nbyAoMSkuanBn-.jpg'
                          brand_name: ' FujiYama 101 Japanese Restaurant '
                          business_name: 'Fujiyama Japanese Restaurant'
                          business_phone_no: '0168991900'
                          user:
                            id: 21453
                            name: ' FujiYama 101'
                        name: 'Salmon Belly Osaka Rolls'
                        is_flash: 0
                        description: "Chef Yama 是一位拥有超过35年经验的寿司大师 👏\n\n🙋 哪里可以见到Chef Yama？\n👉 Fujiyama Japanese Restaurant 101 \n\n👉 店里必吃的招牌 \n🍣Salmon Belly Osaka Rolls 🍣\n\n内层： \n🍣 辣味三文鱼 \n🥑 牛油果 \n🥒 黄瓜和墨西哥辣椒\n\n外层： \n🍣 三文鱼肚 \n🧄 蒜 \n🧅 洋葱鱼子酱\n\n最后的点缀： \n✨ 轻轻炙烤后，再配上Chef Yama 的招牌辣味蒜蓉酱\n\n\n每一片厚度均匀的三文鱼 \n都是老板经过三十五年的厨艺，精心打磨而成 🔪 \n一口入嘴， 让人按耐不住想再来一片的念头 😋 \n\n\n⛰️【Fujiyama Japanese Restaurant 101】⛰️\n\n📍26, JALAN RUGBI 13/30, SEKSYEN 13 TADISMA BUSINESS PARK Shah Alam, 40100 Petaling Jaya, Selangor\n☎️ 03-5524 3634\n⏰Monday to Sunday 11am -11pm\n⚠️ 星期五，六和日需预约\n\n"
                        fine_print: "1. 优惠券只限用于堂食(Dine In Only)\n2. 需消费最低 RM100 才能使用此优惠券\n3. 星期五，六和日需提前预约\n4. 每张优惠券1天只能兑换1次，如需兑换第二张须改日使用\n5. 此优惠券不可与其他优惠券、促销活动、折扣或特别优惠同时使用，且严禁分单\n"
                        redemption_policy: "1. 该优惠券自预订确认之日起 30 天内有效。最后一天23:59到期\n2. 优惠券不可与任何其他折扣同时使用，包括会员折扣\n3. 优惠券不可兑换现金\n4. 优惠券只能通过 FUNHUB App 兑换/使用\n5. 优惠券只能兑换一次\n6. 每张账单限用 1 张优惠券\n"
                        cancellation_policy: "1. 已兑换的优惠券不可随意取消、更改或退款。\n2. 已兑换的优惠券一经使用后，不可更改或取消。\n3. 已兑换的优惠券仅限有效期内使用，逾期则作废且不可进行退款。\n4. 若您发现他人盗用您的账号并使用此优惠券，请联系客服申请退还饭盒。\n5. 若您去消费时，因技术情况无法使用此优惠券，请联系客服申请退还饭盒。\n"
                        point_cost: 4
                        point_fiat_price: 43.8
                        discounted_point_fiat_price: 20
                        fiat_price: 43.8
                        discounted_fiat_price: 35
                        default_purchase_method: point
                        available_at: '2025-01-06 00:00:00'
                        available_until: '2025-01-08 23:59:59'
                        expiry_days: 30
                        quantity: 5
                        media:
                          -
                            name: Fujiyama-SD1
                            file_name: gQaUy2udVCp1MgDfOnfV1BUhglBWiT-metaRnVqaXlhbWEtU0QxLnBuZw==-.png
                            uuid: b78c7a04-a0b5-4da8-9c30-57baaa7805e1
                            original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/165509/gQaUy2udVCp1MgDfOnfV1BUhglBWiT-metaRnVqaXlhbWEtU0QxLnBuZw%3D%3D-.png'
                            order: null
                            custom_properties:
                              width: 1080
                              height: 1440
                              is_cover: false
                            extension: png
                            size: 1609609
                          -
                            name: Fujiyama-SD1-voucher
                            file_name: gC2VLTdw6NtD8xW19UlQJY719AZCYK-metaRnVqaXlhbWEtU0QxLXZvdWNoZXIucG5n-.png
                            uuid: 05c5b576-b6ee-4fdd-b4b8-bf4137b58b43
                            original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/165510/gC2VLTdw6NtD8xW19UlQJY719AZCYK-metaRnVqaXlhbWEtU0QxLXZvdWNoZXIucG5n-.png'
                            order: null
                            custom_properties:
                              width: 1035
                              height: 339
                              is_cover: false
                            extension: png
                            size: 273337
                        horizontal_banner:
                          name: Fujiyama-SD1-voucher
                          file_name: gC2VLTdw6NtD8xW19UlQJY719AZCYK-metaRnVqaXlhbWEtU0QxLXZvdWNoZXIucG5n-.png
                          uuid: 05c5b576-b6ee-4fdd-b4b8-bf4137b58b43
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/165510/gC2VLTdw6NtD8xW19UlQJY719AZCYK-metaRnVqaXlhbWEtU0QxLXZvdWNoZXIucG5n-.png'
                          order: null
                          custom_properties:
                            width: 1035
                            height: 339
                            is_cover: false
                          extension: png
                          size: 273337
                        vertical_banner:
                          name: Fujiyama-SD1
                          file_name: gQaUy2udVCp1MgDfOnfV1BUhglBWiT-metaRnVqaXlhbWEtU0QxLnBuZw==-.png
                          uuid: b78c7a04-a0b5-4da8-9c30-57baaa7805e1
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/165509/gQaUy2udVCp1MgDfOnfV1BUhglBWiT-metaRnVqaXlhbWEtU0QxLnBuZw%3D%3D-.png'
                          order: null
                          custom_properties:
                            width: 1080
                            height: 1440
                            is_cover: false
                          extension: png
                          size: 1609609
                        interactions: []
                        location: null
                        count:
                          likes: 0
                          share: 0
                          bookmarks: 0
                          views: 8
                        categories: []
                        created_at: '2024-12-26T06:03:26.000000Z'
                        updated_at: '2025-01-05T16:04:19.000000Z'
                        created_at_diff: '2 weeks ago'
                        updated_at_diff: '4 days ago'
                      -
                        id: 7684
                        sku: Scoopsy001-68-C001-4920
                        merchant_id: 55
                        store:
                          id: null
                          name: null
                        stores:
                          -
                            id: 8
                            name: Scoopsy
                            address: '6A, Jalan SS14/1, SS14, Subang Jaya'
                            ratings: '4.6'
                            total_ratings: 10
                            address_postcode: '47500'
                            lat: '3.0727664'
                            lng: '101.5889151'
                            is_hq: 1
                            state:
                              id: 12
                              country_id: 131
                              code: SGR
                              name: Selangor
                              name_translation: '{"en": "Selangor", "zh": "雪兰莪"}'
                              created_at: '2023-04-09T23:44:27.000000Z'
                              updated_at: '2023-04-09T23:44:27.000000Z'
                            country:
                              id: 131
                              code: MY
                              name: Malaysia
                              phone_code: '60'
                        logo: null
                        merchant:
                          id: 55
                          logo: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/116401/XGaPMS05MpJ1ULpy9IdFNQ3gFboic1-metaTWVyY2hhbnQgTG9nbyBwbGFjZW1lbnQgKDMpLnBuZw%3D%3D-.png'
                          brand_name: Scoopsy
                          business_name: 'Leading Ovis Sdn Bhd'
                          business_phone_no: '600356131290'
                          user:
                            id: 8048
                            name: Scoopsy
                        name: 'Classic Single Scoop Waffle'
                        is_flash: 0
                        description: "甜品控们看过来！\n\n🧇单勺冰淇淋华夫饼\n一片华夫饼，再来一勺冰淇淋\n酥脆的外壳搭配爽口的甜度\n有谁不爱呢😋\n\nScoopsy\n☎️03-5613 1290\n📍6A, Jalan SS 14/1, Ss 14, 47500 Subang Jaya, Selangor\n🕒1pm - 10pm\n"
                        fine_print: ' 此优惠券仅限堂食（Dine-in）。'
                        redemption_policy: "1. 此优惠券仅限堂食（Dine-in）。\n2. 此优惠券自成功购买当天起的 30天内有效，有效期的最后一天截止时间为23:59。\n3. 此优惠不可与其他促销和折扣叠加使用，包括会员折扣。\n4. 此优惠券不可兑换成现金。\n5. 此优惠券仅通过 FUNHUB App 兑换和使用。\n6. 此优惠券仅限一次交易。\n7. 此优惠券仅限用于一个账单。\n8. 如发现任何违规获取优惠券的情况，经核实后将予以作废处理\n"
                        cancellation_policy: "1. 已兑换的优惠券不可随意取消、更改或退款。\n2. 已兑换的优惠券一经使用后，不可更改或取消。\n3. 已兑换的优惠券仅限有效期内使用，逾期则作废且不可进行退款。\n4. 若您发现他人盗用您的账号并使用此优惠券，请联系客服申请退还饭盒。\n5. 若您去消费时，因技术情况无法使用此优惠券，请联系客服申请退还饭盒。\n"
                        point_cost: 1
                        point_fiat_price: 15.7
                        discounted_point_fiat_price: 5
                        fiat_price: 15.7
                        discounted_fiat_price: 10
                        default_purchase_method: point
                        available_at: '2025-01-06 00:00:00'
                        available_until: '2025-01-08 23:59:00'
                        expiry_days: 30
                        quantity: 5
                        media:
                          -
                            name: scoopsy-SD-chi
                            file_name: IQMCsFJ6Ykz5OBBFZWdJ7Qfdx965Uu-metac2Nvb3BzeS1TRC1jaGkucG5n-.png
                            uuid: 51bc066e-6277-4195-a8c8-78d91917d9f7
                            original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161490/IQMCsFJ6Ykz5OBBFZWdJ7Qfdx965Uu-metac2Nvb3BzeS1TRC1jaGkucG5n-.png'
                            order: null
                            custom_properties:
                              width: 1080
                              height: 1441
                              is_cover: false
                            extension: png
                            size: 1769027
                          -
                            name: scoopsy-SD_voucher
                            file_name: xjlI6DHMTyqnPg6dAa60bF7oMK6AX6-metac2Nvb3BzeS1TRF92b3VjaGVyLnBuZw==-.png
                            uuid: 0039ec24-8b05-4331-b241-cf9a5ec5160a
                            original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161491/xjlI6DHMTyqnPg6dAa60bF7oMK6AX6-metac2Nvb3BzeS1TRF92b3VjaGVyLnBuZw%3D%3D-.png'
                            order: null
                            custom_properties:
                              width: 1042
                              height: 338
                              is_cover: false
                            extension: png
                            size: 297570
                        horizontal_banner:
                          name: scoopsy-SD_voucher
                          file_name: xjlI6DHMTyqnPg6dAa60bF7oMK6AX6-metac2Nvb3BzeS1TRF92b3VjaGVyLnBuZw==-.png
                          uuid: 0039ec24-8b05-4331-b241-cf9a5ec5160a
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161491/xjlI6DHMTyqnPg6dAa60bF7oMK6AX6-metac2Nvb3BzeS1TRF92b3VjaGVyLnBuZw%3D%3D-.png'
                          order: null
                          custom_properties:
                            width: 1042
                            height: 338
                            is_cover: false
                          extension: png
                          size: 297570
                        vertical_banner:
                          name: scoopsy-SD-chi
                          file_name: IQMCsFJ6Ykz5OBBFZWdJ7Qfdx965Uu-metac2Nvb3BzeS1TRC1jaGkucG5n-.png
                          uuid: 51bc066e-6277-4195-a8c8-78d91917d9f7
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161490/IQMCsFJ6Ykz5OBBFZWdJ7Qfdx965Uu-metac2Nvb3BzeS1TRC1jaGkucG5n-.png'
                          order: null
                          custom_properties:
                            width: 1080
                            height: 1441
                            is_cover: false
                          extension: png
                          size: 1769027
                        interactions: []
                        location: null
                        count:
                          likes: 0
                          share: 0
                          bookmarks: 0
                          views: 3
                        categories: []
                        created_at: '2024-12-14T08:19:28.000000Z'
                        updated_at: '2025-01-07T04:20:11.000000Z'
                        created_at_diff: '3 weeks ago'
                        updated_at_diff: '2 days ago'
                      -
                        id: 7629
                        sku: SoYoung001-49-C001-4865
                        merchant_id: 264
                        store:
                          id: null
                          name: null
                        stores:
                          -
                            id: 3958
                            name: 'SoYoung Malaysia 濃い豆乳 @ Seri Kembangan'
                            address: 'Jalan Simfoni 1'
                            ratings: '0.0'
                            total_ratings: 0
                            address_postcode: '43300'
                            lat: '3.02655830'
                            lng: '101.75286160'
                            is_hq: 0
                            state:
                              id: 12
                              country_id: 131
                              code: SGR
                              name: Selangor
                              name_translation: '{"en": "Selangor", "zh": "雪兰莪"}'
                              created_at: '2023-04-09T23:44:27.000000Z'
                              updated_at: '2023-04-09T23:44:27.000000Z'
                            country:
                              id: 131
                              code: MY
                              name: Malaysia
                              phone_code: '60'
                          -
                            id: 3957
                            name: 'SoYoung Malaysia 濃い豆乳 @ TRX'
                            address: 'Grand Staircase'
                            ratings: '5.0'
                            total_ratings: 1
                            address_postcode: '55100'
                            lat: '3.14257190'
                            lng: '101.71802400'
                            is_hq: 0
                            state:
                              id: 14
                              country_id: 131
                              code: KUL
                              name: 'W.P. Kuala Lumpur'
                              name_translation: '{"en": "W.P. Kuala Lumpur", "zh": "吉隆坡"}'
                              created_at: '2023-04-09T23:44:27.000000Z'
                              updated_at: '2023-04-09T23:44:27.000000Z'
                            country:
                              id: 131
                              code: MY
                              name: Malaysia
                              phone_code: '60'
                        logo: null
                        merchant:
                          id: 264
                          logo: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/160736/ph0wWwvzoiioVs2u0NpNPgEX9TipZ0-metaTWVyY2hhbnQgTG9nbyBwbGFjZW1lbnQgKDc2KS5wbmc%3D-.png'
                          brand_name: 'SoYoung 濃い豆乳'
                          business_name: 'MOS F&B MARKETING SDN BHD '
                          business_phone_no: 012-2216809
                          user:
                            id: 27919
                            name: 'SoYoung 濃い豆乳'
                        name: 'SoYoung - 冬季の初雪·濃豆乳雪花冰'
                        is_flash: 0
                        description: "❄️ SoYoung | 冬季の初雪·濃豆乳雪花冰 ❄️\n Snowy Shirayuki (Japanese Soymilk Bingsu)\n✨  以豆浆为基底的纯净雪花，焕发活力，令人心旷神怡。\n 精选日本豆乳，打造成如雪花般细腻轻盈的刨冰，清凉的口感与浓郁的豆香在舌尖完美融合，像冬季的第一场雪，轻柔和沁人心脾。\n🍧 自选三种互补的奇特配料。\n选择您最喜欢的三种配料，创造属于您自己的独特风味雪花冰：\n\n 🌟 夜明珠：Q弹爽滑，嚼出丝丝甘甜\n 🌿 嫩仙草：萦绕着淡淡的清香和清新，并带有烟熏的味道。\n 💎 水晶珍珠：晶莹剔透，淀粉魔芋耀眼夺目\n 🌰 焙烤黑芝麻：豆浆的浓郁香气与纯黑芝麻的坚果风味完美融合 \n 🍬黑糖麻薯 & 软熟赤小豆： 经典的甜味一定会俘获你的心。\n 🍠 紫芋丸子 & 冲绳紫薯丸子：软糯香甜，质地诱人\n 🍵 抹茶丸子 & 美国杏仁果：独特的茶香和坚果味，丰富了味觉感受。\n💫 每一口，都是一场冬日的甜蜜旅行。\n 冬季の初雪·濃豆乳雪花冰在马来西亚为你带来不一样的冰雪奇缘。\n🌨️Snowy Shirayuki 将您带入梦幻般的白雪仙境，这是一次让您终生难忘的甜蜜冬日之旅，只在 SoYoung Malaysia！\n\n【SoYoung】\n\n🌱SoYoung (HQ)\n📍2, Jalan Simfoni 1, Balakong, 43300 Seri Kembangan, Selangor\n🕒11am-10pm (Mon-Thurs)\n🕒11am-10:30pm (Fri-Sun)\n☎️012-518 5355\n\n🌱 SoYoung (The Exchange TRX)\n📍C.OS.05, Level Concourse, Persiaran TRX, Tun Razak Exchange, 55188 Kuala Lumpur, Wilayah Persekutuan Kuala Lumpur. \n🕒10am-10pm (Mon to Sun)\n☎️012-252 6845\n"
                        fine_print: "1. 只限店内用餐可使用\n2. 一张桌子只能兑换一份\n3. 每张优惠券1天只能兑换1次，如需兑换第二张须改日使用\n4. 此优惠券不可与其他优惠券、促销活动、折扣或特别优惠同时使用，且严禁分单\n"
                        redemption_policy: "1. 该优惠券自预订确认之日起 30 天内有效。最后一天23:59到期\n2. 优惠券不可与任何其他折扣同时使用，包括会员折扣\n3. 优惠券不可兑换现金\n4. 优惠券只能通过 FUNHUB App 兑换/使用\n5. 优惠券只能兑换一次\n6. 每张账单限用 1 张优惠券\n"
                        cancellation_policy: "1. 已兑换的优惠券不可随意取消、更改或退款。\n2. 已兑换的优惠券一经使用后，不可更改或取消。\n3. 已兑换的优惠券仅限有效期内使用，逾期则作废且不可进行退款。\n4. 若您发现他人盗用您的账号并使用此优惠券，请联系客服申请退还饭盒。\n5. 若您去消费时，因技术情况无法使用此优惠券，请联系客服申请退还饭盒。\n\n"
                        point_cost: 2
                        point_fiat_price: 19.9
                        discounted_point_fiat_price: 10
                        fiat_price: 19.9
                        discounted_fiat_price: 15
                        default_purchase_method: point
                        available_at: '2025-01-06 00:00:00'
                        available_until: '2025-01-09 23:59:59'
                        expiry_days: 30
                        quantity: 5
                        media:
                          -
                            name: SoYoung-SD1
                            file_name: 5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png
                            uuid: 930a8eaa-cdb9-48ec-a71c-29b572ff3e18
                            original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161195/5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png'
                            order: null
                            custom_properties:
                              width: 1080
                              height: 1440
                              is_cover: false
                            extension: png
                            size: 1746762
                          -
                            name: SoYoung-SD1-VOUCHER
                            file_name: s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc=-.png
                            uuid: 59944e2b-2915-4453-be56-e6a4b3f88e63
                            original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161197/s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc%3D-.png'
                            order: null
                            custom_properties:
                              width: 1034
                              height: 331
                              is_cover: false
                            extension: png
                            size: 257340
                        horizontal_banner:
                          name: SoYoung-SD1-VOUCHER
                          file_name: s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc=-.png
                          uuid: 59944e2b-2915-4453-be56-e6a4b3f88e63
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161197/s5iwAmHwDOVz5AFIofS0uHMPkxTQW5-metaU29Zb3VuZy1TRDEtVk9VQ0hFUi5wbmc%3D-.png'
                          order: null
                          custom_properties:
                            width: 1034
                            height: 331
                            is_cover: false
                          extension: png
                          size: 257340
                        vertical_banner:
                          name: SoYoung-SD1
                          file_name: 5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png
                          uuid: 930a8eaa-cdb9-48ec-a71c-29b572ff3e18
                          original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/161195/5mxQJfrRsyawnhJ1HPFBr2RqpjNWCV-metaU29Zb3VuZy1TRDEucG5n-.png'
                          order: null
                          custom_properties:
                            width: 1080
                            height: 1440
                            is_cover: false
                          extension: png
                          size: 1746762
                        interactions: []
                        location: null
                        count:
                          likes: 0
                          share: 0
                          bookmarks: 0
                          views: 3
                        categories: []
                        created_at: '2024-12-13T03:53:55.000000Z'
                        updated_at: '2025-01-05T16:04:02.000000Z'
                        created_at_diff: '3 weeks ago'
                        updated_at_diff: '4 days ago'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 5490
                        sku:
                          type: string
                          example: ItoJapanese002-50-C001-2726
                        merchant_id:
                          type: integer
                          example: 137
                        store:
                          type: object
                          properties:
                            id:
                              type: string
                              example: null
                            name:
                              type: string
                              example: null
                        stores:
                          type: array
                          example:
                            -
                              id: 793
                              name: 'Ito Japanese Restaurant'
                              address: '33, Jalan Puteri 4/8, Puchong, 雪兰莪州, Malaysia'
                              ratings: '4.7'
                              total_ratings: 3
                              address_postcode: '47100'
                              lat: '3.01609720'
                              lng: '101.61295420'
                              is_hq: 0
                              state:
                                id: 26
                                country_id: 131
                                code: CUSTOMIYz
                                name: 雪兰莪州
                                name_translation: '{"en": "雪兰莪州", "zh": ""}'
                                created_at: '2023-10-10T06:53:55.000000Z'
                                updated_at: '2023-10-10T06:53:55.000000Z'
                              country:
                                id: 131
                                code: MY
                                name: Malaysia
                                phone_code: '60'
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 793
                              name:
                                type: string
                                example: 'Ito Japanese Restaurant'
                              address:
                                type: string
                                example: '33, Jalan Puteri 4/8, Puchong, 雪兰莪州, Malaysia'
                              ratings:
                                type: string
                                example: '4.7'
                              total_ratings:
                                type: integer
                                example: 3
                              address_postcode:
                                type: string
                                example: '47100'
                              lat:
                                type: string
                                example: '3.01609720'
                              lng:
                                type: string
                                example: '101.61295420'
                              is_hq:
                                type: integer
                                example: 0
                              state:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 26
                                  country_id:
                                    type: integer
                                    example: 131
                                  code:
                                    type: string
                                    example: CUSTOMIYz
                                  name:
                                    type: string
                                    example: 雪兰莪州
                                  name_translation:
                                    type: string
                                    example: '{"en": "雪兰莪州", "zh": ""}'
                                  created_at:
                                    type: string
                                    example: '2023-10-10T06:53:55.000000Z'
                                  updated_at:
                                    type: string
                                    example: '2023-10-10T06:53:55.000000Z'
                              country:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 131
                                  code:
                                    type: string
                                    example: MY
                                  name:
                                    type: string
                                    example: Malaysia
                                  phone_code:
                                    type: string
                                    example: '60'
                        logo:
                          type: string
                          example: null
                        merchant:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 137
                            logo:
                              type: string
                              example: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/142295/NHODBz3pgu217g1QQ8kMBK1sNBMpUX-metaTWVyY2hhbnQgTG9nbyBwbGFjZW1lbnRfMjAyNDEwMThfMTYyNzE1XzAwMDAucG5n-.png'
                            brand_name:
                              type: string
                              example: 'Ito Japanese Restaurant'
                            business_name:
                              type: string
                              example: 'Ito Japanese Restaurant Sdn Bhd'
                            business_phone_no:
                              type: string
                              example: '0123567996'
                            user:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 21499
                                name:
                                  type: string
                                  example: 'Ito Japanese Restaurant'
                        name:
                          type: string
                          example: 'ITO Japanese Restaurant - RM10 现金优惠券'
                        is_flash:
                          type: integer
                          example: 0
                        description:
                          type: string
                          example: "✨Puchong 区的日式料理屋 ✨\n平价｜服务好｜食物精致美味\n\n必吃 🤤 \n✅ Avocado Salad \n✅ Uni Tofu Nabe \n✅ Salmon Volcano\n✅ Ika Geso Spicy Age\n✅ Avocado Truffle Miso Gratin\n\n🙋 这里食物的选择非常多 \n而且环境舒适卫生 🥹 \n超级适合和家人或朋友一起聚餐哦 👍 \n\n居住在Puchong 或在这里的上班族 \n真的很值得推荐一试！😍 \n\n\n\n🎎【ITO Japanese Restaurant】🎎\n\n📍 G-35, Jalan Puteri 4/8, Bandar Puteri, 47100 Puchong, Selangor\n☎️  03-8052 7996\n⏰Monday to Sunday 11:30am -2:30pm, 5:30pm – 10:30pm\n\n"
                        fine_print:
                          type: string
                          example: "1. 优惠券只限用于堂食(Dine In Only)\n2. 兑换此优惠券的最低消费要求为 RM20\n3. 每张优惠券1天只能兑换1次，如需兑换第二张须改日使用\n4. 此优惠券不可与其他优惠券、促销活动、折扣或特别优惠同时使用，且严禁分单\n"
                        redemption_policy:
                          type: string
                          example: "1. 该优惠券自预订确认之日起 30 天内有效。最后一天23:59到期\n2. 优惠券不可与任何其他折扣同时使用，包括会员折扣\n3. 优惠券不可兑换现金\n4. 优惠券只能通过 FUNHUB App 兑换/使用\n5. 优惠券只能兑换一次\n6. 每张账单限用 1 张优惠券\n"
                        cancellation_policy:
                          type: string
                          example: "1. 已兑换的优惠券不可随意取消、更改或退款。\n2. 已兑换的优惠券一经使用后，不可更改或取消。\n3. 已兑换的优惠券仅限有效期内使用，逾期则作废且不可进行退款。\n4. 若您发现他人盗用您的账号并使用此优惠券，请联系客服申请退还饭盒。\n5. 若您去消费时，因技术情况无法使用此优惠券，请联系客服申请退还饭盒。\n"
                        point_cost:
                          type: integer
                          example: 1
                        point_fiat_price:
                          type: integer
                          example: 10
                        discounted_point_fiat_price:
                          type: integer
                          example: 5
                        fiat_price:
                          type: integer
                          example: 10
                        discounted_fiat_price:
                          type: integer
                          example: 8
                        default_purchase_method:
                          type: string
                          example: point
                        available_at:
                          type: string
                          example: '2025-01-04 00:00:00'
                        available_until:
                          type: string
                          example: '2025-01-07 23:59:59'
                        expiry_days:
                          type: integer
                          example: 30
                        quantity:
                          type: integer
                          example: 5
                        media:
                          type: array
                          example:
                            -
                              name: ITO-SD1
                              file_name: wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc=-.png
                              uuid: d6675a50-d9a3-4767-90c4-3df171a16615
                              original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152259/wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc%3D-.png'
                              order: null
                              custom_properties:
                                width: 1080
                                height: 1440
                                is_cover: false
                              extension: png
                              size: 2170208
                            -
                              name: ITO-SD1-banner
                              file_name: B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png
                              uuid: 4949a680-0c85-41e0-92c4-0ac064dfcb5e
                              original_url: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152260/B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png'
                              order: null
                              custom_properties:
                                width: 1035
                                height: 339
                                is_cover: false
                              extension: png
                              size: 300718
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: ITO-SD1
                              file_name:
                                type: string
                                example: wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc=-.png
                              uuid:
                                type: string
                                example: d6675a50-d9a3-4767-90c4-3df171a16615
                              original_url:
                                type: string
                                example: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152259/wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc%3D-.png'
                              order:
                                type: string
                                example: null
                              custom_properties:
                                type: object
                                properties:
                                  width:
                                    type: integer
                                    example: 1080
                                  height:
                                    type: integer
                                    example: 1440
                                  is_cover:
                                    type: boolean
                                    example: false
                              extension:
                                type: string
                                example: png
                              size:
                                type: integer
                                example: 2170208
                        horizontal_banner:
                          type: object
                          properties:
                            name:
                              type: string
                              example: ITO-SD1-banner
                            file_name:
                              type: string
                              example: B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png
                            uuid:
                              type: string
                              example: 4949a680-0c85-41e0-92c4-0ac064dfcb5e
                            original_url:
                              type: string
                              example: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152260/B4SjW0vT77ZDAF9g52anCpP6vTz2CV-metaSVRPLVNEMS1iYW5uZXIucG5n-.png'
                            order:
                              type: string
                              example: null
                            custom_properties:
                              type: object
                              properties:
                                width:
                                  type: integer
                                  example: 1035
                                height:
                                  type: integer
                                  example: 339
                                is_cover:
                                  type: boolean
                                  example: false
                            extension:
                              type: string
                              example: png
                            size:
                              type: integer
                              example: 300718
                        vertical_banner:
                          type: object
                          properties:
                            name:
                              type: string
                              example: ITO-SD1
                            file_name:
                              type: string
                              example: wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc=-.png
                            uuid:
                              type: string
                              example: d6675a50-d9a3-4767-90c4-3df171a16615
                            original_url:
                              type: string
                              example: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/152259/wA81aRLzJmJMPmZZ9iflaEOwPIjHIt-metaSVRPLVNEMS5wbmc%3D-.png'
                            order:
                              type: string
                              example: null
                            custom_properties:
                              type: object
                              properties:
                                width:
                                  type: integer
                                  example: 1080
                                height:
                                  type: integer
                                  example: 1440
                                is_cover:
                                  type: boolean
                                  example: false
                            extension:
                              type: string
                              example: png
                            size:
                              type: integer
                              example: 2170208
                        interactions:
                          type: array
                          example:
                            -
                              id: 42954
                              user:
                                id: 6696
                                name: 'Elise 🌸'
                                avatar: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/105466/image_cropper_0A4C9DC4-A57D-4D51-B8A2-963DB67B09A4-10796-00000291432E54A1.jpg'
                              type: 3
                              created_at: '2025-01-06T07:50:49.000000Z'
                              updated_at: '2025-01-06T07:50:49.000000Z'
                              share_url: null
                              created_at_diff: '3 days ago'
                              updated_at_diff: '3 days ago'
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 42954
                              user:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 6696
                                  name:
                                    type: string
                                    example: 'Elise 🌸'
                                  avatar:
                                    type: string
                                    example: 'https://funhub-dev.s3.ap-southeast-1.amazonaws.com/105466/image_cropper_0A4C9DC4-A57D-4D51-B8A2-963DB67B09A4-10796-00000291432E54A1.jpg'
                              type:
                                type: integer
                                example: 3
                              created_at:
                                type: string
                                example: '2025-01-06T07:50:49.000000Z'
                              updated_at:
                                type: string
                                example: '2025-01-06T07:50:49.000000Z'
                              share_url:
                                type: string
                                example: null
                              created_at_diff:
                                type: string
                                example: '3 days ago'
                              updated_at_diff:
                                type: string
                                example: '3 days ago'
                        location:
                          type: string
                          example: null
                        count:
                          type: object
                          properties:
                            likes:
                              type: integer
                              example: 0
                            share:
                              type: integer
                              example: 1
                            bookmarks:
                              type: integer
                              example: 0
                            views:
                              type: integer
                              example: 29
                        categories:
                          type: array
                          example: []
                        created_at:
                          type: string
                          example: '2024-11-21T03:26:28.000000Z'
                        updated_at:
                          type: string
                          example: '2025-01-03T16:02:49.000000Z'
                        created_at_diff:
                          type: string
                          example: '1 month ago'
                        updated_at_diff:
                          type: string
                          example: '6 days ago'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'https://funhub-mobile-backend.test/api/v1/public_offers?page=1'
                      last:
                        type: string
                        example: 'https://funhub-mobile-backend.test/api/v1/public_offers?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'https://funhub-mobile-backend.test/api/v1/public_offers?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'https://funhub-mobile-backend.test/api/v1/public_offers'
                      per_page:
                        type: integer
                        example: 10
                      to:
                        type: integer
                        example: 4
                      total:
                        type: integer
                        example: 4
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: category_ids
        description: 'Optional parameter. array optional Category Ids to Filter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: merchant_offer_ids
        description: 'Optional parameter. array optional Merchant Offer Ids to Filter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: city
        description: 'Optional parameter. optional Filter by City.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'Subang Jaya'
      -
        in: path
        name: state
        description: 'Optional parameter. optional Filter by State.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Selangor
      -
        in: path
        name: lat
        description: 'Optional parameter. optional Filter by Lat of User (must provide lng).'
        required: true
        schema:
          type: number
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 3.123456
      -
        in: path
        name: lng
        description: 'Optional parameter. optional Filter by Lng of User (must provide lat).'
        required: true
        schema:
          type: number
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 101.123456
      -
        in: path
        name: radius
        description: 'Optional parameter. optional Filter by Radius (in meters) if provided lat, lng.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10000
      -
        in: path
        name: available_only
        description: 'Optional parameter. boolean optional Filter by Available Only.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'true or 0'
      -
        in: path
        name: coming_soon_only
        description: 'Optional parameter. boolean optional Filter by Coming Soon Only.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'true or 0'
  /api/v1/public_offers_single:
    get:
      summary: 'Web - Get Single Public Offer'
      operationId: webGetSinglePublicOffer
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  offer: {  }
                properties:
                  offer:
                    type: object
                    properties: {  }
      tags:
        - Merchant
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'This field is required when <code>sku</code> is <code>null</code>.'
                  example: 14
                  nullable: false
                sku:
                  type: string
                  description: 'This field is required when <code>id</code> is <code>null</code>.'
                  example: null
                  nullable: false
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. optional The id of the merchant offer.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: sku
        description: 'Optional parameter. optional The id of the merchant offer.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ABC-1234
  /api/v1/merchant/offers/nearby:
    get:
      summary: 'Get Merchant Offers Nearby'
      operationId: getMerchantOffersNearby
      description: ''
      parameters:
        -
          in: query
          name: category_ids
          description: 'optional Merchant Category Ids to Filter.'
          example:
            - 1
            - 2
            - 3
          required: false
          schema:
            type: array
            description: 'optional Merchant Category Ids to Filter.'
            example:
              - 1
              - 2
              - 3
            items:
              type: string
        -
          in: query
          name: merchant_offer_ids
          description: 'optional Merchant Offer Ids to Filter. Example [1,2,3]'
          example:
            - voluptates
          required: false
          schema:
            type: array
            description: 'optional Merchant Offer Ids to Filter. Example [1,2,3]'
            example:
              - voluptates
            items:
              type: string
        -
          in: query
          name: city
          description: 'optional Filter by City Name.'
          example: 'Subang Jaya'
          required: false
          schema:
            type: string
            description: 'optional Filter by City Name.'
            example: 'Subang Jaya'
            nullable: false
        -
          in: query
          name: state
          description: 'optional Filter by State.'
          example: Selangor
          required: false
          schema:
            type: string
            description: 'optional Filter by State.'
            example: Selangor
            nullable: false
        -
          in: query
          name: lat
          description: 'Filter by Lat of User (must provide lng).'
          example: 3.123456
          required: true
          schema:
            type: number
            description: 'Filter by Lat of User (must provide lng).'
            example: 3.123456
            nullable: false
        -
          in: query
          name: lng
          description: 'Filter by Lng of User (must provide lat).'
          example: 101.123456
          required: true
          schema:
            type: number
            description: 'Filter by Lng of User (must provide lat).'
            example: 101.123456
            nullable: false
        -
          in: query
          name: radius
          description: 'optional Filter by Radius (in meters) if provided lat, lng.'
          example: 10000
          required: false
          schema:
            type: integer
            description: 'optional Filter by Radius (in meters) if provided lat, lng.'
            example: 10000
            nullable: false
        -
          in: query
          name: available_only
          description: 'optional Filter by Available Only.'
          example: true
          required: false
          schema:
            type: boolean
            description: 'optional Filter by Available Only.'
            example: true
            nullable: false
        -
          in: query
          name: coming_soon_only
          description: 'optional Filter by Coming Soon Only.'
          example: true
          required: false
          schema:
            type: boolean
            description: 'optional Filter by Coming Soon Only.'
            example: true
            nullable: false
        -
          in: query
          name: except_expired
          description: 'optional Get all coming soon or available only but hide expired offers.'
          example: true
          required: false
          schema:
            type: boolean
            description: 'optional Get all coming soon or available only but hide expired offers.'
            example: true
            nullable: false
        -
          in: query
          name: flash_only
          description: 'optional Filter by Flash Deals Only.'
          example: true
          required: false
          schema:
            type: boolean
            description: 'optional Filter by Flash Deals Only.'
            example: true
            nullable: false
        -
          in: query
          name: limit
          description: 'optional Per Page Limit Override.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'optional Per Page Limit Override.'
            example: 10
            nullable: false
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [],\n}"
      tags:
        - Merchant
  /api/v1/merchant/offers/my_bookmarks:
    get:
      summary: 'Get My Bookmarked Merchant Offers'
      operationId: getMyBookmarkedMerchantOffers
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Merchant
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are:  id, name, description, available_at, available_until, sku'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, title, type, slug, status, published_at, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                  nullable: false
  /api/v1/merchant/offers:
    get:
      summary: 'Get Offers'
      operationId: getOffers
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"data\": [],\n \"links\": {},\n \"meta\": {\n    \"current_page\": 1,\n  }\n}"
      tags:
        - Merchant
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                category_ids:
                  type: array
                  description: 'optional Merchant Category Ids to Filter.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                merchant_offer_ids:
                  type: array
                  description: 'optional Merchant Offer Ids to Filter. Example [1,2,3]'
                  example:
                    - error
                  items:
                    type: string
                city:
                  type: string
                  description: 'optional Filter by City.'
                  example: 'Subang Jaya'
                  nullable: false
                state:
                  type: string
                  description: 'optional Filter by State.'
                  example: Selangor
                  nullable: false
                lat:
                  type: number
                  description: 'optional Filter by Lat of User (must provide lng).'
                  example: 3.123456
                  nullable: false
                lng:
                  type: number
                  description: 'optional Filter by Lng of User (must provide lat).'
                  example: 101.123456
                  nullable: false
                radius:
                  type: integer
                  description: 'optional Filter by Radius (in meters) if provided lat, lng.'
                  example: 10000
                  nullable: false
                location_id:
                  type: integer
                  description: 'optional Filter by Location Id.'
                  example: 1
                  nullable: false
                available_only:
                  type: boolean
                  description: 'optional Filter by Available Only.'
                  example: true
                  nullable: false
                coming_soon_only:
                  type: boolean
                  description: 'optional Filter by Coming Soon Only.'
                  example: true
                  nullable: false
                except_expired:
                  type: boolean
                  description: 'optional Get all coming soon or available only but hide expired offers.'
                  example: true
                  nullable: false
                flash_only:
                  type: boolean
                  description: 'optional Filter by Flash Deals Only.'
                  example: true
                  nullable: false
                merchant_id:
                  type: integer
                  description: 'optional Filter by Merchant ID.'
                  example: 1
                  nullable: false
                store_id:
                  type: integer
                  description: 'optional Filter by Store ID.'
                  example: 1
                  nullable: false
                hide_purchased:
                  type: boolean
                  description: 'optional Hide Purchased Offers for current logged in user.'
                  example: true
                  nullable: false
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, name, description, available_at, available_until, sku'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, name, description, available_at, available_until, sku, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                  nullable: false
  /api/v1/merchant/offers/claim:
    post:
      summary: 'Claim Offer'
      operationId: claimOffer
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: success
                    type: object
                    example:
                      message: 'Offer Claimed'
                    properties:
                      message:
                        type: string
                        example: 'Offer Claimed'
                  -
                    description: insufficient_point_balance
                    type: object
                    example:
                      message: 'Insufficient Point Balance'
                    properties:
                      message:
                        type: string
                        example: 'Insufficient Point Balance'
                  -
                    description: offer_no_longer_valid
                    type: object
                    example:
                      message: 'Offer is no longer valid'
                    properties:
                      message:
                        type: string
                        example: 'Offer is no longer valid'
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                offer_id:
                  type: integer
                  description: 'Offer ID.'
                  example: 1
                  nullable: false
                payment_method:
                  type: string
                  description: 'Payment Method.'
                  example: points/fiat
                  nullable: false
                fiat_payment_method:
                  type: string
                  description: 'required_if:payment_method,fiat Payment Method.'
                  example: fpx/card
                  nullable: false
                card_id:
                  type: integer
                  description: 'required_if:fiat_payment_method,card Card ID.'
                  example: 1
                  nullable: false
                quantity:
                  type: integer
                  description: Quantity.
                  example: 1
                  nullable: false
                use_point_discount:
                  type: boolean
                  description: 'optional Use Point(Funbox) Discount.'
                  example: true
                  nullable: true
                points_to_use:
                  type: integer
                  description: 'optional Points(Funbox) to Use.'
                  example: 2
                  nullable: true
                referral_code:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: true
                wallet_type:
                  type: string
                  description: 'optional Wallet Type.'
                  example: TNG/FPX-CIMB
                  nullable: false
                channel:
                  type: string
                  description: 'optional Channel.'
                  example: app/funhub_web
                  nullable: false
                email:
                  type: string
                  description: 'optional Email for web channel to fire purchased email after successful purchase.'
                  example: john@email.com
                  nullable: false
              required:
                - offer_id
                - payment_method
                - quantity
  /api/v1/merchant/offers/redeem:
    post:
      summary: "Redeem a Merchant Offer (In-Store)\nThis is when customer with claimed merchant offer wishes to redeem in store"
      operationId: redeemAMerchantOfferInStoreThisIsWhenCustomerWithClaimedMerchantOfferWishesToRedeemInStore
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Redeemed successfully'
                  offer: {  }
                properties:
                  message:
                    type: string
                    example: 'Redeemed successfully'
                  offer:
                    type: object
                    properties: {  }
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                claim_id:
                  type: integer
                  description: 'Claim ID.'
                  example: 1
                  nullable: false
                offer_id:
                  type: integer
                  description: 'Merchant Offer ID.'
                  example: 1
                  nullable: false
                quantity:
                  type: integer
                  description: 'Quantity to Redeem.'
                  example: 1
                  nullable: false
                redeem_code:
                  type: string
                  description: 'Redemption Code Provided by Merchant.'
                  example: '123456'
                  nullable: false
              required:
                - claim_id
                - offer_id
                - quantity
                - redeem_code
  /api/v1/merchant/offers/cancel:
    post:
      summary: 'Cancel a Merchant Offer Transaction'
      operationId: cancelAMerchantOfferTransaction
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: success
                    type: object
                    example:
                      message: 'Transaction cancelled'
                    properties:
                      message:
                        type: string
                        example: 'Transaction cancelled'
                  -
                    description: offer_pending_payment_not_found
                    type: object
                    example:
                      message: 'You have not claimed this offer'
                    properties:
                      message:
                        type: string
                        example: 'You have not claimed this offer'
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant_offer_id:
                  type: integer
                  description: 'Merchant Offer ID.'
                  example: 1
                  nullable: false
              required:
                - merchant_offer_id
  /api/v1/merchant/offers/my_claimed_offers:
    get:
      summary: 'Get My Merchant Offers (Logged in User)'
      operationId: getMyMerchantOffersLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: is_redeemed
        description: 'Optional parameter. optional Filter by Redeemed.'
        required: true
        schema:
          type: number
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 0.0
      -
        in: path
        name: is_expired
        description: 'Optional parameter. optional Filter by Expired.'
        required: true
        schema:
          type: number
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 0.0
      -
        in: path
        name: claim_id
        description: 'Optional parameter. optional Filter by Claim ID.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/v1/merchant/offers/last_purchase:
    get:
      summary: 'Get Last Purchase Date of user on a Merchant User'
      operationId: getLastPurchaseDateOfUserOnAMerchantUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  last_purchase_offer_id: 1
                  last_purchase_date: '2023-08-01 12:00:00'
                properties:
                  last_purchase_offer_id:
                    type: integer
                    example: 1
                  last_purchase_date:
                    type: string
                    example: '2023-08-01 12:00:00'
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant_user_id:
                  type: integer
                  description: 'Merchant User ID(merchant->user->id).'
                  example: 1
                  nullable: false
              required:
                - merchant_user_id
  '/api/v1/merchant/offers/{offer_id}':
    get:
      summary: 'Get Offer By ID'
      operationId: getOfferByID
      description: ''
      parameters:
        -
          in: query
          name: offer_id
          description: 'Offer ID.'
          example: 1
          required: true
          schema:
            type: integer
            description: 'Offer ID.'
            example: 1
            nullable: false
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  offer: {  }
                properties:
                  offer:
                    type: object
                    properties: {  }
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: offer_id
        description: 'The ID of the offer.'
        example: commodi
        required: true
        schema:
          type: string
  /api/v1/merchants:
    get:
      summary: 'Get Merchants'
      operationId: getMerchants
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: search
        description: 'Optional parameter. optional Search by business name.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'business name'
      -
        in: path
        name: categories_id
        description: 'Optional parameter. optional Search by categories id.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: merchant_ids
        description: 'Optional parameter. optional Search by merchant ids.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: store_ids
        description: 'Optional parameter. optional Search by store ids.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: limit
        description: 'Optional parameter. optional Limit the number of results.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  /api/v1/merchants/crm:
    post:
      summary: 'Create Merchant CRM Record'
      operationId: createMerchantCRMRecord
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Created Merchant Contact'
                properties:
                  message:
                    type: string
                    example: 'Created Merchant Contact'
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                brand_name:
                  type: string
                  description: 'Brand Name.'
                  example: ABC
                  nullable: false
                pic_name:
                  type: string
                  description: 'PIC Name.'
                  example: 'John Doe'
                  nullable: false
                postcode:
                  type: string
                  description: Postcode.
                  example: '47530'
                  nullable: false
                phone_no:
                  type: string
                  description: 'Phone Number.'
                  example: '0123456789'
                  nullable: false
                address:
                  type: string
                  description: 'optional Address.'
                  example: '123, Jalan ABC'
                  nullable: false
                remarks:
                  type: string
                  description: 'optional Remarks(Refer By).'
                  example: KOC
                  nullable: false
              required:
                - brand_name
                - pic_name
                - postcode
                - phone_no
  /api/v1/merchants/rating_categories:
    get:
      summary: 'Get Merchant Rating Categories'
      operationId: getMerchantRatingCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata: []\n}"
      tags:
        - Merchant
  /api/v1/merchants/nearby:
    get:
      summary: "Get Nearby Merchants\nWill lookup based on user provided lat,lng and search for merchant stores near user"
      operationId: getNearbyMerchantsWillLookupBasedOnUserProvidedLatlngAndSearchForMerchantStoresNearUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: lat
        description: Latitude.
        example: '3.1390'
        required: true
        schema:
          type: string
      -
        in: path
        name: lng
        description: Longitude.
        example: '101.6869'
        required: true
        schema:
          type: string
      -
        in: path
        name: radius
        description: 'Optional parameter. optional Radius in km.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '10'
      -
        in: path
        name: limit
        description: 'Optional parameter. optional Limit the number of results.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  '/api/v1/merchants/{merchant_id}/locations':
    get:
      summary: 'Get Location by Merchant ID'
      operationId: getLocationByMerchantID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: merchant_id
        description: 'Merchant ID.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/merchants/{merchant_id}/ratings':
    get:
      summary: 'Get Merchant Ratings'
      operationId: getMerchantRatings
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
    post:
      summary: 'Rate a Merchant'
      operationId: rateAMerchant
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata: {}\n}"
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  description: Rating.
                  example: 5
                  nullable: false
                comment:
                  type: string
                  description: 'optional Comment.'
                  example: 'Good service'
                  nullable: true
                rating_category_ids:
                  type: string
                  description: 'optional Rating Category IDs.'
                  example: '1,2,3'
                  nullable: false
              required:
                - rating
    parameters:
      -
        in: path
        name: merchant_id
        description: 'Optional parameter. optional Only load specific merchant ratings.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: merchant
        description: 'Merchant ID.'
        example: '1'
        required: true
        schema:
          type: string
      -
        in: path
        name: only_mine
        description: 'Optional parameter. boolean optional Only show my ratings.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'true'
      -
        in: path
        name: user_id
        description: 'Optional parameter. optional Only load specific user ratings.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: sort
        description: 'Optional parameter. Column to Sort.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'Sortable columns are: id, rating, created_at, updated_at'
      -
        in: path
        name: order
        description: 'Optional parameter. Direction to Sort.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'Sortable directions are: asc, desc'
      -
        in: path
        name: limit
        description: 'Optional parameter. Per Page Limit Override.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  '/api/v1/merchants/{merchant_id}/menus':
    get:
      summary: 'Get Merchant Menus'
      operationId: getMerchantMenus
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n[\n'https://example.com/menu1.pdf',\n'https://example.com/menu2.pdf',\n'https://example.com/menu3.pdf',\n]"
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: merchant_id
        description: 'The ID of the merchant.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: merchant
        description: 'Merchant ID.'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/merchant_offer_categories:
    get:
      summary: 'Get All Merchant Offer Categories'
      operationId: getAllMerchantOfferCategories
      description: ''
      parameters:
        -
          in: query
          name: is_featured
          description: 'Is Featured Categories.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Is Featured Categories.'
            example: 1
            nullable: false
        -
          in: query
          name: is_active
          description: 'Is Active Categories.'
          example: 0
          required: false
          schema:
            type: integer
            description: 'Is Active Categories.'
            example: 0
            nullable: false
        -
          in: query
          name: lat
          description: Latitude.
          example: 3.139
          required: false
          schema:
            type: number
            description: Latitude.
            example: 3.139
            nullable: false
        -
          in: query
          name: lng
          description: Longitude.
          example: 101.6869
          required: false
          schema:
            type: number
            description: Longitude.
            example: 101.6869
            nullable: false
        -
          in: query
          name: id
          description: 'Get subcategories of a specific parent category by its ID.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Get subcategories of a specific parent category by its ID.'
            example: 1
            nullable: false
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Merchant
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
  /api/v1/merchant_categories:
    get:
      summary: 'Get popular Merchant Categories'
      operationId: getPopularMerchantCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  categories: []
                properties:
                  categories:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Merchant
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_featured:
                  type: integer
                  description: 'Is Featured Categories.'
                  example: 1
                  nullable: false
                has_offers:
                  type: integer
                  description: 'Check if category has published offers.'
                  example: 1
                  nullable: false
                has_stores:
                  type: integer
                  description: 'Check if category has linked to stores.'
                  example: 1
                  nullable: false
                has_store_offers:
                  type: integer
                  description: 'Check if category has linked to offers with listed stores.'
                  example: 1
                  nullable: false
                filter:
                  type: string
                  description: 'Column to Filter.'
                  example: 'Filterable columns are: id, name, created_at, updated_at'
                  nullable: false
                filter_value:
                  type: string
                  description: 'Value to Filter.'
                  example: 'Filterable values are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10'
                  nullable: false
                sort:
                  type: string
                  description: 'Column to Sort.'
                  example: 'Sortable columns are: id, name, created_at, updated_at'
                  nullable: false
                order:
                  type: string
                  description: 'Direction to Sort.'
                  example: 'Sortable directions are: asc, desc'
                  nullable: false
                limit:
                  type: integer
                  description: 'Per Page Limit Override.'
                  example: 10
                  nullable: false
                offset:
                  type: integer
                  description: 'Offset Override.'
                  example: 0
                  nullable: false
  '/api/v1/merchant_categories/{offer_id}':
    get:
      summary: 'Get Merchant Categories by offer id'
      operationId: getMerchantCategoriesByOfferId
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  categories: []
                properties:
                  categories:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Merchant
    parameters:
      -
        in: path
        name: offer_id
        description: 'The id of the merchant offer id.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/merchant-contact:
    post:
      summary: 'Submit Merchant Contact Information'
      operationId: submitMerchantContactInformation
      description: 'Allows users to submit merchant contact information via the API.'
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Merchant contact information submitted successfully'
                properties:
                  message:
                    type: string
                    example: 'Merchant contact information submitted successfully'
        422:
          description: 'Invalid Form Fields'
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    name:
                      - 'The Name field is required.'
                    email:
                      - 'The Email field must be a valid email address.'
                    tel_no:
                      - 'The Phone Number field is required.'
                    company_name:
                      - 'The Company Name field is required.'
                    business_type:
                      - 'The Business Type field is required.'
                    message_type:
                      - 'The Message Category field is required.'
                    message:
                      - 'The Message field is required.'
                properties:
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        example:
                          - 'The Name field is required.'
                        items:
                          type: string
                      email:
                        type: array
                        example:
                          - 'The Email field must be a valid email address.'
                        items:
                          type: string
                      tel_no:
                        type: array
                        example:
                          - 'The Phone Number field is required.'
                        items:
                          type: string
                      company_name:
                        type: array
                        example:
                          - 'The Company Name field is required.'
                        items:
                          type: string
                      business_type:
                        type: array
                        example:
                          - 'The Business Type field is required.'
                        items:
                          type: string
                      message_type:
                        type: array
                        example:
                          - 'The Message Category field is required.'
                        items:
                          type: string
                      message:
                        type: array
                        example:
                          - 'The Message field is required.'
                        items:
                          type: string
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the contact person.'
                  example: 'Alex Koh'
                  nullable: false
                email:
                  type: string
                  description: 'The email address of the contact person.'
                  example: alex@funhub.my
                  nullable: false
                tel_no:
                  type: string
                  description: 'The telephone number of the contact person.'
                  example: '182036794'
                  nullable: false
                company_name:
                  type: string
                  description: 'The name of the company.'
                  example: 'Funhub TV'
                  nullable: false
                business_type:
                  type: string
                  description: 'The type of the business.'
                  example: others
                  nullable: false
                other_business_type:
                  type: string
                  description: 'required_if:business_type,others The type of the business.'
                  example: 'IT Consult'
                  nullable: true
                message_type:
                  type: string
                  description: 'The category of the message.'
                  example: 'General Inquiry'
                  nullable: false
                message:
                  type: text
                  description: 'The message or remarks.'
                  example: 'This is a sample message.'
                  nullable: false
              required:
                - name
                - email
                - tel_no
                - company_name
                - business_type
                - message_type
                - message
  /api/v1/missions:
    get:
      summary: 'Get all missions available.'
      operationId: getAllMissionsAvailable
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"current_page\": 1,\n\"data\": [\n  {\n  \"id\": 1,\n  \"name\": \"Complete 10 missions\",\n  \"is_participating\": true,\n  \"description\": \"Complete 10 missions to earn a reward\",\n  \"events\": [\"mission_completed\"],\n  \"current_values\": {\"mission_completed\": 5},\n  \"values\": {\"mission_completed\": 10},\n  \"reward\": {\n      \"id\": 1,\n      \"name\": \"Egg\",\n      \"description\": \"egg\",\n      \"thumbnail_url\": \"https://example.com/egg.png\",\n  },\n  \"reward_quantity\": 1,\n  \"claimed\": false,\n  \"claimed_at\": null,\n  \"claimed_at_formatted\": null,\n  \"claimed_at_ago\": null\n }\n],\n\"first_page_url\": \"http://localhost:8000/api/missions?page=1\",\n\"from\": 1,\n\"last_page\": 1,\n\"last_page_url\": \"http://localhost:8000/api/missions?page=1\",\n\"next_page_url\": null,\n\"path\": \"http://localhost:8000/api/missions\",\n\"per_page\": 15,\n}"
      tags:
        - Mission
    parameters:
      -
        in: path
        name: completed_only
        description: 'Optional parameter. boolean optional Only show completed missions(is_completed=1).'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0'
      -
        in: path
        name: claimed_only
        description: 'Optional parameter. boolean optional Only show claimed missions(claimed_only=1).'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0'
      -
        in: path
        name: frequency
        description: 'Optional parameter. optional Filter by frequency, can combine frquency with multiple comma separated.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'one-off,daily,monthly,accumulated'
  /api/v1/missions/frequency:
    get:
      summary: 'Get enabled mission frequencies'
      operationId: getEnabledMissionFrequencies
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - one-off
                    - daily
                    - monthly
                    - accumulated
                properties:
                  data:
                    type: array
                    example:
                      - one-off
                      - daily
                      - monthly
                      - accumulated
                    items:
                      type: string
      tags:
        - Mission
  /api/v1/missions/complete:
    post:
      summary: 'Complete all missions or single mission'
      operationId: completeAllMissionsOrSingleMission
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Mission(s) completed successfully.'
                  completed_missions:
                    - 1
                    - 2
                  reward:
                    object: {  }
                    quantity: 1
                properties:
                  message:
                    type: string
                    example: 'Mission(s) completed successfully.'
                  completed_missions:
                    type: array
                    example:
                      - 1
                      - 2
                    items:
                      type: integer
                  reward:
                    type: object
                    properties:
                      object:
                        type: object
                        properties: {  }
                      quantity:
                        type: integer
                        example: 1
      tags:
        - Mission
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                mission_id:
                  type: integer
                  description: 'The id of the mission to complete, if not pass in, system will complete all missions thats eligible to be completed.'
                  example: 1
                  nullable: false
  /api/v1/missions/claimables:
    get:
      summary: 'Get latest claimable missions'
      operationId: getLatestClaimableMissions
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [\n {\n \"id\": 1,\n \"name\": \"Mission 1\",\n ...\n }\n]\n}"
      tags:
        - Mission
  /api/v1/user/settings/fcm-token:
    post:
      summary: 'Update user fcm token'
      operationId: updateUserFcmToken
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fcm_token:
                  type: string
                  description: 'The fcm token of the user.'
                  example: '1'
                  nullable: false
              required:
                - fcm_token
  /api/v1/notifications:
    get:
      summary: "Get latest notifications of the user\nOrdered by latest one"
      operationId: getLatestNotificationsOfTheUserOrderedByLatestOne
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [\n{\n   \"id\": 1,\n   \"message\" : \"A commented on your Article\",\n   \"object\" : \"article\",\n   \"object_id\" : 1,\n   \"link_to_url\" : \"http://localhost:8000/articles/1\",\n   \"link_to_object\" : \"article\",\n   \"action\" : \"comment\",\n   \"from\" : \"user\",\n   \"from_id\" : 1,\n   \"created_at_raw\" : \"2021-08-04T07:00:00.000000Z\",\n   \"created_at\" : \"1 day ago\"\n}\n]"
      tags:
        - Notifications
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: integer
                  description: 'The number of items per page.'
                  example: 10
                  nullable: false
  /api/v1/notifications/mark_as_read:
    post:
      summary: 'Mark a Single Notification as Read by Notification ID'
      operationId: markASingleNotificationAsReadByNotificationID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Notification marked as read.'
                properties:
                  message:
                    type: string
                    example: 'Notification marked as read.'
      tags:
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notification_id:
                  type: string
                  description: 'The notification id.'
                  example: 058d0c3d-1028-4660-b905-7e30ad7eee9c
                  nullable: false
              required:
                - notification_id
  /api/v1/notifications/mark_all_as_read:
    post:
      summary: 'Mark all notifications as read'
      operationId: markAllNotificationsAsRead
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Notifications marked as read.'
                properties:
                  message:
                    type: string
                    example: 'Notifications marked as read.'
      tags:
        - Notifications
  /api/v1/countries:
    get:
      summary: 'Get Countries'
      operationId: getCountries
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n[\"id\" => 1, \"name\" => \"Nigeria\", \"code\" => \"NG\"],\n}"
      tags:
        - Other
  /api/v1/states:
    get:
      summary: 'Get States'
      operationId: getStates
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n[\"id\" => 1, \"name\" => \"Abia\", \"code\" => \"AB\", \"country_id\" => 1],\n}"
      tags:
        - Other
  /api/v1/states/by-location:
    get:
      summary: 'Get State by User Location'
      operationId: getStateByUserLocation
      description: "Get state information based on user's latitude and longitude coordinates"
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  error: false
                  message: Success
                  data:
                    id: 1
                    name: Selangor
                    code: SGR
                    country_id: 1
                    name_translation: Selangor
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Selangor
                      code:
                        type: string
                        example: SGR
                      country_id:
                        type: integer
                        example: 1
                      name_translation:
                        type: string
                        example: Selangor
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The lat field is required. The lng field is required.'
                  errors:
                    lat:
                      - 'The lat field is required.'
                    lng:
                      - 'The lng field is required.'
                properties:
                  message:
                    type: string
                    example: 'The lat field is required. The lng field is required.'
                  errors:
                    type: object
                    properties:
                      lat:
                        type: array
                        example:
                          - 'The lat field is required.'
                        items:
                          type: string
                      lng:
                        type: array
                        example:
                          - 'The lng field is required.'
                        items:
                          type: string
      tags:
        - Other
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lat:
                  type: numeric
                  description: 'The latitude coordinate.'
                  example: '3.140853'
                  nullable: false
                lng:
                  type: numeric
                  description: 'The longitude coordinate.'
                  example: '101.693207'
                  nullable: false
              required:
                - lat
                - lng
  /api/v1/payment/available_payment_types:
    get:
      summary: 'Get available payment types'
      operationId: getAvailablePaymentTypes
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  availablePaymentTypes:
                    - fpx
                    - card
                  server_time: '2023-10-01 12:00:00'
                  last_payment_method: FPX-CIMB
                properties:
                  availablePaymentTypes:
                    type: array
                    example:
                      - fpx
                      - card
                    items:
                      type: string
                  server_time:
                    type: string
                    example: '2023-10-01 12:00:00'
                  last_payment_method:
                    type: string
                    example: FPX-CIMB
      tags:
        - Payment
  /api/v1/payment/funbox_ringgit_value:
    get:
      summary: 'Get Funbox Ringgit Value'
      operationId: getFunboxRinggitValue
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  funbox_ringgit_value: 5
                properties:
                  funbox_ringgit_value:
                    type: integer
                    example: 5
      tags:
        - Payment
  /api/v1/points/my_balance/all:
    get:
      summary: 'Get the point & point components balance of the logged in user.'
      operationId: getThePointPointComponentsBalanceOfTheLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"point_balance\": { \"id\": 1, \"name\": 'Funhub', \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100 },\n\"point_components\": {[\n  {\"id\": 1, \"name\": \"rice\", \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100},\n  {\"id\": 2, \"name\": \"egg\", \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100},\n  {\"id\": 3, \"name\": \"vegetable\", \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100},\n  {\"id\": 4, \"name\": \"meat\", \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100},\n  {\"id\": 5, \"name\": \"fish\", \"thumbnail_url\": 'http://localhost:8000/storage/rewards/1/1.jpg', \"balance\": 100},\n]}\n}"
      tags:
        - Point
  /api/v1/points/balance:
    get:
      summary: 'Get the point balance of the user.'
      operationId: getThePointBalanceOfTheUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  balance: 100
                properties:
                  balance:
                    type: integer
                    example: 100
      tags:
        - Point
  /api/v1/points/components/balance:
    get:
      summary: 'Get the point component balance of the user.'
      operationId: getThePointComponentBalanceOfTheUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  type: egg
                  balance: 100
                properties:
                  type:
                    type: string
                    example: egg
                  balance:
                    type: integer
                    example: 100
      tags:
        - Point
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of point component.'
                  example: egg
                  nullable: false
              required:
                - type
  /api/v1/points/rewards:
    get:
      summary: 'Get Rewards Available.'
      operationId: getRewardsAvailable
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"rewards\": [\n{\n\"id\": 1,\n\"name\": \"Funhub\",\n\"description\": \"Funhub\",\n\"components\": [],\n}\n]"
      tags:
        - Point
  /api/v1/points/reward_combine:
    post:
      summary: 'Combine Points Component to Form a Reward'
      operationId: combinePointsComponentToFormAReward
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Point
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: 'The quantity of the reward to form.'
                  example: 1
                  nullable: false
              required:
                - quantity
  /api/v1/points/ledgers:
    get:
      summary: 'Get Point Ledger'
      operationId: getPointLedger
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [\n{\n  \"id\": 1,\n  ...\n}\n]\n}"
      tags:
        - Point
  /api/v1/points/components/ledgers:
    get:
      summary: 'Get Point Component Ledgers)'
      operationId: getPointComponentLedgers
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [\n{\n  \"id\": 1,\n  ...\n}\n]\n}"
      tags:
        - Point
    parameters:
      -
        in: path
        name: filter_type
        description: 'Optional parameter. Type of Component (name).'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: egg
  /api/v1/products:
    get:
      summary: 'Get Products for Sale (Gift Cards)'
      operationId: getProductsForSaleGiftCards
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Product
  /api/v1/products/limited:
    get:
      summary: 'Get Products for Sale (Limited Gift Cards)'
      operationId: getProductsForSaleLimitedGiftCards
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Product
  /api/v1/products/checkout:
    post:
      summary: 'Post Checkout'
      operationId: postCheckout
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: success
                    type: object
                    example:
                      message: 'Redirect to Gateway'
                    properties:
                      message:
                        type: string
                        example: 'Redirect to Gateway'
                  -
                    description: insufficient_product_quantity
                    type: object
                    example:
                      message: 'Product is sold out'
                    properties:
                      message:
                        type: string
                        example: 'Product is sold out'
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: 'Product ID.'
                  example: 1
                  nullable: false
                payment_method:
                  type: string
                  description: 'Payment Method.'
                  example: fiat
                  nullable: false
                fiat_payment_method:
                  type: string
                  description: 'required_if:payment_method,fiat Payment Method.'
                  example: fpx/card
                  nullable: false
                card_id:
                  type: integer
                  description: 'required_if:fiat_payment_method,card Card ID.'
                  example: 1
                  nullable: false
                quantity:
                  type: integer
                  description: Quantity.
                  example: 1
                  nullable: false
                referral_code:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
                wallet_type:
                  type: string
                  description: 'optional Wallet Type.'
                  example: TNG/FPX-CIMB
                  nullable: false
              required:
                - product_id
                - payment_method
                - quantity
  /api/v1/products/checkout/cancel:
    post:
      summary: 'Cancel Product Checkout'
      operationId: cancelProductCheckout
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Transaction cancelled'
                properties:
                  message:
                    type: string
                    example: 'Transaction cancelled'
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_no:
                  type: string
                  description: 'Transaction No.'
                  example: '11234455'
                  nullable: false
              required:
                - transaction_no
  '/api/v1/products/{product_id}':
    get:
      summary: 'Get Product By ID'
      operationId: getProductByID
      description: ''
      parameters:
        -
          in: query
          name: product_id
          description: 'Product ID.'
          example: 1
          required: true
          schema:
            type: integer
            description: 'Product ID.'
            example: 1
            nullable: false
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                properties:
                  data:
                    type: object
                    properties: {  }
      tags:
        - Product
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: magnam
        required: true
        schema:
          type: string
  /api/v1/promotion-codes/redeem:
    post:
      summary: 'Redeem a promotion code'
      operationId: redeemAPromotionCode
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Code redeemed successfully\",\n\"rewards\": [\n  {\n    \"id\": 1,\n    \"name\": \"Funhub\",\n    \"description\": \"Funhub\",\n    \"components\": [],\n  }\n],\n\"reward_components\": [\n  {\n    \"id\": 1,\n    \"name\": \"Funhub\",\n    \"description\": \"Funhub\",\n    \"components\": [],\n  }\n]\n}"
      tags:
        - 'Promotion Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: 'The code to redeem.'
                  example: ABCD123ABCDD
                  nullable: false
              required:
                - code
  /api/v1/external/stores:
    get:
      summary: 'Get Stores'
      operationId: getStores
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Stores
    parameters:
      -
        in: path
        name: categories_id
        description: 'Optional parameter. optional Categories ID.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: merchant_ids
        description: 'Optional parameter. optional Merchant IDs.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: store_ids
        description: 'Optional parameter. optional Store IDs.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: include_unlisted
        description: 'Optional parameter. optional Include unlisted stores, must have store_ids specified else all will be LISTED store only.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: include_listed_unlisted
        description: 'Optional parameter. optional Include all listed and unlisted stores.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: limit
        description: 'Optional parameter. optional Per Page Limit.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  /api/v1/stores:
    get:
      summary: 'Get Stores'
      operationId: getStores
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Stores
    parameters:
      -
        in: path
        name: categories_id
        description: 'Optional parameter. optional Categories ID.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: merchant_ids
        description: 'Optional parameter. optional Merchant IDs.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: store_ids
        description: 'Optional parameter. optional Store IDs.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1,2,3'
      -
        in: path
        name: include_unlisted
        description: 'Optional parameter. optional Include unlisted stores, must have store_ids specified else all will be LISTED store only.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: include_listed_unlisted
        description: 'Optional parameter. optional Include all listed and unlisted stores.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: limit
        description: 'Optional parameter. optional Per Page Limit.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  /api/v1/stores/followings_been_here:
    get:
      summary: 'Get Stores Following Been Here'
      operationId: getStoresFollowingBeenHere
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'John Doe'
                    -
                      id: 2
                      name: 'John Doe'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'John Doe'
                      -
                        id: 2
                        name: 'John Doe'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'John Doe'
      tags:
        - Stores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_ids:
                  type: string
                  description: ''
                  example: voluptate
                  nullable: false
              required:
                - store_ids
    parameters:
      -
        in: path
        name: store_ids
        description: 'The store ids.'
        example: '1,2,3'
        required: true
        schema:
          type: string
  /api/v1/stores/rating_categories:
    get:
      summary: 'Get Store Rating Categories'
      operationId: getStoreRatingCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata: []\n}"
      tags:
        - Stores
  /api/v1/stores/find_by_location:
    get:
      summary: 'Check if store exists at given location'
      operationId: checkIfStoreExistsAtGivenLocation
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"exists\": true,\n  \"store\": {\n    \"id\": 1,\n    \"name\": \"Store Name\",\n    ...\n  }\n}"
      tags:
        - Stores
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lat:
                  type: number
                  description: 'optional Latitude coordinate.'
                  example: 3.139
                  nullable: false
                lng:
                  type: number
                  description: 'optional Longitude coordinate.'
                  example: 101.6869
                  nullable: false
                location_name:
                  type: string
                  description: 'optional Location name to search.'
                  example: '"KLCC"'
                  nullable: false
  /api/v1/stores/locations:
    get:
      summary: 'Get Store Locations by Store IDS'
      operationId: getStoreLocationsByStoreIDS
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Stores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_ids:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: false
              required:
                - store_ids
    parameters:
      -
        in: path
        name: store_ids
        description: 'Store IDs.'
        example: '1,2,3'
        required: true
        schema:
          type: string
  /api/v1/stores/stores_by_location:
    get:
      summary: 'Get Stores by Location ID'
      operationId: getStoresByLocationID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Stores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                location_id:
                  type: string
                  description: ''
                  example: alias
                  nullable: false
              required:
                - location_id
    parameters:
      -
        in: path
        name: location_id
        description: 'Location ID.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/v1/stores/{store_id}/ratings':
    get:
      summary: 'Get Stores Ratings'
      operationId: getStoresRatings
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Stores
    post:
      summary: 'Rate a Store'
      operationId: rateAStore
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata: {}\n}"
      tags:
        - Stores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  description: Rating.
                  example: 5
                  nullable: false
                comment:
                  type: string
                  description: 'optional Comment.'
                  example: 'Good service'
                  nullable: true
                rating_category_ids:
                  type: string
                  description: 'optional Rating Category IDs.'
                  example: '1,2,3'
                  nullable: false
              required:
                - rating
    parameters:
      -
        in: path
        name: store_id
        description: 'The ID of the store.'
        example: 3
        required: true
        schema:
          type: integer
      -
        in: path
        name: store
        description: 'Store ID.'
        example: '1'
        required: true
        schema:
          type: string
      -
        in: path
        name: only_mine
        description: 'Optional parameter. boolean optional Only show my ratings.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'true'
      -
        in: path
        name: user_id
        description: 'Optional parameter. optional Only load specific user ratings.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: merchant_id
        description: 'Optional parameter. optional Only load specific merchant ratings.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: sort
        description: 'Optional parameter. Column to Sort.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'Sortable columns are: id, rating, created_at, updated_at'
      -
        in: path
        name: order
        description: 'Optional parameter. Direction to Sort.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'Sortable directions are: asc, desc'
      -
        in: path
        name: limit
        description: 'Optional parameter. Per Page Limit Override.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
  '/api/v1/stores/{store_id}/menus':
    get:
      summary: 'Get Merchant Menus via Store'
      operationId: getMerchantMenusViaStore
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n[\n{'name': 'Menu 1', 'url': 'http://example.com/menu1.jpg'},\n]"
      tags:
        - Stores
    parameters:
      -
        in: path
        name: store_id
        description: 'The ID of the store.'
        example: 3
        required: true
        schema:
          type: integer
      -
        in: path
        name: store
        description: 'Store ID.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/v1/stores/{store_id}/ratings/ratings_categories':
    get:
      summary: 'Get Top X Store Rating Categories of'
      operationId: getTopXStoreRatingCategoriesOf
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata: []\n}"
      tags:
        - Stores
    parameters:
      -
        in: path
        name: store_id
        description: 'The ID of the store.'
        example: 3
        required: true
        schema:
          type: integer
      -
        in: path
        name: store
        description: 'Store ID.'
        example: '1'
        required: true
        schema:
          type: string
      -
        in: path
        name: limit
        description: 'Optional parameter. optional Limit.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 3
      -
        in: path
        name: only_with_ratings
        description: 'Optional parameter. boolean optional Only with ratings.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1'
  /api/v1/transactions:
    get:
      summary: "Get all my transactions\nGet all transactions of current logged in users paginated"
      operationId: getAllMyTransactionsGetAllTransactionsOfCurrentLoggedInUsersPaginated
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Transaction
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                date_from:
                  type: string
                  description: 'Date from'
                  example: '2021-01-01'
                  nullable: false
                date_to:
                  type: string
                  description: 'Date to'
                  example: '2021-01-31'
                  nullable: false
  /api/v1/transactions/transaction_no:
    get:
      summary: 'Get Transaction by Transaction Number'
      operationId: getTransactionByTransactionNumber
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n data: {}\n}"
      tags:
        - Transaction
  '/api/v1/transactions/{transaction_id}':
    get:
      summary: 'Get a Transaction By ID'
      operationId: getATransactionByID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n data: {}\n}"
      tags:
        - Transaction
    parameters:
      -
        in: path
        name: transaction_id
        description: 'The ID of the transaction.'
        example: 7
        required: true
        schema:
          type: integer
      -
        in: path
        name: transaction
        description: 'Transaction ID'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/user/import-contacts:
    post:
      summary: 'Import User Contacts'
      operationId: importUserContacts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Contacts imported successfully\""
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                contacts:
                  type: array
                  description: required.
                  example:
                    -
                      country_code: '60'
                      phone_no: '123456789'
                      name: 'John Doe'
                  items:
                    type: string
  /api/v1/user/contacts-friends:
    get:
      summary: 'Get Contacts not yet followed'
      operationId: getContactsNotYetFollowed
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: success
                    type: object
                    example:
                      users: []
                    properties:
                      users:
                        type: array
                        example: []
                  -
                    description: error
                    type: object
                    example:
                      message: 'No friends found'
                    properties:
                      message:
                        type: string
                        example: 'No friends found'
      tags:
        - User
  /api/v1/user/followings:
    get:
      summary: 'Get all followings of user id or logged in user'
      operationId: getAllFollowingsOfUserIdOrLoggedInUser
      description: ''
      parameters:
        -
          in: query
          name: query
          description: 'optional Search query for name of followings.'
          example: John
          required: false
          schema:
            type: string
            description: 'optional Search query for name of followings.'
            example: John
            nullable: false
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  followings: []
                properties:
                  followings:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User not found'
                properties:
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - User
    parameters:
      -
        in: path
        name: user_id
        description: 'Optional parameter. optional The id of the user, if not provided will use Logged In User ID.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/v1/user/followers:
    get:
      summary: 'Get all followers of user id or logged in user'
      operationId: getAllFollowersOfUserIdOrLoggedInUser
      description: ''
      parameters:
        -
          in: query
          name: query
          description: 'optional Search query for name of followers.'
          example: John
          required: false
          schema:
            type: string
            description: 'optional Search query for name of followers.'
            example: John
            nullable: false
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  followers: []
                properties:
                  followers:
                    type: array
                    example: []
        404:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User not found'
                properties:
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - User
    parameters:
      -
        in: path
        name: user_id
        description: 'Optional parameter. optional The id of the user, if not provided will use Logged In User ID.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/v1/user/follow:
    post:
      summary: 'Follow another user'
      operationId: followAnotherUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: success
                    type: object
                    example:
                      message: 'You are now following this user'
                    properties:
                      message:
                        type: string
                        example: 'You are now following this user'
                  -
                    description: 'if user profile is private and not following'
                    type: object
                    example:
                      message: 'Follow request sent'
                    properties:
                      message:
                        type: string
                        example: 'Follow request sent'
        400:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are already following this user'
                properties:
                  message:
                    type: string
                    example: 'You are already following this user'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user to follow'
                  example: 19
                  nullable: false
              required:
                - user_id
  /api/v1/user/unfollow:
    post:
      summary: 'Unfollow another user'
      operationId: unfollowAnotherUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are now unfollowing this user'
                properties:
                  message:
                    type: string
                    example: 'You are now unfollowing this user'
        400:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are not following this user'
                properties:
                  message:
                    type: string
                    example: 'You are not following this user'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user to unfollow'
                  example: 14
                  nullable: false
              required:
                - user_id
  /api/v1/user/request_follow/accept:
    post:
      summary: 'Accept Follow Request'
      operationId: acceptFollowRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are now following this user'
                properties:
                  message:
                    type: string
                    example: 'You are now following this user'
        400:
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Follow request not found'
                properties:
                  message:
                    type: string
                    example: 'Follow request not found'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user to accept follow request'
                  example: 10
                  nullable: false
              required:
                - user_id
  /api/v1/user/request_follow/reject:
    post:
      summary: 'Reject Follow Request'
      operationId: rejectFollowRequest
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Follow request removed'
                properties:
                  message:
                    type: string
                    example: 'Follow request removed'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user to reject follow request'
                  example: 13
                  nullable: false
              required:
                - user_id
  /api/v1/user/request_follows:
    get:
      summary: 'My Follow Requests'
      operationId: myFollowRequests
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  users: []
                properties:
                  users:
                    type: array
                    example: []
      tags:
        - User
  /api/v1/user/report:
    post:
      summary: 'Report a user'
      operationId: reportAUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Comment reported\",\n}"
        422:
          description: ''
          content:
            text/plain:
              schema:
                oneOf:
                  -
                    description: 'Invalid Form Fields'
                    type: string
                    example: '{"errors": ["user_id": ["The User Id field is required."] ]}'
                  -
                    description: 'Invalid Form Fields'
                    type: string
                    example: '{"message": "You have already reported this comment" ]}'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the comment.'
                  example: 1
                  nullable: false
                reason:
                  type: string
                  description: ''
                  example: in
                  nullable: false
                violation_level:
                  type: required
                  description: 'The violation level of this report'
                  example: harum
                  nullable: false
                violation_type:
                  type: required
                  description: 'The violation type of this report'
                  example: exercitationem
                  nullable: false
                also_block_user:
                  type: boolean
                  description: 'optional Whether to block the user or not.'
                  example: true
                  nullable: false
              required:
                - user_id
                - reason
  /api/v1/user/block:
    post:
      summary: 'Block a user'
      operationId: blockAUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"User blocked\",\n}"
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user.'
                  example: 1
                  nullable: false
                reason:
                  type: string
                  description: 'optional The reason for blocking the user.'
                  example: Spam
                  nullable: false
              required:
                - user_id
  /api/v1/user/unblock:
    post:
      summary: 'Unblock a user'
      operationId: unblockAUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"User unblocked\",\n}"
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user.'
                  example: 1
                  nullable: false
              required:
                - user_id
  /api/v1/user/my_blocked_users:
    get:
      summary: 'Get My Blocked Users List'
      operationId: getMyBlockedUsersList
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n data: {}\n}"
      tags:
        - User
  /api/v1/user/delete/request-otp:
    post:
      summary: 'Delete Account Request for OTP first (Phone No registered users only)'
      operationId: deleteAccountRequestForOTPFirstPhoneNoRegisteredUsersOnly
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'OTP sent to your registered mobile number.'
                properties:
                  message:
                    type: string
                    example: 'OTP sent to your registered mobile number.'
      tags:
        - User
  /api/v1/user/delete:
    post:
      summary: 'Delete My Account'
      operationId: deleteMyAccount
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Account deleted successfully.'
                properties:
                  message:
                    type: string
                    example: 'Account deleted successfully.'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: 'The reason for deleting the account.'
                  example: 'I am not using this account anymore.'
                  nullable: false
                otp:
                  type: string
                  description: 'The OTP sent to your registered mobile number(only applies to user registered with phone no).'
                  example: '123456'
                  nullable: false
              required:
                - reason
  /api/v1/user/tutorial-progress:
    post:
      summary: 'Save user tutorial progress'
      operationId: saveUserTutorialProgress
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tutorial progress saved'
                  tutorial_step: first_time_visit_mission_tab
                  completed_at: '2024-08-09 15:46:46'
                properties:
                  message:
                    type: string
                    example: 'Tutorial progress saved'
                  tutorial_step:
                    type: string
                    example: first_time_visit_mission_tab
                  completed_at:
                    type: string
                    example: '2024-08-09 15:46:46'
        422:
          description: 'Invalid Form Fields'
          content:
            text/plain:
              schema:
                type: string
                example: '{"errors": ["tutorial_step": ["The Tutorial Step field is required."] ]}'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tutorial_step:
                  type: string
                  description: 'The tutorial step.'
                  example: first_time_visit_mission_tab
                  nullable: false
              required:
                - tutorial_step
  /api/v1/user/last_known_location:
    post:
      summary: 'Update Last Known Location'
      operationId: updateLastKnownLocation
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Location updated'
                properties:
                  message:
                    type: string
                    example: 'Location updated'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lat:
                  type: string
                  description: "The lat of the user's last known location."
                  example: '3.123456'
                  nullable: false
                lng:
                  type: string
                  description: "The lng of the user's last known location."
                  example: '101.123456'
                  nullable: false
              required:
                - lat
                - lng
  /api/v1/users_by_id:
    get:
      summary: 'Get Users By IDs'
      operationId: getUsersByIDs
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                properties:
                  data:
                    type: object
                    properties: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_ids:
                  type: string
                  description: ''
                  example: dolores
                  nullable: false
              required:
                - user_ids
    parameters:
      -
        in: path
        name: user_ids
        description: 'The ids of the users.'
        example: '1,2,3'
        required: true
        schema:
          type: string
  '/api/v1/user/{user_id}':
    get:
      summary: 'Get a user'
      operationId: getAUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": {\n}"
      tags:
        - User
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 3
        required: true
        schema:
          type: integer
      -
        in: path
        name: user
        description: 'The id of the user.'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/user:
    get:
      summary: 'Get auth user details'
      operationId: getAuthUserDetails
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"user\": {\n},\n\"token\": \"\""
      tags:
        - User
    post:
      summary: 'Update User Details (name, username, bio, job_title, dob, gender, location, avatar, cover, article_categories)'
      operationId: updateUserDetailsnameUsernameBioJobTitleDobGenderLocationAvatarCoverArticleCategories
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"user\":\n{\n \"id\": 1,\n \"name\": \"John Doe\"\n \"username\": \"johndoe\"\n \"email\": \"johndoe@gmail.com\"\n \"verified_email\": true\n \"auth_provider\": \"email\"\n \"avatar\": \"https://domain.com/storage/avatars/1/avatar.jpg\"\n \"avatar_thumb\": \"https://domain.com/storage/avatars/1/avatar_thumb.jpg\"\n \"bio\": \"I am a developer\"\n \"cover\": \"https://domain.com/storage/covers/1/cover.jpg\"\n \"articles_published_count\": 0\n \"following_count\": 0\n \"followers_count\": 0\n \"has_completed_profile\": false\n \"has_avatar\": true\n \"point_balance\": 0\n \"unread_notifications_count\": 0\n \"is_following\": false\n \"dob\": \"1990-01-01\",\n \"gender\": \"male\",\n \"job_title\": \"Engineer\",\n \"country_id\": 1,\n \"state_id\": 1,\n \"category_ids\": [1,2,3]\n},\n\"message\": \"Field updated\"\n\n}"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: 'Error updating user details'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Error updating user details'
                  error: 'Error message'
                properties:
                  message:
                    type: string
                    example: 'Error updating user details'
                  error:
                    type: string
                    example: 'Error message'
      tags:
        - User
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                update_type:
                  type: string
                  description: 'Field to update.'
                  example: job_title
                  nullable: false
                name:
                  type: string
                  description: "Name of the user (Required if update_type is 'name')."
                  example: 'John Doe'
                  nullable: false
                username:
                  type: string
                  description: "Username of the user (Required if update_type is 'username')."
                  example: johndoe
                  nullable: false
                bio:
                  type: string
                  description: "Bio of the user (Required if update_type is 'bio')."
                  example: 'I am a developer'
                  nullable: false
                job_title:
                  type: string
                  description: "Job title of the user (Required if update_type is 'job_title')."
                  example: Developer
                  nullable: false
                day:
                  type: integer
                  description: "Day of the date of birth (Required if update_type is 'dob')."
                  example: 1
                  nullable: false
                month:
                  type: integer
                  description: "Month of the date of birth (Required if update_type is 'dob')."
                  example: 1
                  nullable: false
                year:
                  type: integer
                  description: "Year of the date of birth (Required if update_type is 'dob')."
                  example: 1990
                  nullable: false
                country_id:
                  type: integer
                  description: "Country id of the user (Required if update_type is 'location')."
                  example: 1
                  nullable: false
                state_id:
                  type: integer
                  description: "State id of the user (Required if update_type is 'location')."
                  example: 1
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: "One image file to upload,Avatar of the user (Required if update_type is 'avatar')."
                  nullable: false
                cover:
                  type: string
                  format: binary
                  description: "One image file to upload,Cover of the user (Required if update_type is 'cover')."
                  nullable: false
                category_ids:
                  type: array
                  description: "Array of article category ids (Required if update_type is 'article_categories')."
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
              required:
                - update_type
  '/api/v1/public/user/{user_id}':
    get:
      summary: 'Get a public user'
      operationId: getAPublicUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"user\": {\n}"
      tags:
        - User
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 3
        required: true
        schema:
          type: integer
      -
        in: path
        name: user
        description: 'The id of the user.'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/user/password:
    post:
      summary: 'Update user password (only for login with OTP)'
      operationId: updateUserPasswordonlyForLoginWithOTP
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Password updated\",\n\"user\":\n     * {\n \"id\": 1,\n \"name\": \"John Doe\"\n \"username\": \"johndoe\"\n \"email\": \"johndoe@gmail.com\"\n \"verified_email\": true\n \"auth_provider\": \"email\"\n \"avatar\": \"https://domain.com/storage/avatars/1/avatar.jpg\"\n \"avatar_thumb\": \"https://domain.com/storage/avatars/1/avatar_thumb.jpg\"\n \"bio\": \"I am a developer\"\n \"cover\": \"https://domain.com/storage/covers/1/cover.jpg\"\n \"articles_published_count\": 0\n \"following_count\": 0\n \"followers_count\": 0\n \"has_completed_profile\": false\n \"has_avatar\": true\n \"point_balance\": 0\n \"unread_notifications_count\": 0\n \"is_following\": false\n \"dob\": \"1990-01-01\",\n \"gender\": \"male\",\n \"job_title\": \"Engineer\",\n \"country_id\": 1,\n \"state_id\": 1,\n \"category_ids\": [1,2,3]\n},\n}"
        422:
          description: 'validation error'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"The given data was invalid.\",\n\"errors\": {\n\"old_password\": [\n \"The old password is incorrect\"\n],\n\"password\": [\n\"The password confirmation does not match.\"\n]\n}"
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: 'The old password of the user.'
                  example: abcd1234
                  nullable: false
                new_password:
                  type: string
                  description: 'The new password of the user.'
                  example: abcd1234
                  nullable: false
                new_password_confirmation:
                  type: string
                  description: 'The new password confirmation of the user.'
                  example: abcd1234
                  nullable: false
              required:
                - old_password
                - new_password
                - new_password_confirmation
  /api/v1/user/email:
    post:
      summary: 'Update User Email'
      operationId: updateUserEmail
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email updated'
                  email: johndoe@gmail.com
                  user: {  }
                properties:
                  message:
                    type: string
                    example: 'Email updated'
                  email:
                    type: string
                    example: johndoe@gmail.com
                  user:
                    type: object
                    properties: {  }
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        422:
          description: 'Email already verified for your account'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email already verified for your account'
                properties:
                  message:
                    type: string
                    example: 'Email already verified for your account'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                new_email:
                  type: string
                  description: 'Email of the user.'
                  example: john@gmail.com
                  nullable: false
                new_email_confirmation:
                  type: string
                  description: 'Email of the user.'
                  example: john@gmail.com
                  nullable: false
              required:
                - new_email
                - new_email_confirmation
  /api/v1/user/settings:
    get:
      summary: 'Get settings of logged in user'
      operationId: getSettingsOfLoggedInUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"name\": \"John Doe\",\n \"email\": \"johndoe@gmail.com\"\n \"username\": \"johndoe\",\n \"dob\": \"1990-01-01\",\n \"gender\": \"male\",\n \"bio\": \"Hello\",\n \"job_title\": \"Engineer\",\n \"country_id\": 1,\n \"state_id\": 1,\n \"avatar\": \"https://www.example.com/avatar.jpg\",\n \"avatar_thumb\": \"https://www.example.com/avatar_thumb.jpg\",\n \"category_ids\": [1,2,3]\n}"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: 'No settings found yet'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No settings found yet.'
                properties:
                  message:
                    type: string
                    example: 'No settings found yet.'
      tags:
        - 'User Settings'
  /api/v1/user/settings/phone_no/otp:
    post:
      summary: 'Update Phone No (send otp)'
      operationId: updatePhoneNosendOtp
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'OTP sent'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'OTP sent'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: 'Country code of the user.'
                  example: '60'
                  nullable: false
                phone_no:
                  type: string
                  description: 'Phone number of the user.'
                  example: '123456789'
                  nullable: false
              required:
                - country_code
                - phone_no
  /api/v1/user/settings/phone_no/verify_otp:
    post:
      summary: 'Update Phone No (Verify OTP)'
      operationId: updatePhoneNoVerifyOTP
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Phone No updated'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Phone No updated'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: 'Country code of the user.'
                  example: '60'
                  nullable: false
                phone_no:
                  type: string
                  description: 'Phone number of the user.'
                  example: '123456789'
                  nullable: false
                otp:
                  type: string
                  description: 'OTP of the user.'
                  example: '123456'
                  nullable: false
              required:
                - country_code
                - phone_no
                - otp
  /api/v1/user/settings/email:
    post:
      summary: 'Update User Email'
      operationId: updateUserEmail
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email updated'
                  email: johndoe@gmail.com
                properties:
                  message:
                    type: string
                    example: 'Email updated'
                  email:
                    type: string
                    example: johndoe@gmail.com
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        422:
          description: 'Email already verified for your account'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email already verified for your account'
                properties:
                  message:
                    type: string
                    example: 'Email already verified for your account'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Email of the user.'
                  example: john@gmail.com
                  nullable: false
              required:
                - email
  /api/v1/user/settings/verify/email:
    post:
      summary: 'Verify User Email with Token'
      operationId: verifyUserEmailWithToken
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email Verified'
                properties:
                  message:
                    type: string
                    example: 'Email Verified'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'Token of the user.'
                  example: '123456'
                  nullable: false
              required:
                - token
  /api/v1/user/settings/name:
    post:
      summary: 'Update User Name'
      operationId: updateUserName
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Name updated'
                  name: 'John Doe'
                properties:
                  message:
                    type: string
                    example: 'Name updated'
                  name:
                    type: string
                    example: 'John Doe'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                  nullable: false
              required:
                - name
  /api/v1/user/settings/article_categories:
    post:
      summary: 'Link Article Categories to User (used for interest tagging)'
      operationId: linkArticleCategoriesToUserusedForInterestTagging
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Article categories linked to user'
                  category_ids:
                    - 1
                    - 2
                    - 3
                properties:
                  message:
                    type: string
                    example: 'Article categories linked to user'
                  category_ids:
                    type: array
                    example:
                      - 1
                      - 2
                      - 3
                    items:
                      type: integer
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_ids:
                  type: array
                  description: 'Array of article category ids.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
              required:
                - category_ids
  /api/v1/user/settings/avatar/upload:
    post:
      summary: 'Upload or Update User Profile Picture'
      operationId: uploadOrUpdateUserProfilePicture
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Avatar uploaded'
                  avatar: url
                  avatar_thumb: url
                properties:
                  message:
                    type: string
                    example: 'Avatar uploaded'
                  avatar:
                    type: string
                    example: url
                  avatar_thumb:
                    type: string
                    example: url
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                  description: 'One image file to upload.'
                  nullable: false
              required:
                - avatar
  /api/v1/user/settings/cover/upload:
    post:
      summary: 'Upload or Update User Cover'
      operationId: uploadOrUpdateUserCover
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cover uploaded'
                  cover: url
                  cover_thumb: url
                properties:
                  message:
                    type: string
                    example: 'Cover uploaded'
                  cover:
                    type: string
                    example: url
                  cover_thumb:
                    type: string
                    example: url
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cover:
                  type: string
                  format: binary
                  description: 'One image file to upload.'
                  nullable: false
              required:
                - cover
  /api/v1/user/settings/username:
    post:
      summary: 'Update User Username'
      operationId: updateUserUsername
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Username updated'
                  username: johndoe
                properties:
                  message:
                    type: string
                    example: 'Username updated'
                  username:
                    type: string
                    example: johndoe
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'Username of the user.'
                  example: johndoe
                  nullable: false
              required:
                - username
  /api/v1/user/settings/bio:
    post:
      summary: 'Update User Bio'
      operationId: updateUserBio
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Bio updated'
                  bio: 'I am a software engineer'
                properties:
                  message:
                    type: string
                    example: 'Bio updated'
                  bio:
                    type: string
                    example: 'I am a software engineer'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bio:
                  type: string
                  description: 'Bio of the user.'
                  example: 'I am a software engineer'
                  nullable: false
              required:
                - bio
  /api/v1/user/settings/dob:
    post:
      summary: 'Update User Date of Birth'
      operationId: updateUserDateOfBirth
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Date of birth updated'
                  dob: '1990-01-01'
                properties:
                  message:
                    type: string
                    example: 'Date of birth updated'
                  dob:
                    type: string
                    example: '1990-01-01'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: integer
                  description: 'Day of the date of birth.'
                  example: 1
                  nullable: false
                month:
                  type: integer
                  description: 'Month of the date of birth.'
                  example: 1
                  nullable: false
                year:
                  type: integer
                  description: 'Year of the date of birth.'
                  example: 1990
                  nullable: false
              required:
                - day
                - month
                - year
  /api/v1/user/settings/gender:
    post:
      summary: 'Update User Save Gender'
      operationId: updateUserSaveGender
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Gender updated'
                  gender: male
                properties:
                  message:
                    type: string
                    example: 'Gender updated'
                  gender:
                    type: string
                    example: male
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gender:
                  type: string
                  description: ''
                  example: male
                  nullable: false
                  enum:
                    - male
                    - female
              required:
                - gender
  /api/v1/user/settings/location:
    post:
      summary: 'Update User Location'
      operationId: updateUserLocation
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Location updated\"\n\"country_id\": 1,\n\"state_id\": 1\n}"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_id:
                  type: integer
                  description: 'Country id of the user.'
                  example: 1
                  nullable: false
                state_id:
                  type: integer
                  description: 'State id of the user.'
                  example: 1
                  nullable: false
              required:
                - country_id
                - state_id
  /api/v1/user/settings/job-title:
    post:
      summary: 'Update User Job title'
      operationId: updateUserJobTitle
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Job Title updated'
                  job_title: 'Software Engineer'
                properties:
                  message:
                    type: string
                    example: 'Job Title updated'
                  job_title:
                    type: string
                    example: 'Software Engineer'
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job_title:
                  type: string
                  description: 'Job title of the user.'
                  example: 'Software Engineer'
                  nullable: false
              required:
                - job_title
  /api/v1/user/settings/language:
    post:
      summary: 'Save Language of User'
      operationId: saveLanguageOfUser
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Saved
                properties:
                  message:
                    type: string
                    example: Saved
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                last_lang:
                  type: string
                  description: ''
                  example: en
                  nullable: false
                  enum:
                    - en
                    - zh
                lang:
                  type: string
                  description: 'The language of the user.'
                  example: en/zh
                  nullable: false
              required:
                - last_lang
                - lang
  /api/v1/user/settings/postUpdatePassword:
    post:
      summary: 'Update user password (only for login with OTP)'
      operationId: updateUserPasswordonlyForLoginWithOTP
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password updated'
                properties:
                  message:
                    type: string
                    example: 'Password updated'
        422:
          description: 'validation error'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"The given data was invalid.\",\n\"errors\": {\n\"old_password\": [\n \"The old password is incorrect\"\n],\n\"password\": [\n\"The password confirmation does not match.\"\n]\n}"
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: 'The old password of the user.'
                  example: abcd1234
                  nullable: false
                password:
                  type: string
                  description: 'The new password of the user.'
                  example: abcd1234
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The new password confirmation of the user.'
                  example: abcd1234
                  nullable: false
              required:
                - old_password
                - password
                - password_confirmation
  /api/v1/user/settings/profile-privacy:
    post:
      summary: 'Profile Privacy Setting'
      operationId: profilePrivacySetting
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Profile privacy updated'
                  profile_privacy: public
                properties:
                  message:
                    type: string
                    example: 'Profile privacy updated'
                  profile_privacy:
                    type: string
                    example: public
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_privacy:
                  type: string
                  description: 'The profile privacy of the user.'
                  example: public
                  nullable: false
              required:
                - profile_privacy
  /api/v1/user/settings/referrals/my-code:
    get:
      summary: 'Referral - Get My Referral Code'
      operationId: referralGetMyReferralCode
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  referral_code: ABC123
                  message: 'Come and join with with referral code ABC123'
                properties:
                  referral_code:
                    type: string
                    example: ABC123
                  message:
                    type: string
                    example: 'Come and join with with referral code ABC123'
      tags:
        - 'User Settings'
  /api/v1/user/settings/referrals/save:
    post:
      summary: 'Referral - Save Referral'
      operationId: referralSaveReferral
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Referral saved'
                properties:
                  message:
                    type: string
                    example: 'Referral saved'
        422:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: 'User already referred by someone'
                    type: object
                    example:
                      message: 'User already referred by someone'
                    properties:
                      message:
                        type: string
                        example: 'User already referred by someone'
                  -
                    description: 'Referral code not found'
                    type: object
                    example:
                      message: 'Referral code not found'
                    properties:
                      message:
                        type: string
                        example: 'Referral code not found'
                  -
                    description: 'You cannot refer yourself'
                    type: object
                    example:
                      message: 'You cannot refer yourself'
                    properties:
                      message:
                        type: string
                        example: 'You cannot refer yourself'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                referral_code:
                  type: string
                  description: 'Referral code of the user.'
                  example: ABC123
                  nullable: false
              required:
                - referral_code
  /api/v1/user/settings/onesignal/save:
    post:
      summary: 'Save OneSignal Subscription Id'
      operationId: saveOneSignalSubscriptionId
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Saved
                properties:
                  message:
                    type: string
                    example: Saved
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onesignal_subscription_id:
                  type: string
                  description: 'The OneSignal subscription id.'
                  example: '123456'
                  nullable: false
              required:
                - onesignal_subscription_id
  /api/v1/user/settings/onesignal/user_id/save:
    post:
      summary: 'Save OneSignal User ID'
      operationId: saveOneSignalUserID
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Saved
                properties:
                  message:
                    type: string
                    example: Saved
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onesignal_user_id:
                  type: string
                  description: 'The OneSignal user id.'
                  example: '123456'
                  nullable: false
              required:
                - onesignal_user_id
  /api/v1/user/settings/card-tokenization:
    get:
      summary: 'Add a Card (Tokenization)'
      operationId: addACardTokenization
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"status\": \"success\",\n \"data\": {"
      tags:
        - 'User Settings'
  /api/v1/user/settings/cards:
    get:
      summary: 'Get User Cards'
      operationId: getUserCards
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  cards: []
                properties:
                  cards:
                    type: array
                    example: []
      tags:
        - 'User Settings'
  /api/v1/user/settings/card/remove:
    post:
      summary: 'Remove a Card'
      operationId: removeACard
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Card removed'
                properties:
                  message:
                    type: string
                    example: 'Card removed'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_id:
                  type: integer
                  description: 'The id of the card.'
                  example: 1
                  nullable: false
              required:
                - card_id
  /api/v1/user/settings/card/set-as-default:
    post:
      summary: 'Set Card as Default'
      operationId: setCardAsDefault
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Card set as default'
                properties:
                  message:
                    type: string
                    example: 'Card set as default'
      tags:
        - 'User Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_id:
                  type: integer
                  description: 'The id of the card.'
                  example: 1
                  nullable: false
              required:
                - card_id
  /api/v1/views:
    post:
      summary: "Record view for viewable\nThis is used for recording views for articles, comments, merchant offers, user profiles and location"
      operationId: recordViewForViewableThisIsUsedForRecordingViewsForArticlesCommentsMerchantOffersUserProfilesAndLocation
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'View recorded'
                properties:
                  message:
                    type: string
                    example: 'View recorded'
      tags:
        - View
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                viewable_type:
                  type: string
                  description: 'The type of the viewable.'
                  example: article/comment/merchant_offer/user_profile/location/store
                  nullable: false
                viewable_id:
                  type: integer
                  description: 'The id of the viewable.'
                  example: 1
                  nullable: false
              required:
                - viewable_type
                - viewable_id
  '/api/v1/views/{type}/{id}':
    get:
      summary: "Get views for viewable type\nThis is used for getting views for articles, comments, merchant offers, and user profiles"
      operationId: getViewsForViewableTypeThisIsUsedForGettingViewsForArticlesCommentsMerchantOffersAndUserProfiles
      description: ''
      parameters: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  views: []
                  total: 0
                properties:
                  views:
                    type: array
                    example: []
                  total:
                    type: integer
                    example: 0
      tags:
        - View
    parameters:
      -
        in: path
        name: type
        description: 'The type of the viewable.'
        example: article/comment/merchant_offer/user_profile/stpres
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The id of the viewable.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Article
    description: ''
  -
    name: Authentication
    description: ''
  -
    name: Campaigns
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Help Center'
    description: ''
  -
    name: Interactions
    description: ''
  -
    name: Location
    description: ''
  -
    name: Maintenance
    description: ''
  -
    name: Media
    description: ''
  -
    name: Merchant
    description: ''
  -
    name: Mission
    description: ''
  -
    name: Notifications
    description: ''
  -
    name: Other
    description: ''
  -
    name: Payment
    description: ''
  -
    name: Point
    description: ''
  -
    name: Product
    description: ''
  -
    name: 'Promotion Code'
    description: ''
  -
    name: Stores
    description: ''
  -
    name: Transaction
    description: ''
  -
    name: User
    description: ''
  -
    name: 'User Settings'
    description: ''
  -
    name: View
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You will received a token to authenticate user requests after you logged in.'
security:
  -
    default: []
